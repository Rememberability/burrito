--- /tmp/test-tmpfs/nilfs-4400/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:17:48.700527411 -0500
+++ /tmp/test-tmpfs/nilfs-4402/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:19:18.561552726 -0500
@@ -7,9 +7,6 @@
 #          check the "Enable assistive technologies" box,
 #          then log out and log back in.
 
-# Adapted from:
-#   http://developers-blog.org/blog/default/2010/08/21/Track-window-and-widget-events-with-AT-SPI
-
 # TODO: can I get PIDs of controlling processes of each window?
 
 '''
@@ -43,6 +40,10 @@
   whenever its title changes ... good for detecting webpage and terminal
   title changes
 
+
+Adapted from:
+   http://developers-blog.org/blog/default/2010/08/21/Track-window-and-widget-events-with-AT-SPI
+
 '''
 
 
--- /tmp/test-tmpfs/nilfs-4402/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:19:18.561552726 -0500
+++ /tmp/test-tmpfs/nilfs-4407/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:19:19.312512398 -0500
@@ -43,7 +43,6 @@
 
 Adapted from:
    http://developers-blog.org/blog/default/2010/08/21/Track-window-and-widget-events-with-AT-SPI
-
 '''
 
 
--- /tmp/test-tmpfs/nilfs-4407/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:19:19.312512398 -0500
+++ /tmp/test-tmpfs/nilfs-4411/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:19:53.152834906 -0500
@@ -60,8 +60,8 @@
   print
 
 
-# SUPER hacky way of getting the current URL string from Google
-# Chrome and Firefox ... there MUST be a better way :)
+# SUPER hacky way of getting the current URL text string from
+# Google Chrome and Firefox ... there MUST be a better way :)
 #
 # use Accerciser to find the exact location of the URL bar ...
 # note that this will BREAK if the user's Chrome/Firefox GUI even
--- /tmp/test-tmpfs/nilfs-4411/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:19:53.152834906 -0500
+++ /tmp/test-tmpfs/nilfs-4413/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:20:17.953766155 -0500
@@ -63,9 +63,11 @@
 # SUPER hacky way of getting the current URL text string from
 # Google Chrome and Firefox ... there MUST be a better way :)
 #
-# use Accerciser to find the exact location of the URL bar ...
-# note that this will BREAK if the user's Chrome/Firefox GUI even
+
+# use the accessibility API to find the exact location of the URL bar.
+# Note that this will BREAK if the user's Chrome/Firefox GUI even
 # looks slightly different than my own GUI:
+
 def getChromeUrlField(frameElt):
   return frameElt[0][0][2][0][0][1][0][1][1][0][0]
 
--- /tmp/test-tmpfs/nilfs-4413/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:20:17.953766155 -0500
+++ /tmp/test-tmpfs/nilfs-4429/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:20:19.097719898 -0500
@@ -67,7 +67,6 @@
 # use the accessibility API to find the exact location of the URL bar.
 # Note that this will BREAK if the user's Chrome/Firefox GUI even
 # looks slightly different than my own GUI:
-
 def getChromeUrlField(frameElt):
   return frameElt[0][0][2][0][0][1][0][1][1][0][0]
 
--- /tmp/test-tmpfs/nilfs-4429/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:20:19.097719898 -0500
+++ /tmp/test-tmpfs/nilfs-4432/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:22:12.022255533 -0500
@@ -17,6 +17,7 @@
   mouse and finish dragging
 
 - When you finish resizing a window, a 'window:activate' event fires
+  (doesn't seem to happen for Google Chrome, though)
 
 - 'window:minimize', 'window:maximize', and 'window:restore' are for
   minimizing, restoring, and maximizing windows, respectively
--- /tmp/test-tmpfs/nilfs-4451/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:22:18.328117128 -0500
+++ /tmp/test-tmpfs/nilfs-4560/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:31:43.112146936 -0500
@@ -145,7 +145,7 @@
 #reg.registerEventListener(stateChangedEventCallback, 'object:state-changed')
 
 
-
+'''
 # Detects when a frame becomes 'active', which happens when it comes
 # into focus or when it's finished being moved ... seems pretty robust
 def frameActive(event):
@@ -163,12 +163,13 @@
   print event
 
 reg.registerEventListener(frameTitleChange, 'object:property-change:accessible-name')
+'''
+
 
+def windowEvent(event):
+  print event
 
-#def windowEvent(event):
-#  print event
-#
-#reg.registerEventListener(windowEvent, 'window')
+reg.registerEventListener(windowEvent, 'window')
 
 
 try:
--- /tmp/test-tmpfs/nilfs-4560/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:31:43.112146936 -0500
+++ /tmp/test-tmpfs/nilfs-4564/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:39:25.554232185 -0500
@@ -166,10 +166,9 @@
 '''
 
 
-def windowEvent(event):
-  print event
-
-reg.registerEventListener(windowEvent, 'window')
+#def windowEvent(event):
+#  print event
+#reg.registerEventListener(windowEvent, 'window')
 
 
 try:
--- /tmp/test-tmpfs/nilfs-4564/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:39:25.554232185 -0500
+++ /tmp/test-tmpfs/nilfs-4571/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:39:39.860966698 -0500
@@ -145,7 +145,6 @@
 #reg.registerEventListener(stateChangedEventCallback, 'object:state-changed')
 
 
-'''
 # Detects when a frame becomes 'active', which happens when it comes
 # into focus or when it's finished being moved ... seems pretty robust
 def frameActive(event):
@@ -163,7 +162,6 @@
   print event
 
 reg.registerEventListener(frameTitleChange, 'object:property-change:accessible-name')
-'''
 
 
 #def windowEvent(event):
--- /tmp/test-tmpfs/nilfs-4571/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:39:39.860966698 -0500
+++ /tmp/test-tmpfs/nilfs-4576/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:40:22.422259378 -0500
@@ -164,9 +164,10 @@
 reg.registerEventListener(frameTitleChange, 'object:property-change:accessible-name')
 
 
-#def windowEvent(event):
-#  print event
-#reg.registerEventListener(windowEvent, 'window')
+def windowEvent(event):
+  print event
+
+reg.registerEventListener(windowEvent, 'window')
 
 
 try:
--- /tmp/test-tmpfs/nilfs-4576/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:40:22.422259378 -0500
+++ /tmp/test-tmpfs/nilfs-4598/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:40:51.407840868 -0500
@@ -165,6 +165,7 @@
 
 
 def windowEvent(event):
+  if event.source.getRoleName() != 'frame': return
   print event
 
 reg.registerEventListener(windowEvent, 'window')
--- /tmp/test-tmpfs/nilfs-4598/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:40:51.407840868 -0500
+++ /tmp/test-tmpfs/nilfs-4644/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:44:39.103622775 -0500
@@ -170,6 +170,10 @@
 
 reg.registerEventListener(windowEvent, 'window')
 
+def focusEvent(event):
+  print event
+reg.registerEventListener(focusEvent, 'focus')
+
 
 try:
    pyatspi.Registry.start()
--- /tmp/test-tmpfs/nilfs-4644/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:44:39.103622775 -0500
+++ /tmp/test-tmpfs/nilfs-4720/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:46:04.899696272 -0500
@@ -1,4 +1,4 @@
-# GUI tracer that works with the GNOME Accessibility API
+# GUI tracer that works with the Linux AT-SPI Accessibility API
 #
 # Tested on Fedora 14 running the GNOME GUI environment
 #
--- /tmp/test-tmpfs/nilfs-4720/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:46:04.899696272 -0500
+++ /tmp/test-tmpfs/nilfs-4723/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:50:08.430044816 -0500
@@ -42,6 +42,10 @@
   title changes
 
 
+'focus' events are kinda flaky, but they seem to be triggered when the
+mouse clicks on a particular GUI element like a panel or something.
+
+
 Adapted from:
    http://developers-blog.org/blog/default/2010/08/21/Track-window-and-widget-events-with-AT-SPI
 '''
--- /tmp/test-tmpfs/nilfs-4723/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:50:08.430044816 -0500
+++ /tmp/test-tmpfs/nilfs-4725/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:50:19.375188999 -0500
@@ -157,22 +157,19 @@
     print event
     print event.host_application
     print
-
-reg.registerEventListener(frameActive, 'object:state-changed:active')
+#reg.registerEventListener(frameActive, 'object:state-changed:active')
 
 
 def frameTitleChange(event):
   if event.source.getRoleName() != 'frame': return
   print event
-
-reg.registerEventListener(frameTitleChange, 'object:property-change:accessible-name')
+#reg.registerEventListener(frameTitleChange, 'object:property-change:accessible-name')
 
 
 def windowEvent(event):
   if event.source.getRoleName() != 'frame': return
   print event
-
-reg.registerEventListener(windowEvent, 'window')
+#reg.registerEventListener(windowEvent, 'window')
 
 def focusEvent(event):
   print event
--- /tmp/test-tmpfs/nilfs-4725/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:50:19.375188999 -0500
+++ /tmp/test-tmpfs/nilfs-4745/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:50:20.206124765 -0500
@@ -171,6 +171,7 @@
   print event
 #reg.registerEventListener(windowEvent, 'window')
 
+
 def focusEvent(event):
   print event
 reg.registerEventListener(focusEvent, 'focus')
--- /tmp/test-tmpfs/nilfs-4745/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:50:20.206124765 -0500
+++ /tmp/test-tmpfs/nilfs-4748/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:51:46.263847895 -0500
@@ -157,7 +157,7 @@
     print event
     print event.host_application
     print
-#reg.registerEventListener(frameActive, 'object:state-changed:active')
+reg.registerEventListener(frameActive, 'object:state-changed:active')
 
 
 def frameTitleChange(event):
@@ -174,7 +174,7 @@
 
 def focusEvent(event):
   print event
-reg.registerEventListener(focusEvent, 'focus')
+#reg.registerEventListener(focusEvent, 'focus')
 
 
 try:
--- /tmp/test-tmpfs/nilfs-4748/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:51:46.263847895 -0500
+++ /tmp/test-tmpfs/nilfs-4772/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:51:52.865025085 -0500
@@ -157,7 +157,8 @@
     print event
     print event.host_application
     print
-reg.registerEventListener(frameActive, 'object:state-changed:active')
+reg.registerEventListener(frameActive, 'object:state-changed')
+#reg.registerEventListener(frameActive, 'object:state-changed:active')
 
 
 def frameTitleChange(event):
--- /tmp/test-tmpfs/nilfs-4772/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:51:52.865025085 -0500
+++ /tmp/test-tmpfs/nilfs-4774/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:53:11.327016857 -0500
@@ -157,8 +157,7 @@
     print event
     print event.host_application
     print
-reg.registerEventListener(frameActive, 'object:state-changed')
-#reg.registerEventListener(frameActive, 'object:state-changed:active')
+reg.registerEventListener(frameActive, 'object:state-changed:active')
 
 
 def frameTitleChange(event):
--- /tmp/test-tmpfs/nilfs-4774/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:53:11.327016857 -0500
+++ /tmp/test-tmpfs/nilfs-4776/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:53:14.061727110 -0500
@@ -157,13 +157,13 @@
     print event
     print event.host_application
     print
-reg.registerEventListener(frameActive, 'object:state-changed:active')
+#reg.registerEventListener(frameActive, 'object:state-changed:active')
 
 
 def frameTitleChange(event):
   if event.source.getRoleName() != 'frame': return
   print event
-#reg.registerEventListener(frameTitleChange, 'object:property-change:accessible-name')
+reg.registerEventListener(frameTitleChange, 'object:property-change:accessible-name')
 
 
 def windowEvent(event):
--- /tmp/test-tmpfs/nilfs-4776/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:53:14.061727110 -0500
+++ /tmp/test-tmpfs/nilfs-4827/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:53:17.686345494 -0500
@@ -163,7 +163,8 @@
 def frameTitleChange(event):
   if event.source.getRoleName() != 'frame': return
   print event
-reg.registerEventListener(frameTitleChange, 'object:property-change:accessible-name')
+reg.registerEventListener(frameTitleChange, 'object:property-change')
+#reg.registerEventListener(frameTitleChange, 'object:property-change:accessible-name')
 
 
 def windowEvent(event):
--- /tmp/test-tmpfs/nilfs-4827/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:53:17.686345494 -0500
+++ /tmp/test-tmpfs/nilfs-4855/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:55:39.429357227 -0500
@@ -161,7 +161,7 @@
 
 
 def frameTitleChange(event):
-  if event.source.getRoleName() != 'frame': return
+  #if event.source.getRoleName() != 'frame': return
   print event
 reg.registerEventListener(frameTitleChange, 'object:property-change')
 #reg.registerEventListener(frameTitleChange, 'object:property-change:accessible-name')
--- /tmp/test-tmpfs/nilfs-4855/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:55:39.429357227 -0500
+++ /tmp/test-tmpfs/nilfs-4859/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:56:12.867783227 -0500
@@ -161,10 +161,9 @@
 
 
 def frameTitleChange(event):
-  #if event.source.getRoleName() != 'frame': return
+  if event.source.getRoleName() != 'frame': return
   print event
-reg.registerEventListener(frameTitleChange, 'object:property-change')
-#reg.registerEventListener(frameTitleChange, 'object:property-change:accessible-name')
+reg.registerEventListener(frameTitleChange, 'object:property-change:accessible-name')
 
 
 def windowEvent(event):
--- /tmp/test-tmpfs/nilfs-4859/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:56:12.867783227 -0500
+++ /tmp/test-tmpfs/nilfs-4861/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:56:28.006672081 -0500
@@ -157,23 +157,26 @@
     print event
     print event.host_application
     print
-#reg.registerEventListener(frameActive, 'object:state-changed:active')
+reg.registerEventListener(frameActive, 'object:state-changed:active')
 
 
 def frameTitleChange(event):
   if event.source.getRoleName() != 'frame': return
   print event
+  print event.host_application
 reg.registerEventListener(frameTitleChange, 'object:property-change:accessible-name')
 
 
 def windowEvent(event):
   if event.source.getRoleName() != 'frame': return
   print event
+  print event.host_application
 #reg.registerEventListener(windowEvent, 'window')
 
 
 def focusEvent(event):
   print event
+  print event.host_application
 #reg.registerEventListener(focusEvent, 'focus')
 
 
--- /tmp/test-tmpfs/nilfs-4861/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:56:28.006672081 -0500
+++ /tmp/test-tmpfs/nilfs-4866/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:56:30.411498597 -0500
@@ -171,13 +171,13 @@
   if event.source.getRoleName() != 'frame': return
   print event
   print event.host_application
-#reg.registerEventListener(windowEvent, 'window')
+reg.registerEventListener(windowEvent, 'window')
 
 
 def focusEvent(event):
   print event
   print event.host_application
-#reg.registerEventListener(focusEvent, 'focus')
+reg.registerEventListener(focusEvent, 'focus')
 
 
 try:
--- /tmp/test-tmpfs/nilfs-4866/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:56:30.411498597 -0500
+++ /tmp/test-tmpfs/nilfs-4869/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:56:43.044600438 -0500
@@ -156,7 +156,6 @@
   if event.detail1 == 1:
     print event
     print event.host_application
-    print
 reg.registerEventListener(frameActive, 'object:state-changed:active')
 
 
--- /tmp/test-tmpfs/nilfs-4869/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:56:43.044600438 -0500
+++ /tmp/test-tmpfs/nilfs-4981/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:56:59.437467592 -0500
@@ -155,27 +155,23 @@
   if event.source.getRoleName() != 'frame': return
   if event.detail1 == 1:
     print event
-    print event.host_application
 reg.registerEventListener(frameActive, 'object:state-changed:active')
 
 
 def frameTitleChange(event):
   if event.source.getRoleName() != 'frame': return
   print event
-  print event.host_application
 reg.registerEventListener(frameTitleChange, 'object:property-change:accessible-name')
 
 
 def windowEvent(event):
   if event.source.getRoleName() != 'frame': return
   print event
-  print event.host_application
 reg.registerEventListener(windowEvent, 'window')
 
 
 def focusEvent(event):
   print event
-  print event.host_application
 reg.registerEventListener(focusEvent, 'focus')
 
 
--- /tmp/test-tmpfs/nilfs-4981/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 20:56:59.437467592 -0500
+++ /tmp/test-tmpfs/nilfs-4988/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:13:45.687786802 -0500
@@ -9,6 +9,8 @@
 
 # TODO: can I get PIDs of controlling processes of each window?
 
+# TODO: the 'nautilus' desktop frame tells us the resolution of our GUI
+
 '''
 Notes about window events:
 
--- /tmp/test-tmpfs/nilfs-4988/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:13:45.687786802 -0500
+++ /tmp/test-tmpfs/nilfs-4992/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:16:44.329440065 -0500
@@ -70,7 +70,8 @@
 # SUPER hacky way of getting the current URL text string from
 # Google Chrome and Firefox ... there MUST be a better way :)
 #
-
+# Use printDesktopTree.py to find out the exact path to the URL boxes
+#
 # use the accessibility API to find the exact location of the URL bar.
 # Note that this will BREAK if the user's Chrome/Firefox GUI even
 # looks slightly different than my own GUI:
--- /tmp/test-tmpfs/nilfs-4992/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:16:44.329440065 -0500
+++ /tmp/test-tmpfs/nilfs-5000/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:17:16.995796725 -0500
@@ -79,7 +79,7 @@
   return frameElt[0][0][2][0][0][1][0][1][1][0][0]
 
 def getFirefoxUrlField(frameElt):
-  return frameElt[11][6][1]
+  return frameElt[10][6][1]
 
 
 def windowEventCallback(event):
--- /tmp/test-tmpfs/nilfs-5000/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:17:16.995796725 -0500
+++ /tmp/test-tmpfs/nilfs-5004/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:19:32.219530516 -0500
@@ -83,9 +83,6 @@
 
 
 def windowEventCallback(event):
-  print event
-  print
-  return # stent
   for app in desktop:
     if app:
       print app
--- /tmp/test-tmpfs/nilfs-5004/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:19:32.219530516 -0500
+++ /tmp/test-tmpfs/nilfs-5006/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:19:55.445198075 -0500
@@ -84,7 +84,7 @@
 
 def windowEventCallback(event):
   for app in desktop:
-    if app:
+    if app and app.name in ('google-chrome', 'Firefox'):
       print app
       for child in app:
         if child.getRoleName() == 'frame':
@@ -141,7 +141,7 @@
               print '  CHANGED window URL bar:', urlString
 
 
-#reg.registerEventListener(windowEventCallback, 'window')
+reg.registerEventListener(windowEventCallback, 'window')
 
 #reg.registerEventListener(genericEventCallback, 'focus') # doesn't seem to work well
 
--- /tmp/test-tmpfs/nilfs-5006/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:19:55.445198075 -0500
+++ /tmp/test-tmpfs/nilfs-5013/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:19:59.005148437 -0500
@@ -167,7 +167,7 @@
 def windowEvent(event):
   if event.source.getRoleName() != 'frame': return
   print event
-reg.registerEventListener(windowEvent, 'window')
+#reg.registerEventListener(windowEvent, 'window')
 
 
 def focusEvent(event):
--- /tmp/test-tmpfs/nilfs-5013/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:19:59.005148437 -0500
+++ /tmp/test-tmpfs/nilfs-5021/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:20:45.888526004 -0500
@@ -141,7 +141,7 @@
               print '  CHANGED window URL bar:', urlString
 
 
-reg.registerEventListener(windowEventCallback, 'window')
+#reg.registerEventListener(windowEventCallback, 'window')
 
 #reg.registerEventListener(genericEventCallback, 'focus') # doesn't seem to work well
 
@@ -167,7 +167,7 @@
 def windowEvent(event):
   if event.source.getRoleName() != 'frame': return
   print event
-#reg.registerEventListener(windowEvent, 'window')
+reg.registerEventListener(windowEvent, 'window')
 
 
 def focusEvent(event):
--- /tmp/test-tmpfs/nilfs-5021/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:20:45.888526004 -0500
+++ /tmp/test-tmpfs/nilfs-5030/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:23:34.617704049 -0500
@@ -55,18 +55,10 @@
 
 import pyatspi
 
-# get the Registry singleton
-reg = pyatspi.Registry()
-
-# get desktop
-desktop = reg.getDesktop(0)
+reg = pyatspi.Registry()    # get the Registry singleton
+desktop = reg.getDesktop(0) # get desktop
  
 
-def genericEventCallback(event):
-  print "GENERIC:", event
-  print
-
-
 # SUPER hacky way of getting the current URL text string from
 # Google Chrome and Firefox ... there MUST be a better way :)
 #
@@ -143,8 +135,6 @@
 
 #reg.registerEventListener(windowEventCallback, 'window')
 
-#reg.registerEventListener(genericEventCallback, 'focus') # doesn't seem to work well
-
 
 #reg.registerEventListener(stateChangedEventCallback, 'object:state-changed')
 
--- /tmp/test-tmpfs/nilfs-5030/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:23:34.617704049 -0500
+++ /tmp/test-tmpfs/nilfs-5034/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:25:08.778920170 -0500
@@ -75,8 +75,10 @@
 
 
 def windowEventCallback(event):
+
+def printAllWindowInfo():
   for app in desktop:
-    if app and app.name in ('google-chrome', 'Firefox'):
+    if app:
       print app
       for child in app:
         if child.getRoleName() == 'frame':
--- /tmp/test-tmpfs/nilfs-5034/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:25:08.778920170 -0500
+++ /tmp/test-tmpfs/nilfs-5038/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:25:50.341617509 -0500
@@ -79,25 +79,27 @@
 def printAllWindowInfo():
   for app in desktop:
     if app:
-      print app
-      for child in app:
-        if child.getRoleName() == 'frame':
-          print '  window title:', child.name
-          comp = child.queryComponent()
-          print '    abs. position:', comp.getPosition(0)
-          #print '    rel. position:', comp.getPosition(1)
-          print '    size:', comp.getSize()
-
-          urlField = None
-          if app.name == 'google-chrome':
-            urlField = getChromeUrlField(child)
-          elif app.name == 'Firefox':
-            urlField = getFirefoxUrlField(child)
-
-          if urlField:
-            urlTextField = urlField.queryEditableText()
-            urlString = urlTextField.getText(0, urlTextField.characterCount)
-            print '    URL bar:', urlString
+      for frame in app:
+        # sometimes apps will have non-frame children ...
+        if frame.getRoleName() != 'frame':
+          continue
+
+        print '  window title:', frame.name
+        comp = frame.queryComponent()
+        print '    abs. position:', comp.getPosition(0)
+        #print '    rel. position:', comp.getPosition(1)
+        print '    size:', comp.getSize()
+
+        urlField = None
+        if app.name == 'google-chrome':
+          urlField = getChromeUrlField(frame)
+        elif app.name == 'Firefox':
+          urlField = getFirefoxUrlField(frame)
+
+        if urlField:
+          urlTextField = urlField.queryEditableText()
+          urlString = urlTextField.getText(0, urlTextField.characterCount)
+          print '    URL bar:', urlString
   print '---'
 
 
--- /tmp/test-tmpfs/nilfs-5038/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:25:50.341617509 -0500
+++ /tmp/test-tmpfs/nilfs-5041/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:26:24.855384210 -0500
@@ -81,9 +81,9 @@
     if app:
       for frame in app:
         # sometimes apps will have non-frame children ...
-        if frame.getRoleName() != 'frame':
-          continue
+        if frame.getRoleName() != 'frame': continue
 
+        print 'App:', app.name
         print '  window title:', frame.name
         comp = frame.queryComponent()
         print '    abs. position:', comp.getPosition(0)
--- /tmp/test-tmpfs/nilfs-5045/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:26:30.520347400 -0500
+++ /tmp/test-tmpfs/nilfs-5046/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:26:40.891281057 -0500
@@ -9,8 +9,6 @@
 
 # TODO: can I get PIDs of controlling processes of each window?
 
-# TODO: the 'nautilus' desktop frame tells us the resolution of our GUI
-
 '''
 Notes about window events:
 
@@ -100,6 +98,8 @@
           urlTextField = urlField.queryEditableText()
           urlString = urlTextField.getText(0, urlTextField.characterCount)
           print '    URL bar:', urlString
+
+        # TODO: the 'nautilus' desktop frame tells us the resolution of our GUI
   print '---'
 
 
--- /tmp/test-tmpfs/nilfs-5046/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:26:40.891281057 -0500
+++ /tmp/test-tmpfs/nilfs-5049/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:26:44.664257254 -0500
@@ -72,8 +72,6 @@
   return frameElt[10][6][1]
 
 
-def windowEventCallback(event):
-
 def printAllWindowInfo():
   for app in desktop:
     if app:
--- /tmp/test-tmpfs/nilfs-5053/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:26:51.250216121 -0500
+++ /tmp/test-tmpfs/nilfs-5063/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:27:09.067107465 -0500
@@ -147,23 +147,27 @@
   if event.source.getRoleName() != 'frame': return
   if event.detail1 == 1:
     print event
+    printAllWindowInfo()
 reg.registerEventListener(frameActive, 'object:state-changed:active')
 
 
 def frameTitleChange(event):
   if event.source.getRoleName() != 'frame': return
   print event
+  printAllWindowInfo()
 reg.registerEventListener(frameTitleChange, 'object:property-change:accessible-name')
 
 
 def windowEvent(event):
   if event.source.getRoleName() != 'frame': return
   print event
+  printAllWindowInfo()
 reg.registerEventListener(windowEvent, 'window')
 
 
 def focusEvent(event):
   print event
+  printAllWindowInfo()
 reg.registerEventListener(focusEvent, 'focus')
 
 
--- /tmp/test-tmpfs/nilfs-5063/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:27:09.067107465 -0500
+++ /tmp/test-tmpfs/nilfs-5065/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:30:42.127714145 -0500
@@ -96,8 +96,6 @@
           urlTextField = urlField.queryEditableText()
           urlString = urlTextField.getText(0, urlTextField.characterCount)
           print '    URL bar:', urlString
-
-        # TODO: the 'nautilus' desktop frame tells us the resolution of our GUI
   print '---'
 
 
--- /tmp/test-tmpfs/nilfs-5073/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:30:43.654557422 -0500
+++ /tmp/test-tmpfs/nilfs-5075/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:31:27.127191704 -0500
@@ -80,11 +80,11 @@
         if frame.getRoleName() != 'frame': continue
 
         print 'App:', app.name
-        print '  window title:', frame.name
+        print 'Window:', frame.name
         comp = frame.queryComponent()
-        print '    abs. position:', comp.getPosition(0)
-        #print '    rel. position:', comp.getPosition(1)
-        print '    size:', comp.getSize()
+        print 'Position:', comp.getPosition(0)
+        print '    rel. position:', comp.getPosition(1)
+        print 'Size:', comp.getSize()
 
         urlField = None
         if app.name == 'google-chrome':
--- /tmp/test-tmpfs/nilfs-5075/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:31:27.127191704 -0500
+++ /tmp/test-tmpfs/nilfs-5081/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:31:29.436964898 -0500
@@ -83,7 +83,7 @@
         print 'Window:', frame.name
         comp = frame.queryComponent()
         print 'Position:', comp.getPosition(0)
-        print '    rel. position:', comp.getPosition(1)
+        print 'Rel. position:', comp.getPosition(1)
         print 'Size:', comp.getSize()
 
         urlField = None
--- /tmp/test-tmpfs/nilfs-5081/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:31:29.436964898 -0500
+++ /tmp/test-tmpfs/nilfs-5085/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:32:00.047006962 -0500
@@ -80,11 +80,10 @@
         if frame.getRoleName() != 'frame': continue
 
         print 'App:', app.name
-        print 'Window:', frame.name
+        print '  Window:', frame.name
         comp = frame.queryComponent()
-        print 'Position:', comp.getPosition(0)
-        print 'Rel. position:', comp.getPosition(1)
-        print 'Size:', comp.getSize()
+        print '  Position:', comp.getPosition(0)
+        print '  Size:', comp.getSize()
 
         urlField = None
         if app.name == 'google-chrome':
@@ -95,7 +94,7 @@
         if urlField:
           urlTextField = urlField.queryEditableText()
           urlString = urlTextField.getText(0, urlTextField.characterCount)
-          print '    URL bar:', urlString
+          print '  URL:', urlString
   print '---'
 
 
--- /tmp/test-tmpfs/nilfs-5090/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:32:08.252228999 -0500
+++ /tmp/test-tmpfs/nilfs-5095/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:32:46.331699069 -0500
@@ -162,10 +162,13 @@
 reg.registerEventListener(windowEvent, 'window')
 
 
+# Not too reliable
+'''
 def focusEvent(event):
   print event
   printAllWindowInfo()
 reg.registerEventListener(focusEvent, 'focus')
+'''
 
 
 try:
--- /tmp/test-tmpfs/nilfs-5095/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:32:46.331699069 -0500
+++ /tmp/test-tmpfs/nilfs-5100/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:33:12.612338360 -0500
@@ -159,7 +159,7 @@
   if event.source.getRoleName() != 'frame': return
   print event
   printAllWindowInfo()
-reg.registerEventListener(windowEvent, 'window')
+reg.registerEventListener(windowEvent, 'window:maximize')
 
 
 # Not too reliable
--- /tmp/test-tmpfs/nilfs-5100/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:33:12.612338360 -0500
+++ /tmp/test-tmpfs/nilfs-5103/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:33:33.195531304 -0500
@@ -160,6 +160,7 @@
   print event
   printAllWindowInfo()
 reg.registerEventListener(windowEvent, 'window:maximize')
+('window:minimize', 'window:maximize', 'window:restore', 'window:create')
 
 
 # Not too reliable
--- /tmp/test-tmpfs/nilfs-5103/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:33:33.195531304 -0500
+++ /tmp/test-tmpfs/nilfs-5107/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:33:39.954945756 -0500
@@ -145,20 +145,20 @@
   if event.detail1 == 1:
     print event
     printAllWindowInfo()
-reg.registerEventListener(frameActive, 'object:state-changed:active')
+#reg.registerEventListener(frameActive, 'object:state-changed:active')
 
 
 def frameTitleChange(event):
   if event.source.getRoleName() != 'frame': return
   print event
   printAllWindowInfo()
-reg.registerEventListener(frameTitleChange, 'object:property-change:accessible-name')
+#reg.registerEventListener(frameTitleChange, 'object:property-change:accessible-name')
 
 
 def windowEvent(event):
   if event.source.getRoleName() != 'frame': return
   print event
-  printAllWindowInfo()
+  #printAllWindowInfo()
 reg.registerEventListener(windowEvent, 'window:maximize')
 ('window:minimize', 'window:maximize', 'window:restore', 'window:create')
 
--- /tmp/test-tmpfs/nilfs-5107/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:33:39.954945756 -0500
+++ /tmp/test-tmpfs/nilfs-5110/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:34:06.050721115 -0500
@@ -159,8 +159,7 @@
   if event.source.getRoleName() != 'frame': return
   print event
   #printAllWindowInfo()
-reg.registerEventListener(windowEvent, 'window:maximize')
-('window:minimize', 'window:maximize', 'window:restore', 'window:create')
+reg.registerEventListener(windowEvent, ('window:minimize', 'window:maximize', 'window:restore', 'window:create'))
 
 
 # Not too reliable
--- /tmp/test-tmpfs/nilfs-5110/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:34:06.050721115 -0500
+++ /tmp/test-tmpfs/nilfs-5116/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:34:19.380606464 -0500
@@ -159,7 +159,7 @@
   if event.source.getRoleName() != 'frame': return
   print event
   #printAllWindowInfo()
-reg.registerEventListener(windowEvent, ('window:minimize', 'window:maximize', 'window:restore', 'window:create'))
+reg.registerEventListener(windowEvent, 'window:minimize,window:maximize,window:restore,window:create')
 
 
 # Not too reliable
--- /tmp/test-tmpfs/nilfs-5116/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:34:19.380606464 -0500
+++ /tmp/test-tmpfs/nilfs-5123/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:34:49.059176241 -0500
@@ -159,7 +159,10 @@
   if event.source.getRoleName() != 'frame': return
   print event
   #printAllWindowInfo()
-reg.registerEventListener(windowEvent, 'window:minimize,window:maximize,window:restore,window:create')
+reg.registerEventListener(windowEvent, 'window:create')
+reg.registerEventListener(windowEvent, 'window:minimize')
+reg.registerEventListener(windowEvent, 'window:maximize')
+reg.registerEventListener(windowEvent, 'window:restore')
 
 
 # Not too reliable
--- /tmp/test-tmpfs/nilfs-5123/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:34:49.059176241 -0500
+++ /tmp/test-tmpfs/nilfs-5147/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:35:48.731498219 -0500
@@ -98,61 +98,21 @@
   print '---'
 
 
-def stateChangedEventCallback(event):
-
-  if event.source.getRoleName() != 'frame': return
-
-  print event
-  print
-  return # stent
-
-  # filter to make it less inefficient:
-  if event.source.getRoleName() != 'text':
-    return
-
-  evt_app = event.source.getApplication().name
-  if evt_app != 'google-chrome' and evt_app != 'Firefox':
-    return
-
-
-  # TODO: this is really inefficient right now ... store these fields in
-  # a local cache somewhere :)
-  for app in desktop:
-    if app:
-      if app.name in ('google-chrome', 'Firefox'):
-        for child in app:
-          if child.getRoleName() == 'frame':
-            if app.name == 'google-chrome':
-              urlField = getChromeUrlField(child)
-            else:
-              urlField = getFirefoxUrlField(child)
-            if event.source == urlField:
-              urlTextField = urlField.queryEditableText()
-              urlString = urlTextField.getText(0, urlTextField.characterCount)
-              print '  CHANGED window URL bar:', urlString
-
-
-#reg.registerEventListener(windowEventCallback, 'window')
-
-
-#reg.registerEventListener(stateChangedEventCallback, 'object:state-changed')
-
-
 # Detects when a frame becomes 'active', which happens when it comes
 # into focus or when it's finished being moved ... seems pretty robust
 def frameActive(event):
   if event.source.getRoleName() != 'frame': return
   if event.detail1 == 1:
     print event
-    printAllWindowInfo()
-#reg.registerEventListener(frameActive, 'object:state-changed:active')
+    #printAllWindowInfo()
+reg.registerEventListener(frameActive, 'object:state-changed:active')
 
 
 def frameTitleChange(event):
   if event.source.getRoleName() != 'frame': return
   print event
-  printAllWindowInfo()
-#reg.registerEventListener(frameTitleChange, 'object:property-change:accessible-name')
+  #printAllWindowInfo()
+reg.registerEventListener(frameTitleChange, 'object:property-change:accessible-name')
 
 
 def windowEvent(event):
--- /tmp/test-tmpfs/nilfs-5147/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:35:48.731498219 -0500
+++ /tmp/test-tmpfs/nilfs-5174/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:39:00.934157382 -0500
@@ -102,23 +102,23 @@
 # into focus or when it's finished being moved ... seems pretty robust
 def frameActive(event):
   if event.source.getRoleName() != 'frame': return
-  if event.detail1 == 1:
-    print event
-    #printAllWindowInfo()
+  if event.detail1 != 1: return
+  print event
+  printAllWindowInfo()
 reg.registerEventListener(frameActive, 'object:state-changed:active')
 
 
 def frameTitleChange(event):
   if event.source.getRoleName() != 'frame': return
   print event
-  #printAllWindowInfo()
+  printAllWindowInfo()
 reg.registerEventListener(frameTitleChange, 'object:property-change:accessible-name')
 
 
 def windowEvent(event):
   if event.source.getRoleName() != 'frame': return
   print event
-  #printAllWindowInfo()
+  printAllWindowInfo()
 reg.registerEventListener(windowEvent, 'window:create')
 reg.registerEventListener(windowEvent, 'window:minimize')
 reg.registerEventListener(windowEvent, 'window:maximize')
--- /tmp/test-tmpfs/nilfs-5174/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:39:00.934157382 -0500
+++ /tmp/test-tmpfs/nilfs-5220/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:41:55.937007838 -0500
@@ -93,7 +93,14 @@
 
         if urlField:
           urlTextField = urlField.queryEditableText()
-          urlString = urlTextField.getText(0, urlTextField.characterCount)
+
+          # for some reason, google-chrome puts an extra 'junk'
+          # character at the end of urlString
+          nChars = urlTextField.characterCount
+          if app.name == 'google-chrome':
+            assert nChars > 0
+            nChars -= 1
+          urlString = urlTextField.getText(0, nChars)
           print '  URL:', urlString
   print '---'
 
--- /tmp/test-tmpfs/nilfs-5223/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:44:16.724013059 -0500
+++ /tmp/test-tmpfs/nilfs-5242/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:44:28.461472199 -0500
@@ -101,7 +101,7 @@
             assert nChars > 0
             nChars -= 1
           urlString = urlTextField.getText(0, nChars)
-          print '  URL:', urlString
+          print '  URL:', urlString, nChars
   print '---'
 
 
--- /tmp/test-tmpfs/nilfs-5242/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:44:28.461472199 -0500
+++ /tmp/test-tmpfs/nilfs-5251/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:45:17.854262957 -0500
@@ -99,7 +99,7 @@
           nChars = urlTextField.characterCount
           if app.name == 'google-chrome':
             assert nChars > 0
-            nChars -= 1
+            nChars -= 2
           urlString = urlTextField.getText(0, nChars)
           print '  URL:', urlString, nChars
   print '---'
--- /tmp/test-tmpfs/nilfs-5251/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:45:17.854262957 -0500
+++ /tmp/test-tmpfs/nilfs-5343/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:46:19.015671033 -0500
@@ -94,8 +94,8 @@
         if urlField:
           urlTextField = urlField.queryEditableText()
 
-          # for some reason, google-chrome puts an extra 'junk'
-          # character at the end of urlString
+          # for some weird reason, google-chrome puts an extra 'junk'
+          # two bytes at the end of urlString, so adjust accordingly
           nChars = urlTextField.characterCount
           if app.name == 'google-chrome':
             assert nChars > 0
--- /tmp/test-tmpfs/nilfs-5343/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:46:19.015671033 -0500
+++ /tmp/test-tmpfs/nilfs-5366/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:49:34.673347051 -0500
@@ -101,7 +101,7 @@
             assert nChars > 0
             nChars -= 2
           urlString = urlTextField.getText(0, nChars)
-          print '  URL:', urlString, nChars
+          print '  URL:', urlString
   print '---'
 
 
--- /tmp/test-tmpfs/nilfs-5366/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:49:34.673347051 -0500
+++ /tmp/test-tmpfs/nilfs-5368/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:52:49.345325210 -0500
@@ -115,11 +115,12 @@
 reg.registerEventListener(frameActive, 'object:state-changed:active')
 
 
-def frameTitleChange(event):
+def frameChange(event):
   if event.source.getRoleName() != 'frame': return
   print event
   printAllWindowInfo()
-reg.registerEventListener(frameTitleChange, 'object:property-change:accessible-name')
+reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
+reg.registerEventListener(frameChange, 'object:bounds-changed')
 
 
 def windowEvent(event):
--- /tmp/test-tmpfs/nilfs-5371/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:52:50.771285190 -0500
+++ /tmp/test-tmpfs/nilfs-5385/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:52:58.506069084 -0500
@@ -73,6 +73,7 @@
 
 
 def printAllWindowInfo():
+  return
   for app in desktop:
     if app:
       for frame in app:
--- /tmp/test-tmpfs/nilfs-5385/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:52:58.506069084 -0500
+++ /tmp/test-tmpfs/nilfs-5389/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:53:54.485552782 -0500
@@ -121,13 +121,6 @@
   print event
   printAllWindowInfo()
 reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
-reg.registerEventListener(frameChange, 'object:bounds-changed')
-
-
-def windowEvent(event):
-  if event.source.getRoleName() != 'frame': return
-  print event
-  printAllWindowInfo()
 reg.registerEventListener(windowEvent, 'window:create')
 reg.registerEventListener(windowEvent, 'window:minimize')
 reg.registerEventListener(windowEvent, 'window:maximize')
--- /tmp/test-tmpfs/nilfs-5389/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:53:54.485552782 -0500
+++ /tmp/test-tmpfs/nilfs-5411/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:54:08.141195308 -0500
@@ -121,10 +121,10 @@
   print event
   printAllWindowInfo()
 reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
-reg.registerEventListener(windowEvent, 'window:create')
-reg.registerEventListener(windowEvent, 'window:minimize')
-reg.registerEventListener(windowEvent, 'window:maximize')
-reg.registerEventListener(windowEvent, 'window:restore')
+reg.registerEventListener(frameChange, 'window:create')
+reg.registerEventListener(frameChange, 'window:minimize')
+reg.registerEventListener(frameChange, 'window:maximize')
+reg.registerEventListener(frameChange, 'window:restore')
 
 
 # Not too reliable
--- /tmp/test-tmpfs/nilfs-5411/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:54:08.141195308 -0500
+++ /tmp/test-tmpfs/nilfs-5428/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:55:41.898865632 -0500
@@ -128,12 +128,10 @@
 
 
 # Not too reliable
-'''
 def focusEvent(event):
   print event
   printAllWindowInfo()
 reg.registerEventListener(focusEvent, 'focus')
-'''
 
 
 try:
--- /tmp/test-tmpfs/nilfs-5428/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:55:41.898865632 -0500
+++ /tmp/test-tmpfs/nilfs-5439/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:57:27.352488121 -0500
@@ -125,7 +125,7 @@
 reg.registerEventListener(frameChange, 'window:minimize')
 reg.registerEventListener(frameChange, 'window:maximize')
 reg.registerEventListener(frameChange, 'window:restore')
-
+reg.registerEventListener(frameChange, 'object:bounds-changed')
 
 # Not too reliable
 def focusEvent(event):
--- /tmp/test-tmpfs/nilfs-5439/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:57:27.352488121 -0500
+++ /tmp/test-tmpfs/nilfs-5441/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:58:15.442482612 -0500
@@ -125,7 +125,6 @@
 reg.registerEventListener(frameChange, 'window:minimize')
 reg.registerEventListener(frameChange, 'window:maximize')
 reg.registerEventListener(frameChange, 'window:restore')
-reg.registerEventListener(frameChange, 'object:bounds-changed')
 
 # Not too reliable
 def focusEvent(event):
--- /tmp/test-tmpfs/nilfs-5441/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:58:15.442482612 -0500
+++ /tmp/test-tmpfs/nilfs-5446/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:58:16.819454511 -0500
@@ -126,6 +126,7 @@
 reg.registerEventListener(frameChange, 'window:maximize')
 reg.registerEventListener(frameChange, 'window:restore')
 
+
 # Not too reliable
 def focusEvent(event):
   print event
--- /tmp/test-tmpfs/nilfs-5446/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:58:16.819454511 -0500
+++ /tmp/test-tmpfs/nilfs-5451/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:58:58.213627160 -0500
@@ -121,10 +121,11 @@
   print event
   printAllWindowInfo()
 reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
-reg.registerEventListener(frameChange, 'window:create')
-reg.registerEventListener(frameChange, 'window:minimize')
-reg.registerEventListener(frameChange, 'window:maximize')
-reg.registerEventListener(frameChange, 'window:restore')
+reg.registerEventListener(frameChange, 'window:')
+#reg.registerEventListener(frameChange, 'window:create')
+#reg.registerEventListener(frameChange, 'window:minimize')
+#reg.registerEventListener(frameChange, 'window:maximize')
+#reg.registerEventListener(frameChange, 'window:restore')
 
 
 # Not too reliable
--- /tmp/test-tmpfs/nilfs-5451/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:58:58.213627160 -0500
+++ /tmp/test-tmpfs/nilfs-5460/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:59:17.190258916 -0500
@@ -121,11 +121,10 @@
   print event
   printAllWindowInfo()
 reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
-reg.registerEventListener(frameChange, 'window:')
-#reg.registerEventListener(frameChange, 'window:create')
-#reg.registerEventListener(frameChange, 'window:minimize')
-#reg.registerEventListener(frameChange, 'window:maximize')
-#reg.registerEventListener(frameChange, 'window:restore')
+reg.registerEventListener(frameChange, 'window:create')
+reg.registerEventListener(frameChange, 'window:minimize')
+reg.registerEventListener(frameChange, 'window:maximize')
+reg.registerEventListener(frameChange, 'window:restore')
 
 
 # Not too reliable
--- /tmp/test-tmpfs/nilfs-5460/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:59:17.190258916 -0500
+++ /tmp/test-tmpfs/nilfs-5477/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:59:54.321557832 -0500
@@ -128,10 +128,12 @@
 
 
 # Not too reliable
+'''
 def focusEvent(event):
   print event
   printAllWindowInfo()
 reg.registerEventListener(focusEvent, 'focus')
+'''
 
 
 try:
--- /tmp/test-tmpfs/nilfs-5477/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 21:59:54.321557832 -0500
+++ /tmp/test-tmpfs/nilfs-5479/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:02:41.690695139 -0500
@@ -9,6 +9,7 @@
 
 # TODO: can I get PIDs of controlling processes of each window?
 
+
 '''
 Notes about window events:
 
--- /tmp/test-tmpfs/nilfs-5479/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:02:41.690695139 -0500
+++ /tmp/test-tmpfs/nilfs-5484/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:02:46.554618742 -0500
@@ -51,7 +51,7 @@
    http://developers-blog.org/blog/default/2010/08/21/Track-window-and-widget-events-with-AT-SPI
 '''
 
-
+import time
 import pyatspi
 
 reg = pyatspi.Registry()    # get the Registry singleton
--- /tmp/test-tmpfs/nilfs-5484/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:02:46.554618742 -0500
+++ /tmp/test-tmpfs/nilfs-5495/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:03:16.294159459 -0500
@@ -58,6 +58,11 @@
 desktop = reg.getDesktop(0) # get desktop
  
 
+def get_ms_since_epoch():
+  milliseconds_since_epoch = int(time.time() * 1000)
+  return milliseconds_since_epoch
+
+
 # SUPER hacky way of getting the current URL text string from
 # Google Chrome and Firefox ... there MUST be a better way :)
 #
--- /tmp/test-tmpfs/nilfs-5495/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:03:16.294159459 -0500
+++ /tmp/test-tmpfs/nilfs-5501/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:03:48.246680651 -0500
@@ -112,11 +112,13 @@
   print '---'
 
 
+
 # Detects when a frame becomes 'active', which happens when it comes
 # into focus or when it's finished being moved ... seems pretty robust
 def frameActive(event):
   if event.source.getRoleName() != 'frame': return
   if event.detail1 != 1: return
+  print get_ms_since_epoch()
   print event
   printAllWindowInfo()
 reg.registerEventListener(frameActive, 'object:state-changed:active')
@@ -124,6 +126,7 @@
 
 def frameChange(event):
   if event.source.getRoleName() != 'frame': return
+  print get_ms_since_epoch()
   print event
   printAllWindowInfo()
 reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
--- /tmp/test-tmpfs/nilfs-5501/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:03:48.246680651 -0500
+++ /tmp/test-tmpfs/nilfs-5506/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:04:45.522858902 -0500
@@ -7,7 +7,10 @@
 #          check the "Enable assistive technologies" box,
 #          then log out and log back in.
 
+
 # TODO: can I get PIDs of controlling processes of each window?
+# (the 'application names' collected by pyatspi sometimes don't exactly
+# match the names collected by SystemTap)
 
 
 '''
--- /tmp/test-tmpfs/nilfs-5506/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:04:45.522858902 -0500
+++ /tmp/test-tmpfs/nilfs-5516/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:05:07.916549914 -0500
@@ -121,16 +121,14 @@
 def frameActive(event):
   if event.source.getRoleName() != 'frame': return
   if event.detail1 != 1: return
-  print get_ms_since_epoch()
-  print event
+  print get_ms_since_epoch(), event
   printAllWindowInfo()
 reg.registerEventListener(frameActive, 'object:state-changed:active')
 
 
 def frameChange(event):
   if event.source.getRoleName() != 'frame': return
-  print get_ms_since_epoch()
-  print event
+  print get_ms_since_epoch(), event
   printAllWindowInfo()
 reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
 reg.registerEventListener(frameChange, 'window:create')
--- /tmp/test-tmpfs/nilfs-5516/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:05:07.916549914 -0500
+++ /tmp/test-tmpfs/nilfs-5519/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:07:50.521498085 -0500
@@ -7,6 +7,7 @@
 #          check the "Enable assistive technologies" box,
 #          then log out and log back in.
 
+# TODO: detect which window has focus based on the 'active' event
 
 # TODO: can I get PIDs of controlling processes of each window?
 # (the 'application names' collected by pyatspi sometimes don't exactly
--- /tmp/test-tmpfs/nilfs-5519/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:07:50.521498085 -0500
+++ /tmp/test-tmpfs/nilfs-5538/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:08:05.654915997 -0500
@@ -131,6 +131,7 @@
   if event.source.getRoleName() != 'frame': return
   print get_ms_since_epoch(), event
   printAllWindowInfo()
+reg.registerEventListener(frameChange, 'object')
 reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
 reg.registerEventListener(frameChange, 'window:create')
 reg.registerEventListener(frameChange, 'window:minimize')
--- /tmp/test-tmpfs/nilfs-5538/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:08:05.654915997 -0500
+++ /tmp/test-tmpfs/nilfs-5541/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:09:47.914660859 -0500
@@ -39,6 +39,9 @@
 - 'object:state-changed:active' fires on a 'frame' object whenever it
   comes into focus (with event.detail1 == 1)
 
+- 'object:state-changed:iconified' fires whenever it gets "minimized",
+  it seems
+
 - 'object:bounds-changed' fires on a 'frame' object whenever it's
   resized
 
--- /tmp/test-tmpfs/nilfs-5541/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:09:47.914660859 -0500
+++ /tmp/test-tmpfs/nilfs-5549/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:10:01.596033555 -0500
@@ -127,14 +127,14 @@
   if event.detail1 != 1: return
   print get_ms_since_epoch(), event
   printAllWindowInfo()
-reg.registerEventListener(frameActive, 'object:state-changed:active')
+reg.registerEventListener(frameActive, 'object:state-changed')
+#reg.registerEventListener(frameActive, 'object:state-changed:active')
 
 
 def frameChange(event):
   if event.source.getRoleName() != 'frame': return
   print get_ms_since_epoch(), event
   printAllWindowInfo()
-reg.registerEventListener(frameChange, 'object')
 reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
 reg.registerEventListener(frameChange, 'window:create')
 reg.registerEventListener(frameChange, 'window:minimize')
--- /tmp/test-tmpfs/nilfs-5549/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:10:01.596033555 -0500
+++ /tmp/test-tmpfs/nilfs-5555/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:10:55.611637183 -0500
@@ -123,7 +123,8 @@
 # Detects when a frame becomes 'active', which happens when it comes
 # into focus or when it's finished being moved ... seems pretty robust
 def frameActive(event):
-  if event.source.getRoleName() != 'frame': return
+  if event.source.getRoleName() not in ('frame', 'window'): return
+  #if event.source.getRoleName() != 'frame': return
   if event.detail1 != 1: return
   print get_ms_since_epoch(), event
   printAllWindowInfo()
@@ -132,7 +133,8 @@
 
 
 def frameChange(event):
-  if event.source.getRoleName() != 'frame': return
+  if event.source.getRoleName() not in ('frame', 'window'): return
+  #if event.source.getRoleName() != 'frame': return
   print get_ms_since_epoch(), event
   printAllWindowInfo()
 reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
--- /tmp/test-tmpfs/nilfs-5556/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:11:18.450661375 -0500
+++ /tmp/test-tmpfs/nilfs-5567/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:11:21.932514511 -0500
@@ -123,7 +123,7 @@
 # Detects when a frame becomes 'active', which happens when it comes
 # into focus or when it's finished being moved ... seems pretty robust
 def frameActive(event):
-  if event.source.getRoleName() not in ('frame', 'window'): return
+  #if event.source.getRoleName() not in ('frame', 'window'): return
   #if event.source.getRoleName() != 'frame': return
   if event.detail1 != 1: return
   print get_ms_since_epoch(), event
@@ -133,7 +133,7 @@
 
 
 def frameChange(event):
-  if event.source.getRoleName() not in ('frame', 'window'): return
+  #if event.source.getRoleName() not in ('frame', 'window'): return
   #if event.source.getRoleName() != 'frame': return
   print get_ms_since_epoch(), event
   printAllWindowInfo()
--- /tmp/test-tmpfs/nilfs-5567/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:11:21.932514511 -0500
+++ /tmp/test-tmpfs/nilfs-5569/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:12:04.742749083 -0500
@@ -123,8 +123,7 @@
 # Detects when a frame becomes 'active', which happens when it comes
 # into focus or when it's finished being moved ... seems pretty robust
 def frameActive(event):
-  #if event.source.getRoleName() not in ('frame', 'window'): return
-  #if event.source.getRoleName() != 'frame': return
+  if event.source.getRoleName() != 'frame': return
   if event.detail1 != 1: return
   print get_ms_since_epoch(), event
   printAllWindowInfo()
@@ -133,8 +132,7 @@
 
 
 def frameChange(event):
-  #if event.source.getRoleName() not in ('frame', 'window'): return
-  #if event.source.getRoleName() != 'frame': return
+  if event.source.getRoleName() != 'frame': return
   print get_ms_since_epoch(), event
   printAllWindowInfo()
 reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
--- /tmp/test-tmpfs/nilfs-5569/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:12:04.742749083 -0500
+++ /tmp/test-tmpfs/nilfs-5583/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:12:08.437600148 -0500
@@ -128,7 +128,6 @@
   print get_ms_since_epoch(), event
   printAllWindowInfo()
 reg.registerEventListener(frameActive, 'object:state-changed')
-#reg.registerEventListener(frameActive, 'object:state-changed:active')
 
 
 def frameChange(event):
--- /tmp/test-tmpfs/nilfs-5583/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:12:08.437600148 -0500
+++ /tmp/test-tmpfs/nilfs-5590/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:13:53.027599701 -0500
@@ -127,20 +127,26 @@
   if event.detail1 != 1: return
   print get_ms_since_epoch(), event
   printAllWindowInfo()
-reg.registerEventListener(frameActive, 'object:state-changed')
+#reg.registerEventListener(frameActive, 'object:state-changed')
 
 
 def frameChange(event):
   if event.source.getRoleName() != 'frame': return
   print get_ms_since_epoch(), event
   printAllWindowInfo()
-reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
-reg.registerEventListener(frameChange, 'window:create')
-reg.registerEventListener(frameChange, 'window:minimize')
-reg.registerEventListener(frameChange, 'window:maximize')
-reg.registerEventListener(frameChange, 'window:restore')
+#reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
+#reg.registerEventListener(frameChange, 'window:create')
+#reg.registerEventListener(frameChange, 'window:minimize')
+#reg.registerEventListener(frameChange, 'window:maximize')
+#reg.registerEventListener(frameChange, 'window:restore')
 
 
+def chromeEvent(event):
+  if event.host_application.name != 'google-chrome': return
+  print event
+
+reg.registerEventListener(chromeEvent, 'object')
+
 # Not too reliable
 '''
 def focusEvent(event):
--- /tmp/test-tmpfs/nilfs-5590/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:13:53.027599701 -0500
+++ /tmp/test-tmpfs/nilfs-5599/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:14:27.995350865 -0500
@@ -145,7 +145,8 @@
   if event.host_application.name != 'google-chrome': return
   print event
 
-reg.registerEventListener(chromeEvent, 'object')
+#reg.registerEventListener(chromeEvent, 'object')
+reg.registerEventListener(chromeEvent, 'window')
 
 # Not too reliable
 '''
--- /tmp/test-tmpfs/nilfs-5599/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:14:27.995350865 -0500
+++ /tmp/test-tmpfs/nilfs-5605/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:15:01.703186746 -0500
@@ -145,8 +145,7 @@
   if event.host_application.name != 'google-chrome': return
   print event
 
-#reg.registerEventListener(chromeEvent, 'object')
-reg.registerEventListener(chromeEvent, 'window')
+reg.registerEventListener(chromeEvent, 'object')
 
 # Not too reliable
 '''
--- /tmp/test-tmpfs/nilfs-5605/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:15:01.703186746 -0500
+++ /tmp/test-tmpfs/nilfs-5607/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:15:22.101500675 -0500
@@ -141,12 +141,6 @@
 #reg.registerEventListener(frameChange, 'window:restore')
 
 
-def chromeEvent(event):
-  if event.host_application.name != 'google-chrome': return
-  print event
-
-reg.registerEventListener(chromeEvent, 'object')
-
 # Not too reliable
 '''
 def focusEvent(event):
--- /tmp/test-tmpfs/nilfs-5607/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:15:22.101500675 -0500
+++ /tmp/test-tmpfs/nilfs-5690/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:15:25.343392892 -0500
@@ -127,18 +127,18 @@
   if event.detail1 != 1: return
   print get_ms_since_epoch(), event
   printAllWindowInfo()
-#reg.registerEventListener(frameActive, 'object:state-changed')
+reg.registerEventListener(frameActive, 'object:state-changed')
 
 
 def frameChange(event):
   if event.source.getRoleName() != 'frame': return
   print get_ms_since_epoch(), event
   printAllWindowInfo()
-#reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
-#reg.registerEventListener(frameChange, 'window:create')
-#reg.registerEventListener(frameChange, 'window:minimize')
-#reg.registerEventListener(frameChange, 'window:maximize')
-#reg.registerEventListener(frameChange, 'window:restore')
+reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
+reg.registerEventListener(frameChange, 'window:create')
+reg.registerEventListener(frameChange, 'window:minimize')
+reg.registerEventListener(frameChange, 'window:maximize')
+reg.registerEventListener(frameChange, 'window:restore')
 
 
 # Not too reliable
--- /tmp/test-tmpfs/nilfs-5690/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-12 22:15:25.343392892 -0500
+++ /tmp/test-tmpfs/nilfs-5694/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:27:19.454662034 -0500
@@ -14,6 +14,19 @@
 # match the names collected by SystemTap)
 
 
+class Desktop:
+  def __init__():
+    self.apps = []
+
+class Application:
+  def __init__():
+    self.windows = []
+
+class Window:
+  def __init__():
+    pass
+
+
 '''
 Notes about window events:
 
--- /tmp/test-tmpfs/nilfs-5694/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:27:19.454662034 -0500
+++ /tmp/test-tmpfs/nilfs-5697/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:27:47.506660752 -0500
@@ -14,6 +14,9 @@
 # match the names collected by SystemTap)
 
 
+# Class hierarchy: A Desktop contains 0 or more Application instances,
+# and each Application contains 1 or more Window instances.
+
 class Desktop:
   def __init__():
     self.apps = []
--- /tmp/test-tmpfs/nilfs-5697/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:27:47.506660752 -0500
+++ /tmp/test-tmpfs/nilfs-5729/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:27:54.817660418 -0500
@@ -16,6 +16,7 @@
 
 # Class hierarchy: A Desktop contains 0 or more Application instances,
 # and each Application contains 1 or more Window instances.
+# (ignore applications with no windows)
 
 class Desktop:
   def __init__():
--- /tmp/test-tmpfs/nilfs-5729/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:27:54.817660418 -0500
+++ /tmp/test-tmpfs/nilfs-5734/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:31:02.482651858 -0500
@@ -31,6 +31,9 @@
     pass
 
 
+class Window:
+
+
 '''
 Notes about window events:
 
--- /tmp/test-tmpfs/nilfs-5734/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:31:02.482651858 -0500
+++ /tmp/test-tmpfs/nilfs-5738/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:31:33.158650452 -0500
@@ -31,7 +31,9 @@
     pass
 
 
-class Window:
+
+# TODO: what happens when the user uses multiple virtual desktops?
+myDesktop = Desktop() # singleton
 
 
 '''
--- /tmp/test-tmpfs/nilfs-5738/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:31:33.158650452 -0500
+++ /tmp/test-tmpfs/nilfs-5740/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:32:35.075647630 -0500
@@ -32,7 +32,7 @@
 
 
 
-# TODO: what happens when the user uses multiple virtual desktops?
+# TODO: what happens when the user has multiple virtual desktops?
 myDesktop = Desktop() # singleton
 
 
--- /tmp/test-tmpfs/nilfs-5744/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:32:38.674647467 -0500
+++ /tmp/test-tmpfs/nilfs-5746/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:32:57.815646596 -0500
@@ -23,7 +23,8 @@
     self.apps = []
 
 class Application:
-  def __init__():
+  def __init__(name):
+    self.name = name
     self.windows = []
 
 class Window:
--- /tmp/test-tmpfs/nilfs-5750/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:33:02.253646389 -0500
+++ /tmp/test-tmpfs/nilfs-5754/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:33:36.545644825 -0500
@@ -143,6 +143,7 @@
 
 
 
+'''
 # Detects when a frame becomes 'active', which happens when it comes
 # into focus or when it's finished being moved ... seems pretty robust
 def frameActive(event):
@@ -162,6 +163,7 @@
 reg.registerEventListener(frameChange, 'window:minimize')
 reg.registerEventListener(frameChange, 'window:maximize')
 reg.registerEventListener(frameChange, 'window:restore')
+'''
 
 
 # Not too reliable
--- /tmp/test-tmpfs/nilfs-5754/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:33:36.545644825 -0500
+++ /tmp/test-tmpfs/nilfs-5757/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:33:54.167644015 -0500
@@ -180,5 +180,40 @@
 except KeyboardInterrupt:
    pass
 
+
+def initDesktop():
+  for app in desktop:
+    if app:
+      for frame in app:
+        # sometimes apps will have non-frame children ...
+        if frame.getRoleName() != 'frame': continue
+
+        print 'App:', app.name
+        print '  Window:', frame.name
+        comp = frame.queryComponent()
+        print '  Position:', comp.getPosition(0)
+        print '  Size:', comp.getSize()
+
+        urlField = None
+        if app.name == 'google-chrome':
+          urlField = getChromeUrlField(frame)
+        elif app.name == 'Firefox':
+          urlField = getFirefoxUrlField(frame)
+
+        if urlField:
+          urlTextField = urlField.queryEditableText()
+
+          # for some weird reason, google-chrome puts an extra 'junk'
+          # two bytes at the end of urlString, so adjust accordingly
+          nChars = urlTextField.characterCount
+          if app.name == 'google-chrome':
+            assert nChars > 0
+            nChars -= 2
+          urlString = urlTextField.getText(0, nChars)
+          print '  URL:', urlString
+  print '---'
+
+
+
 pyatspi.Registry.stop()
 
--- /tmp/test-tmpfs/nilfs-5757/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:33:54.167644015 -0500
+++ /tmp/test-tmpfs/nilfs-5763/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:34:15.083643068 -0500
@@ -183,35 +183,7 @@
 
 def initDesktop():
   for app in desktop:
-    if app:
-      for frame in app:
-        # sometimes apps will have non-frame children ...
-        if frame.getRoleName() != 'frame': continue
-
-        print 'App:', app.name
-        print '  Window:', frame.name
-        comp = frame.queryComponent()
-        print '  Position:', comp.getPosition(0)
-        print '  Size:', comp.getSize()
-
-        urlField = None
-        if app.name == 'google-chrome':
-          urlField = getChromeUrlField(frame)
-        elif app.name == 'Firefox':
-          urlField = getFirefoxUrlField(frame)
-
-        if urlField:
-          urlTextField = urlField.queryEditableText()
-
-          # for some weird reason, google-chrome puts an extra 'junk'
-          # two bytes at the end of urlString, so adjust accordingly
-          nChars = urlTextField.characterCount
-          if app.name == 'google-chrome':
-            assert nChars > 0
-            nChars -= 2
-          urlString = urlTextField.getText(0, nChars)
-          print '  URL:', urlString
-  print '---'
+    desktop.addApp(app)
 
 
 
--- /tmp/test-tmpfs/nilfs-5763/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:34:15.083643068 -0500
+++ /tmp/test-tmpfs/nilfs-5767/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:34:51.030641427 -0500
@@ -22,6 +22,39 @@
   def __init__():
     self.apps = []
 
+  def addApp(app):
+    assert app
+    if app:
+      for frame in app:
+        # sometimes apps will have non-frame children ...
+        if frame.getRoleName() != 'frame': continue
+
+        print 'App:', app.name
+        print '  Window:', frame.name
+        comp = frame.queryComponent()
+        print '  Position:', comp.getPosition(0)
+        print '  Size:', comp.getSize()
+
+        urlField = None
+        if app.name == 'google-chrome':
+          urlField = getChromeUrlField(frame)
+        elif app.name == 'Firefox':
+          urlField = getFirefoxUrlField(frame)
+
+        if urlField:
+          urlTextField = urlField.queryEditableText()
+
+          # for some weird reason, google-chrome puts an extra 'junk'
+          # two bytes at the end of urlString, so adjust accordingly
+          nChars = urlTextField.characterCount
+          if app.name == 'google-chrome':
+            assert nChars > 0
+            nChars -= 2
+          urlString = urlTextField.getText(0, nChars)
+          print '  URL:', urlString
+  print '---'
+
+
 class Application:
   def __init__(name):
     self.name = name
@@ -183,7 +216,8 @@
 
 def initDesktop():
   for app in desktop:
-    desktop.addApp(app)
+    if app: # some app entries are None; weird
+      desktop.addApp(app)
 
 
 
--- /tmp/test-tmpfs/nilfs-5767/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:34:51.030641427 -0500
+++ /tmp/test-tmpfs/nilfs-5772/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:34:58.170641104 -0500
@@ -220,6 +220,5 @@
       desktop.addApp(app)
 
 
-
 pyatspi.Registry.stop()
 
--- /tmp/test-tmpfs/nilfs-5772/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:34:58.170641104 -0500
+++ /tmp/test-tmpfs/nilfs-5775/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:35:37.227639321 -0500
@@ -60,6 +60,8 @@
     self.name = name
     self.windows = []
 
+
+# pyatspi uses the term 'frame' to refer to what we think of as windows
 class Window:
   def __init__():
     pass
--- /tmp/test-tmpfs/nilfs-5775/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:35:37.227639321 -0500
+++ /tmp/test-tmpfs/nilfs-5779/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:35:47.395638856 -0500
@@ -24,35 +24,33 @@
 
   def addApp(app):
     assert app
-    if app:
-      for frame in app:
-        # sometimes apps will have non-frame children ...
-        if frame.getRoleName() != 'frame': continue
-
-        print 'App:', app.name
-        print '  Window:', frame.name
-        comp = frame.queryComponent()
-        print '  Position:', comp.getPosition(0)
-        print '  Size:', comp.getSize()
-
-        urlField = None
+    for frame in app:
+      # sometimes apps will have non-frame children ...
+      if frame.getRoleName() != 'frame': continue
+
+      print 'App:', app.name
+      print '  Window:', frame.name
+      comp = frame.queryComponent()
+      print '  Position:', comp.getPosition(0)
+      print '  Size:', comp.getSize()
+
+      urlField = None
+      if app.name == 'google-chrome':
+        urlField = getChromeUrlField(frame)
+      elif app.name == 'Firefox':
+        urlField = getFirefoxUrlField(frame)
+
+      if urlField:
+        urlTextField = urlField.queryEditableText()
+
+        # for some weird reason, google-chrome puts an extra 'junk'
+        # two bytes at the end of urlString, so adjust accordingly
+        nChars = urlTextField.characterCount
         if app.name == 'google-chrome':
-          urlField = getChromeUrlField(frame)
-        elif app.name == 'Firefox':
-          urlField = getFirefoxUrlField(frame)
-
-        if urlField:
-          urlTextField = urlField.queryEditableText()
-
-          # for some weird reason, google-chrome puts an extra 'junk'
-          # two bytes at the end of urlString, so adjust accordingly
-          nChars = urlTextField.characterCount
-          if app.name == 'google-chrome':
-            assert nChars > 0
-            nChars -= 2
-          urlString = urlTextField.getText(0, nChars)
-          print '  URL:', urlString
-  print '---'
+          assert nChars > 0
+          nChars -= 2
+        urlString = urlTextField.getText(0, nChars)
+        print '  URL:', urlString
 
 
 class Application:
--- /tmp/test-tmpfs/nilfs-5779/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:35:47.395638856 -0500
+++ /tmp/test-tmpfs/nilfs-5782/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:36:20.280637355 -0500
@@ -24,6 +24,14 @@
 
   def addApp(app):
     assert app
+    self.apps.append(Application(app))
+
+
+class Application:
+  def __init__(app):
+    self.name = app.name
+    self.windows = []
+
     for frame in app:
       # sometimes apps will have non-frame children ...
       if frame.getRoleName() != 'frame': continue
@@ -53,11 +61,6 @@
         print '  URL:', urlString
 
 
-class Application:
-  def __init__(name):
-    self.name = name
-    self.windows = []
-
 
 # pyatspi uses the term 'frame' to refer to what we think of as windows
 class Window:
--- /tmp/test-tmpfs/nilfs-5782/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:36:20.280637355 -0500
+++ /tmp/test-tmpfs/nilfs-5786/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:36:35.075636683 -0500
@@ -61,7 +61,6 @@
         print '  URL:', urlString
 
 
-
 # pyatspi uses the term 'frame' to refer to what we think of as windows
 class Window:
   def __init__():
--- /tmp/test-tmpfs/nilfs-5786/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:36:35.075636683 -0500
+++ /tmp/test-tmpfs/nilfs-5788/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:36:45.425636206 -0500
@@ -35,8 +35,6 @@
     for frame in app:
       # sometimes apps will have non-frame children ...
       if frame.getRoleName() != 'frame': continue
-
-      print 'App:', app.name
       print '  Window:', frame.name
       comp = frame.queryComponent()
       print '  Position:', comp.getPosition(0)
--- /tmp/test-tmpfs/nilfs-5788/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:36:45.425636206 -0500
+++ /tmp/test-tmpfs/nilfs-5791/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:36:47.674636104 -0500
@@ -65,7 +65,6 @@
     pass
 
 
-
 # TODO: what happens when the user has multiple virtual desktops?
 myDesktop = Desktop() # singleton
 
--- /tmp/test-tmpfs/nilfs-5809/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:36:54.848635776 -0500
+++ /tmp/test-tmpfs/nilfs-5811/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:48:17.806322218 -0500
@@ -22,9 +22,13 @@
   def __init__():
     self.apps = []
 
+    # for GNOME, the desktop resolution is set by the dimensions of the
+    # 'nautilus' window
+
   def addApp(app):
     assert app
-    self.apps.append(Application(app))
+    cur = Application(app)
+    self.apps.append(cur)
 
 
 class Application:
--- /tmp/test-tmpfs/nilfs-5814/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:48:22.432966200 -0500
+++ /tmp/test-tmpfs/nilfs-5817/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:48:35.626802651 -0500
@@ -27,8 +27,7 @@
 
   def addApp(app):
     assert app
-    cur = Application(app)
-    self.apps.append(cur)
+    self.apps.append(Application(app))
 
 
 class Application:
--- /tmp/test-tmpfs/nilfs-5817/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:48:35.626802651 -0500
+++ /tmp/test-tmpfs/nilfs-5821/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:49:08.447370945 -0500
@@ -35,36 +35,39 @@
     self.name = app.name
     self.windows = []
 
-    for frame in app:
+    for child in app:
       # sometimes apps will have non-frame children ...
-      if frame.getRoleName() != 'frame': continue
-      print '  Window:', frame.name
-      comp = frame.queryComponent()
-      print '  Position:', comp.getPosition(0)
-      print '  Size:', comp.getSize()
-
-      urlField = None
-      if app.name == 'google-chrome':
-        urlField = getChromeUrlField(frame)
-      elif app.name == 'Firefox':
-        urlField = getFirefoxUrlField(frame)
-
-      if urlField:
-        urlTextField = urlField.queryEditableText()
-
-        # for some weird reason, google-chrome puts an extra 'junk'
-        # two bytes at the end of urlString, so adjust accordingly
-        nChars = urlTextField.characterCount
-        if app.name == 'google-chrome':
-          assert nChars > 0
-          nChars -= 2
-        urlString = urlTextField.getText(0, nChars)
-        print '  URL:', urlString
+      if child.getRoleName() != 'frame': continue
+      self.windows.append(Window(child))
 
 
 # pyatspi uses the term 'frame' to refer to what we think of as windows
 class Window:
-  def __init__():
+  def __init__(frame):
+    print '  Window:', frame.name
+    comp = frame.queryComponent()
+    print '  Position:', comp.getPosition(0)
+    print '  Size:', comp.getSize()
+
+    urlField = None
+    if app.name == 'google-chrome':
+      urlField = getChromeUrlField(frame)
+    elif app.name == 'Firefox':
+      urlField = getFirefoxUrlField(frame)
+
+    if urlField:
+      urlTextField = urlField.queryEditableText()
+
+      # for some weird reason, google-chrome puts an extra 'junk'
+      # two bytes at the end of urlString, so adjust accordingly
+      nChars = urlTextField.characterCount
+      if app.name == 'google-chrome':
+        assert nChars > 0
+        nChars -= 2
+      urlString = urlTextField.getText(0, nChars)
+      print '  URL:', urlString
+
+
     pass
 
 
--- /tmp/test-tmpfs/nilfs-5821/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:49:08.447370945 -0500
+++ /tmp/test-tmpfs/nilfs-5827/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:49:37.078356093 -0500
@@ -44,10 +44,11 @@
 # pyatspi uses the term 'frame' to refer to what we think of as windows
 class Window:
   def __init__(frame):
-    print '  Window:', frame.name
+    self.title = frame.name
+
     comp = frame.queryComponent()
-    print '  Position:', comp.getPosition(0)
-    print '  Size:', comp.getSize()
+    self.position = comp.getPosition(0)
+    self.size = comp.getSize()
 
     urlField = None
     if app.name == 'google-chrome':
--- /tmp/test-tmpfs/nilfs-5827/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:49:37.078356093 -0500
+++ /tmp/test-tmpfs/nilfs-5833/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:50:02.597908159 -0500
@@ -50,6 +50,8 @@
     self.position = comp.getPosition(0)
     self.size = comp.getSize()
 
+    self.browserURL = None
+
     urlField = None
     if app.name == 'google-chrome':
       urlField = getChromeUrlField(frame)
@@ -65,11 +67,7 @@
       if app.name == 'google-chrome':
         assert nChars > 0
         nChars -= 2
-      urlString = urlTextField.getText(0, nChars)
-      print '  URL:', urlString
-
-
-    pass
+      self.browserURL = urlTextField.getText(0, nChars)
 
 
 # TODO: what happens when the user has multiple virtual desktops?
--- /tmp/test-tmpfs/nilfs-5833/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:50:02.597908159 -0500
+++ /tmp/test-tmpfs/nilfs-5838/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:53:38.071887128 -0500
@@ -50,6 +50,7 @@
     self.position = comp.getPosition(0)
     self.size = comp.getSize()
 
+    # special fields for Firefox and Google Chrome
     self.browserURL = None
 
     urlField = None
--- /tmp/test-tmpfs/nilfs-5838/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:53:38.071887128 -0500
+++ /tmp/test-tmpfs/nilfs-5842/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:54:11.639548377 -0500
@@ -43,7 +43,7 @@
 
 # pyatspi uses the term 'frame' to refer to what we think of as windows
 class Window:
-  def __init__(frame):
+  def __init__(frame, parentApp):
     self.title = frame.name
 
     comp = frame.queryComponent()
@@ -54,9 +54,9 @@
     self.browserURL = None
 
     urlField = None
-    if app.name == 'google-chrome':
+    if parentApp.name == 'google-chrome':
       urlField = getChromeUrlField(frame)
-    elif app.name == 'Firefox':
+    elif parentApp.name == 'Firefox':
       urlField = getFirefoxUrlField(frame)
 
     if urlField:
@@ -65,7 +65,7 @@
       # for some weird reason, google-chrome puts an extra 'junk'
       # two bytes at the end of urlString, so adjust accordingly
       nChars = urlTextField.characterCount
-      if app.name == 'google-chrome':
+      if parentApp.name == 'google-chrome':
         assert nChars > 0
         nChars -= 2
       self.browserURL = urlTextField.getText(0, nChars)
--- /tmp/test-tmpfs/nilfs-5842/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:54:11.639548377 -0500
+++ /tmp/test-tmpfs/nilfs-5843/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:54:28.477886571 -0500
@@ -38,7 +38,7 @@
     for child in app:
       # sometimes apps will have non-frame children ...
       if child.getRoleName() != 'frame': continue
-      self.windows.append(Window(child))
+      self.windows.append(Window(child, self))
 
 
 # pyatspi uses the term 'frame' to refer to what we think of as windows
--- /tmp/test-tmpfs/nilfs-5843/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:54:28.477886571 -0500
+++ /tmp/test-tmpfs/nilfs-5849/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:54:31.046243216 -0500
@@ -21,7 +21,6 @@
 class Desktop:
   def __init__():
     self.apps = []
-
     # for GNOME, the desktop resolution is set by the dimensions of the
     # 'nautilus' window
 
--- /tmp/test-tmpfs/nilfs-5849/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:54:31.046243216 -0500
+++ /tmp/test-tmpfs/nilfs-5852/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:55:50.975342280 -0500
@@ -43,6 +43,7 @@
 # pyatspi uses the term 'frame' to refer to what we think of as windows
 class Window:
   def __init__(frame, parentApp):
+    self.parent = parentApp
     self.title = frame.name
 
     comp = frame.queryComponent()
@@ -53,9 +54,9 @@
     self.browserURL = None
 
     urlField = None
-    if parentApp.name == 'google-chrome':
+    if parent.name == 'google-chrome':
       urlField = getChromeUrlField(frame)
-    elif parentApp.name == 'Firefox':
+    elif parent.name == 'Firefox':
       urlField = getFirefoxUrlField(frame)
 
     if urlField:
@@ -64,7 +65,7 @@
       # for some weird reason, google-chrome puts an extra 'junk'
       # two bytes at the end of urlString, so adjust accordingly
       nChars = urlTextField.characterCount
-      if parentApp.name == 'google-chrome':
+      if parent.name == 'google-chrome':
         assert nChars > 0
         nChars -= 2
       self.browserURL = urlTextField.getText(0, nChars)
--- /tmp/test-tmpfs/nilfs-5858/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:55:57.771285973 -0500
+++ /tmp/test-tmpfs/nilfs-5862/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:56:56.299597165 -0500
@@ -19,7 +19,7 @@
 # (ignore applications with no windows)
 
 class Desktop:
-  def __init__():
+  def __init__(self):
     self.apps = []
     # for GNOME, the desktop resolution is set by the dimensions of the
     # 'nautilus' window
@@ -30,7 +30,7 @@
 
 
 class Application:
-  def __init__(app):
+  def __init__(self, app):
     self.name = app.name
     self.windows = []
 
@@ -42,7 +42,7 @@
 
 # pyatspi uses the term 'frame' to refer to what we think of as windows
 class Window:
-  def __init__(frame, parentApp):
+  def __init__(self, frame, parentApp):
     self.parent = parentApp
     self.title = frame.name
 
--- /tmp/test-tmpfs/nilfs-5862/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:56:56.299597165 -0500
+++ /tmp/test-tmpfs/nilfs-5866/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:57:19.098866558 -0500
@@ -212,6 +212,14 @@
 reg.registerEventListener(focusEvent, 'focus')
 '''
 
+def initDesktop():
+  for app in desktop:
+    if app: # some app entries are None; weird
+      desktop.addApp(app)
+
+import sys
+sys.exit(0)
+
 
 try:
    pyatspi.Registry.start()
@@ -219,11 +227,5 @@
    pass
 
 
-def initDesktop():
-  for app in desktop:
-    if app: # some app entries are None; weird
-      desktop.addApp(app)
-
-
 pyatspi.Registry.stop()
 
--- /tmp/test-tmpfs/nilfs-5869/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:57:26.627944349 -0500
+++ /tmp/test-tmpfs/nilfs-5875/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:57:38.906700182 -0500
@@ -21,6 +21,7 @@
 class Desktop:
   def __init__(self):
     self.apps = []
+
     # for GNOME, the desktop resolution is set by the dimensions of the
     # 'nautilus' window
 
--- /tmp/test-tmpfs/nilfs-5875/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:57:38.906700182 -0500
+++ /tmp/test-tmpfs/nilfs-5879/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:57:59.813684738 -0500
@@ -29,6 +29,10 @@
     assert app
     self.apps.append(Application(app))
 
+  def printMe(self):
+    for app in self.apps:
+      print app
+
 
 class Application:
   def __init__(self, app):
--- /tmp/test-tmpfs/nilfs-5879/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:57:59.813684738 -0500
+++ /tmp/test-tmpfs/nilfs-5883/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:58:50.169849638 -0500
@@ -77,7 +77,7 @@
 
 
 # TODO: what happens when the user has multiple virtual desktops?
-myDesktop = Desktop() # singleton
+desktopState = Desktop() # singleton
 
 
 '''
@@ -222,6 +222,8 @@
     if app: # some app entries are None; weird
       desktop.addApp(app)
 
+myDesktop
+
 import sys
 sys.exit(0)
 
--- /tmp/test-tmpfs/nilfs-5883/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:58:50.169849638 -0500
+++ /tmp/test-tmpfs/nilfs-5886/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:59:07.128255853 -0500
@@ -220,9 +220,10 @@
 def initDesktop():
   for app in desktop:
     if app: # some app entries are None; weird
-      desktop.addApp(app)
+      desktopState.addApp(app)
 
-myDesktop
+initDesktop()
+desktopState.printMe()
 
 import sys
 sys.exit(0)
--- /tmp/test-tmpfs/nilfs-5886/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:59:07.128255853 -0500
+++ /tmp/test-tmpfs/nilfs-5891/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:59:13.224120041 -0500
@@ -25,7 +25,7 @@
     # for GNOME, the desktop resolution is set by the dimensions of the
     # 'nautilus' window
 
-  def addApp(app):
+  def addApp(self, app):
     assert app
     self.apps.append(Application(app))
 
--- /tmp/test-tmpfs/nilfs-5891/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:59:13.224120041 -0500
+++ /tmp/test-tmpfs/nilfs-5893/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:59:25.752895012 -0500
@@ -59,9 +59,9 @@
     self.browserURL = None
 
     urlField = None
-    if parent.name == 'google-chrome':
+    if self.parent.name == 'google-chrome':
       urlField = getChromeUrlField(frame)
-    elif parent.name == 'Firefox':
+    elif self.parent.name == 'Firefox':
       urlField = getFirefoxUrlField(frame)
 
     if urlField:
@@ -70,7 +70,7 @@
       # for some weird reason, google-chrome puts an extra 'junk'
       # two bytes at the end of urlString, so adjust accordingly
       nChars = urlTextField.characterCount
-      if parent.name == 'google-chrome':
+      if self.parent.name == 'google-chrome':
         assert nChars > 0
         nChars -= 2
       self.browserURL = urlTextField.getText(0, nChars)
--- /tmp/test-tmpfs/nilfs-5900/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 10:59:27.903199495 -0500
+++ /tmp/test-tmpfs/nilfs-5902/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:01:23.835456400 -0500
@@ -31,7 +31,7 @@
 
   def printMe(self):
     for app in self.apps:
-      print app
+      app.printMe()
 
 
 class Application:
@@ -44,6 +44,8 @@
       if child.getRoleName() != 'frame': continue
       self.windows.append(Window(child, self))
 
+  def printMe(self):
+    print app.name
 
 # pyatspi uses the term 'frame' to refer to what we think of as windows
 class Window:
--- /tmp/test-tmpfs/nilfs-5902/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:01:23.835456400 -0500
+++ /tmp/test-tmpfs/nilfs-5904/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:01:24.619564362 -0500
@@ -47,6 +47,7 @@
   def printMe(self):
     print app.name
 
+
 # pyatspi uses the term 'frame' to refer to what we think of as windows
 class Window:
   def __init__(self, frame, parentApp):
--- /tmp/test-tmpfs/nilfs-5904/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:01:24.619564362 -0500
+++ /tmp/test-tmpfs/nilfs-5907/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:01:28.315073231 -0500
@@ -45,7 +45,7 @@
       self.windows.append(Window(child, self))
 
   def printMe(self):
-    print app.name
+    print self.name
 
 
 # pyatspi uses the term 'frame' to refer to what we think of as windows
--- /tmp/test-tmpfs/nilfs-5907/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:01:28.315073231 -0500
+++ /tmp/test-tmpfs/nilfs-5914/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:01:36.995268763 -0500
@@ -45,7 +45,7 @@
       self.windows.append(Window(child, self))
 
   def printMe(self):
-    print self.name
+    print 'APP:', self.name
 
 
 # pyatspi uses the term 'frame' to refer to what we think of as windows
--- /tmp/test-tmpfs/nilfs-5914/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:01:36.995268763 -0500
+++ /tmp/test-tmpfs/nilfs-5922/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:02:33.995128097 -0500
@@ -80,7 +80,7 @@
 
 
 # TODO: what happens when the user has multiple virtual desktops?
-desktopState = Desktop() # singleton
+myDesktop = Desktop() # singleton
 
 
 '''
@@ -131,7 +131,7 @@
 import pyatspi
 
 reg = pyatspi.Registry()    # get the Registry singleton
-desktop = reg.getDesktop(0) # get desktop
+atspiDesktop = reg.getDesktop(0) # get desktop
  
 
 def get_ms_since_epoch():
@@ -156,7 +156,7 @@
 
 def printAllWindowInfo():
   return
-  for app in desktop:
+  for app in atspiDesktop:
     if app:
       for frame in app:
         # sometimes apps will have non-frame children ...
@@ -221,12 +221,12 @@
 '''
 
 def initDesktop():
-  for app in desktop:
+  for app in atspiDesktop:
     if app: # some app entries are None; weird
-      desktopState.addApp(app)
+      myDesktop.addApp(app)
 
 initDesktop()
-desktopState.printMe()
+myDesktop.printMe()
 
 import sys
 sys.exit(0)
--- /tmp/test-tmpfs/nilfs-5922/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:02:33.995128097 -0500
+++ /tmp/test-tmpfs/nilfs-5925/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:05:49.942229433 -0500
@@ -46,6 +46,8 @@
 
   def printMe(self):
     print 'APP:', self.name
+    for w in self.windows:
+      w.printMe()
 
 
 # pyatspi uses the term 'frame' to refer to what we think of as windows
--- /tmp/test-tmpfs/nilfs-5925/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:05:49.942229433 -0500
+++ /tmp/test-tmpfs/nilfs-5928/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:06:02.574979790 -0500
@@ -80,6 +80,8 @@
         nChars -= 2
       self.browserURL = urlTextField.getText(0, nChars)
 
+  def printMe(self):
+    print '  ', self.title
 
 # TODO: what happens when the user has multiple virtual desktops?
 myDesktop = Desktop() # singleton
--- /tmp/test-tmpfs/nilfs-5928/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:06:02.574979790 -0500
+++ /tmp/test-tmpfs/nilfs-5949/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:06:08.900856391 -0500
@@ -81,7 +81,8 @@
       self.browserURL = urlTextField.getText(0, nChars)
 
   def printMe(self):
-    print '  ', self.title
+    print ' ', self.title
+
 
 # TODO: what happens when the user has multiple virtual desktops?
 myDesktop = Desktop() # singleton
--- /tmp/test-tmpfs/nilfs-5949/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:06:08.900856391 -0500
+++ /tmp/test-tmpfs/nilfs-5951/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:07:50.122891329 -0500
@@ -82,6 +82,9 @@
 
   def printMe(self):
     print ' ', self.title
+    print '   ', self.position, self.size
+    if self.browserURL:
+      print '   ', self.browserURL
 
 
 # TODO: what happens when the user has multiple virtual desktops?
--- /tmp/test-tmpfs/nilfs-5951/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:07:50.122891329 -0500
+++ /tmp/test-tmpfs/nilfs-5956/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:07:52.852269960 -0500
@@ -80,6 +80,7 @@
         nChars -= 2
       self.browserURL = urlTextField.getText(0, nChars)
 
+
   def printMe(self):
     print ' ', self.title
     print '   ', self.position, self.size
--- /tmp/test-tmpfs/nilfs-5956/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:07:52.852269960 -0500
+++ /tmp/test-tmpfs/nilfs-5959/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:08:20.939166732 -0500
@@ -57,8 +57,8 @@
     self.title = frame.name
 
     comp = frame.queryComponent()
-    self.position = comp.getPosition(0)
-    self.size = comp.getSize()
+    self.x, self.y = comp.getPosition(0)
+    self.width, self.height = comp.getSize()
 
     # special fields for Firefox and Google Chrome
     self.browserURL = None
--- /tmp/test-tmpfs/nilfs-5959/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:08:20.939166732 -0500
+++ /tmp/test-tmpfs/nilfs-5965/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:08:30.618509836 -0500
@@ -83,7 +83,7 @@
 
   def printMe(self):
     print ' ', self.title
-    print '   ', self.position, self.size
+    print '   ', self.x, self.y, self.width, self.height
     if self.browserURL:
       print '   ', self.browserURL
 
--- /tmp/test-tmpfs/nilfs-5965/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:08:30.618509836 -0500
+++ /tmp/test-tmpfs/nilfs-5967/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:08:42.930218331 -0500
@@ -83,7 +83,7 @@
 
   def printMe(self):
     print ' ', self.title
-    print '   ', self.x, self.y, self.width, self.height
+    print self.x, self.y, self.width, self.height
     if self.browserURL:
       print '   ', self.browserURL
 
--- /tmp/test-tmpfs/nilfs-5967/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:08:42.930218331 -0500
+++ /tmp/test-tmpfs/nilfs-5972/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:08:45.792626254 -0500
@@ -83,7 +83,7 @@
 
   def printMe(self):
     print ' ', self.title
-    print self.x, self.y, self.width, self.height
+    print '   ', self.x, self.y, self.width, self.height
     if self.browserURL:
       print '   ', self.browserURL
 
--- /tmp/test-tmpfs/nilfs-5972/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:08:45.792626254 -0500
+++ /tmp/test-tmpfs/nilfs-5975/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:09:07.830810605 -0500
@@ -83,7 +83,7 @@
 
   def printMe(self):
     print ' ', self.title
-    print '   ', self.x, self.y, self.width, self.height
+    print 'x:%d, y:%d (%d x %d)' % (self.x, self.y, self.width, self.height)
     if self.browserURL:
       print '   ', self.browserURL
 
--- /tmp/test-tmpfs/nilfs-5975/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:09:07.830810605 -0500
+++ /tmp/test-tmpfs/nilfs-5979/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:09:16.523064079 -0500
@@ -83,7 +83,7 @@
 
   def printMe(self):
     print ' ', self.title
-    print 'x:%d, y:%d (%d x %d)' % (self.x, self.y, self.width, self.height)
+    print 'x:%d, y:%d (%dx%d)' % (self.x, self.y, self.width, self.height)
     if self.browserURL:
       print '   ', self.browserURL
 
--- /tmp/test-tmpfs/nilfs-5979/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:09:16.523064079 -0500
+++ /tmp/test-tmpfs/nilfs-5982/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:09:24.699241913 -0500
@@ -83,7 +83,7 @@
 
   def printMe(self):
     print ' ', self.title
-    print 'x:%d, y:%d (%dx%d)' % (self.x, self.y, self.width, self.height)
+    print 'x:%d,y:%d (%dx%d)' % (self.x, self.y, self.width, self.height)
     if self.browserURL:
       print '   ', self.browserURL
 
--- /tmp/test-tmpfs/nilfs-5982/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:09:24.699241913 -0500
+++ /tmp/test-tmpfs/nilfs-5987/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:09:30.076015844 -0500
@@ -83,7 +83,7 @@
 
   def printMe(self):
     print ' ', self.title
-    print 'x:%d,y:%d (%dx%d)' % (self.x, self.y, self.width, self.height)
+    print '   x:%d,y:%d (%dx%d)' % (self.x, self.y, self.width, self.height)
     if self.browserURL:
       print '   ', self.browserURL
 
--- /tmp/test-tmpfs/nilfs-5987/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:09:30.076015844 -0500
+++ /tmp/test-tmpfs/nilfs-5990/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:09:57.601970537 -0500
@@ -83,7 +83,7 @@
 
   def printMe(self):
     print ' ', self.title
-    print '   x:%d,y:%d (%dx%d)' % (self.x, self.y, self.width, self.height)
+    print '    x:%d,y:%d (%dx%d)' % (self.x, self.y, self.width, self.height)
     if self.browserURL:
       print '   ', self.browserURL
 
--- /tmp/test-tmpfs/nilfs-5995/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:10:15.149485574 -0500
+++ /tmp/test-tmpfs/nilfs-5998/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:13:22.376100564 -0500
@@ -27,7 +27,11 @@
 
   def addApp(self, app):
     assert app
-    self.apps.append(Application(app))
+    newApp = Application(app)
+
+    # only append to self.apps
+    if len(newApp.windows):
+      self.apps.append(newApp)
 
   def printMe(self):
     for app in self.apps:
--- /tmp/test-tmpfs/nilfs-5998/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:13:22.376100564 -0500
+++ /tmp/test-tmpfs/nilfs-6000/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:13:28.497965661 -0500
@@ -29,7 +29,7 @@
     assert app
     newApp = Application(app)
 
-    # only append to self.apps
+    # only append to self.apps if there are SOME windows
     if len(newApp.windows):
       self.apps.append(newApp)
 
--- /tmp/test-tmpfs/nilfs-6005/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:13:32.291501613 -0500
+++ /tmp/test-tmpfs/nilfs-6007/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:13:59.835390280 -0500
@@ -33,6 +33,7 @@
     if len(newApp.windows):
       self.apps.append(newApp)
 
+
   def printMe(self):
     for app in self.apps:
       app.printMe()
--- /tmp/test-tmpfs/nilfs-6007/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:13:59.835390280 -0500
+++ /tmp/test-tmpfs/nilfs-6010/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:14:01.082566251 -0500
@@ -25,6 +25,7 @@
     # for GNOME, the desktop resolution is set by the dimensions of the
     # 'nautilus' window
 
+
   def addApp(self, app):
     assert app
     newApp = Application(app)
--- /tmp/test-tmpfs/nilfs-6010/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:14:01.082566251 -0500
+++ /tmp/test-tmpfs/nilfs-6013/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:14:14.586471000 -0500
@@ -50,6 +50,7 @@
       if child.getRoleName() != 'frame': continue
       self.windows.append(Window(child, self))
 
+
   def printMe(self):
     print 'APP:', self.name
     for w in self.windows:
--- /tmp/test-tmpfs/nilfs-6018/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:14:20.898360956 -0500
+++ /tmp/test-tmpfs/nilfs-6022/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:14:51.898728885 -0500
@@ -24,12 +24,17 @@
 
     # for GNOME, the desktop resolution is set by the dimensions of the
     # 'nautilus' window
+    self.width = -1
+    self.height = -1
 
 
   def addApp(self, app):
     assert app
     newApp = Application(app)
 
+    if newApp.name == 'nautilus':
+      as
+
     # only append to self.apps if there are SOME windows
     if len(newApp.windows):
       self.apps.append(newApp)
--- /tmp/test-tmpfs/nilfs-6022/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:14:51.898728885 -0500
+++ /tmp/test-tmpfs/nilfs-6025/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:15:04.794544515 -0500
@@ -23,7 +23,7 @@
     self.apps = []
 
     # for GNOME, the desktop resolution is set by the dimensions of the
-    # 'nautilus' window
+    # 'Desktop' window of the 'nautilus' application
     self.width = -1
     self.height = -1
 
--- /tmp/test-tmpfs/nilfs-6025/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:15:04.794544515 -0500
+++ /tmp/test-tmpfs/nilfs-6031/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:15:10.130295524 -0500
@@ -22,7 +22,7 @@
   def __init__(self):
     self.apps = []
 
-    # for GNOME, the desktop resolution is set by the dimensions of the
+    # In GNOME, the desktop resolution is set by the dimensions of the
     # 'Desktop' window of the 'nautilus' application
     self.width = -1
     self.height = -1
--- /tmp/test-tmpfs/nilfs-6031/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:15:10.130295524 -0500
+++ /tmp/test-tmpfs/nilfs-6035/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:16:02.565890324 -0500
@@ -19,7 +19,7 @@
 # (ignore applications with no windows)
 
 class Desktop:
-  def __init__(self):
+  def __init__(self, atspiDesktop):
     self.apps = []
 
     # In GNOME, the desktop resolution is set by the dimensions of the
@@ -27,17 +27,17 @@
     self.width = -1
     self.height = -1
 
+    for app in atspiDesktop:
 
-  def addApp(self, app):
-    assert app
-    newApp = Application(app)
-
-    if newApp.name == 'nautilus':
-      as
-
-    # only append to self.apps if there are SOME windows
-    if len(newApp.windows):
-      self.apps.append(newApp)
+      assert app
+      newApp = Application(app)
+
+      if newApp.name == 'nautilus':
+        as
+
+      # only append to self.apps if there are SOME windows
+      if len(newApp.windows):
+        self.apps.append(newApp)
 
 
   def printMe(self):
--- /tmp/test-tmpfs/nilfs-6035/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:16:02.565890324 -0500
+++ /tmp/test-tmpfs/nilfs-6040/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:16:34.958630682 -0500
@@ -29,15 +29,13 @@
 
     for app in atspiDesktop:
 
-      assert app
-      newApp = Application(app)
+      if app: # some app entries are None; weird
+        newApp = Application(app)
 
-      if newApp.name == 'nautilus':
-        as
-
-      # only append to self.apps if there are SOME windows
-      if len(newApp.windows):
-        self.apps.append(newApp)
+        if newApp.name == 'nautilus':
+        # only append to self.apps if there are SOME windows
+        if len(newApp.windows):
+          self.apps.append(newApp)
 
 
   def printMe(self):
@@ -241,11 +239,6 @@
 reg.registerEventListener(focusEvent, 'focus')
 '''
 
-def initDesktop():
-  for app in atspiDesktop:
-    if app: # some app entries are None; weird
-      myDesktop.addApp(app)
-
 initDesktop()
 myDesktop.printMe()
 
--- /tmp/test-tmpfs/nilfs-6040/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:16:34.958630682 -0500
+++ /tmp/test-tmpfs/nilfs-6043/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:17:00.576363010 -0500
@@ -98,9 +98,6 @@
       print '   ', self.browserURL
 
 
-# TODO: what happens when the user has multiple virtual desktops?
-myDesktop = Desktop() # singleton
-
 
 '''
 Notes about window events:
@@ -239,7 +236,7 @@
 reg.registerEventListener(focusEvent, 'focus')
 '''
 
-initDesktop()
+myDesktop = Desktop(atspiDesktop) # singleton
 myDesktop.printMe()
 
 import sys
--- /tmp/test-tmpfs/nilfs-6043/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:17:00.576363010 -0500
+++ /tmp/test-tmpfs/nilfs-6047/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:17:13.935304033 -0500
@@ -13,6 +13,8 @@
 # (the 'application names' collected by pyatspi sometimes don't exactly
 # match the names collected by SystemTap)
 
+# TODO: what happens when the user has multiple virtual desktops?
+
 
 # Class hierarchy: A Desktop contains 0 or more Application instances,
 # and each Application contains 1 or more Window instances.
--- /tmp/test-tmpfs/nilfs-6047/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:17:13.935304033 -0500
+++ /tmp/test-tmpfs/nilfs-6050/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:17:32.871049594 -0500
@@ -30,7 +30,6 @@
     self.height = -1
 
     for app in atspiDesktop:
-
       if app: # some app entries are None; weird
         newApp = Application(app)
 
--- /tmp/test-tmpfs/nilfs-6050/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:17:32.871049594 -0500
+++ /tmp/test-tmpfs/nilfs-6060/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:17:38.798907776 -0500
@@ -34,6 +34,8 @@
         newApp = Application(app)
 
         if newApp.name == 'nautilus':
+          pass
+
         # only append to self.apps if there are SOME windows
         if len(newApp.windows):
           self.apps.append(newApp)
--- /tmp/test-tmpfs/nilfs-6060/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:17:38.798907776 -0500
+++ /tmp/test-tmpfs/nilfs-6064/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:18:59.606573383 -0500
@@ -34,12 +34,19 @@
         newApp = Application(app)
 
         if newApp.name == 'nautilus':
-          pass
+          desktopWindow = newApp.windows[0]
+          assert desktopWindow.title == 'Desktop'
+          assert desktopWindow.x == 0
+          assert desktopWindow.y == 0
+          self.width  = desktopWindow.width
+          self.height = desktopWindow.height
 
         # only append to self.apps if there are SOME windows
         if len(newApp.windows):
           self.apps.append(newApp)
 
+    assert self.width > 0 and self.height > 0
+
 
   def printMe(self):
     for app in self.apps:
--- /tmp/test-tmpfs/nilfs-6064/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:18:59.606573383 -0500
+++ /tmp/test-tmpfs/nilfs-6078/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:19:22.941964630 -0500
@@ -33,6 +33,7 @@
       if app: # some app entries are None; weird
         newApp = Application(app)
 
+        # special case for nautilus window manager ...
         if newApp.name == 'nautilus':
           desktopWindow = newApp.windows[0]
           assert desktopWindow.title == 'Desktop'
@@ -40,10 +41,10 @@
           assert desktopWindow.y == 0
           self.width  = desktopWindow.width
           self.height = desktopWindow.height
-
-        # only append to self.apps if there are SOME windows
-        if len(newApp.windows):
-          self.apps.append(newApp)
+        else:
+          # only append to self.apps if there are SOME windows
+          if len(newApp.windows):
+            self.apps.append(newApp)
 
     assert self.width > 0 and self.height > 0
 
--- /tmp/test-tmpfs/nilfs-6078/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:19:22.941964630 -0500
+++ /tmp/test-tmpfs/nilfs-6080/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:26:34.334278013 -0500
@@ -30,21 +30,25 @@
     self.height = -1
 
     for app in atspiDesktop:
-      if app: # some app entries are None; weird
-        newApp = Application(app)
+      if not app: continue # some app entries are None; weird
 
-        # special case for nautilus window manager ...
-        if newApp.name == 'nautilus':
-          desktopWindow = newApp.windows[0]
-          assert desktopWindow.title == 'Desktop'
-          assert desktopWindow.x == 0
-          assert desktopWindow.y == 0
-          self.width  = desktopWindow.width
-          self.height = desktopWindow.height
-        else:
-          # only append to self.apps if there are SOME windows
-          if len(newApp.windows):
-            self.apps.append(newApp)
+      # ignore apps with certain names ...
+      if app.name == 'gnome-panel': continue
+
+      newApp = Application(app)
+
+      # special case for nautilus window manager ...
+      if newApp.name == 'nautilus':
+        desktopWindow = newApp.windows[0]
+        assert desktopWindow.title == 'Desktop'
+        assert desktopWindow.x == 0
+        assert desktopWindow.y == 0
+        self.width  = desktopWindow.width
+        self.height = desktopWindow.height
+      else:
+        # only append to self.apps if there are SOME windows
+        if len(newApp.windows):
+          self.apps.append(newApp)
 
     assert self.width > 0 and self.height > 0
 
--- /tmp/test-tmpfs/nilfs-6092/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:26:35.866494748 -0500
+++ /tmp/test-tmpfs/nilfs-6095/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:27:58.345116094 -0500
@@ -26,8 +26,8 @@
 
     # In GNOME, the desktop resolution is set by the dimensions of the
     # 'Desktop' window of the 'nautilus' application
-    self.width = -1
-    self.height = -1
+    self.width = None
+    self.height = None
 
     for app in atspiDesktop:
       if not app: continue # some app entries are None; weird
--- /tmp/test-tmpfs/nilfs-6095/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:27:58.345116094 -0500
+++ /tmp/test-tmpfs/nilfs-6106/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:28:07.959469876 -0500
@@ -26,8 +26,8 @@
 
     # In GNOME, the desktop resolution is set by the dimensions of the
     # 'Desktop' window of the 'nautilus' application
-    self.width = None
-    self.height = None
+    self.width = -1
+    self.height = -1
 
     for app in atspiDesktop:
       if not app: continue # some app entries are None; weird
--- /tmp/test-tmpfs/nilfs-6106/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:28:07.959469876 -0500
+++ /tmp/test-tmpfs/nilfs-6108/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:28:57.678470166 -0500
@@ -15,6 +15,8 @@
 
 # TODO: what happens when the user has multiple virtual desktops?
 
+# There should be a 'minimized' state for app windows as well
+
 
 # Class hierarchy: A Desktop contains 0 or more Application instances,
 # and each Application contains 1 or more Window instances.
--- /tmp/test-tmpfs/nilfs-6108/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:28:57.678470166 -0500
+++ /tmp/test-tmpfs/nilfs-6136/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:28:59.494725874 -0500
@@ -15,7 +15,7 @@
 
 # TODO: what happens when the user has multiple virtual desktops?
 
-# There should be a 'minimized' state for app windows as well
+# TODO: There should be a 'minimized' state for app windows as well
 
 
 # Class hierarchy: A Desktop contains 0 or more Application instances,
--- /tmp/test-tmpfs/nilfs-6136/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:28:59.494725874 -0500
+++ /tmp/test-tmpfs/nilfs-6139/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:49:04.570111813 -0500
@@ -56,6 +56,7 @@
 
 
   def printMe(self):
+    print 'DESKTOP', self.width, self.height
     for app in self.apps:
       app.printMe()
 
--- /tmp/test-tmpfs/nilfs-6139/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:49:04.570111813 -0500
+++ /tmp/test-tmpfs/nilfs-6141/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:49:10.384925735 -0500
@@ -56,7 +56,7 @@
 
 
   def printMe(self):
-    print 'DESKTOP', self.width, self.height
+    print 'DESKTOP %dx%d' (self.width, self.height)
     for app in self.apps:
       app.printMe()
 
--- /tmp/test-tmpfs/nilfs-6141/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:49:10.384925735 -0500
+++ /tmp/test-tmpfs/nilfs-6145/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:49:15.232604308 -0500
@@ -56,7 +56,7 @@
 
 
   def printMe(self):
-    print 'DESKTOP %dx%d' (self.width, self.height)
+    print 'DESKTOP %dx%d' % (self.width, self.height)
     for app in self.apps:
       app.printMe()
 
--- /tmp/test-tmpfs/nilfs-6145/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:49:15.232604308 -0500
+++ /tmp/test-tmpfs/nilfs-6523/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:49:24.712931414 -0500
@@ -73,7 +73,7 @@
 
 
   def printMe(self):
-    print 'APP:', self.name
+    print ' APP:', self.name
     for w in self.windows:
       w.printMe()
 
--- /tmp/test-tmpfs/nilfs-6523/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 11:49:24.712931414 -0500
+++ /tmp/test-tmpfs/nilfs-6526/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 12:47:09.548675431 -0500
@@ -88,6 +88,8 @@
     self.x, self.y = comp.getPosition(0)
     self.width, self.height = comp.getSize()
 
+    self.states = frame.getState().getStates()
+
     # special fields for Firefox and Google Chrome
     self.browserURL = None
 
--- /tmp/test-tmpfs/nilfs-6526/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 12:47:09.548675431 -0500
+++ /tmp/test-tmpfs/nilfs-6548/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 12:47:18.340907555 -0500
@@ -114,6 +114,7 @@
   def printMe(self):
     print ' ', self.title
     print '    x:%d,y:%d (%dx%d)' % (self.x, self.y, self.width, self.height)
+    print '   ', self.states
     if self.browserURL:
       print '   ', self.browserURL
 
--- /tmp/test-tmpfs/nilfs-6548/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 12:47:18.340907555 -0500
+++ /tmp/test-tmpfs/nilfs-6557/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 12:50:03.399038883 -0500
@@ -7,7 +7,6 @@
 #          check the "Enable assistive technologies" box,
 #          then log out and log back in.
 
-# TODO: detect which window has focus based on the 'active' event
 
 # TODO: can I get PIDs of controlling processes of each window?
 # (the 'application names' collected by pyatspi sometimes don't exactly
@@ -15,8 +14,6 @@
 
 # TODO: what happens when the user has multiple virtual desktops?
 
-# TODO: There should be a 'minimized' state for app windows as well
-
 
 # Class hierarchy: A Desktop contains 0 or more Application instances,
 # and each Application contains 1 or more Window instances.
--- /tmp/test-tmpfs/nilfs-6557/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 12:50:03.399038883 -0500
+++ /tmp/test-tmpfs/nilfs-6619/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 12:51:10.518445276 -0500
@@ -85,6 +85,14 @@
     self.x, self.y = comp.getPosition(0)
     self.width, self.height = comp.getSize()
 
+    '''
+    When a window is minimized, its state set contains:
+      pyatspi.constants.STATE_ICONIFIED
+    (except that it doesn't work for Firefox for some reason!!!)
+
+    When a window is active (in focus), its state set contains:
+      pyatspi.constants.STATE_ACTIVE
+    '''
     self.states = frame.getState().getStates()
 
     # special fields for Firefox and Google Chrome
--- /tmp/test-tmpfs/nilfs-6619/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 12:51:10.518445276 -0500
+++ /tmp/test-tmpfs/nilfs-6622/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 12:57:07.877171901 -0500
@@ -8,6 +8,16 @@
 #          then log out and log back in.
 
 
+'''
+Let's not support Firefox for now since it seems to have some quirks.  e.g.,:
+
+  When a window is minimized, its state set usually contains:
+    pyatspi.constants.STATE_ICONIFIED
+
+  ... except that it doesn't work for Firefox for some reason!!!
+'''
+
+
 # TODO: can I get PIDs of controlling processes of each window?
 # (the 'application names' collected by pyatspi sometimes don't exactly
 # match the names collected by SystemTap)
--- /tmp/test-tmpfs/nilfs-6634/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 12:57:22.420188616 -0500
+++ /tmp/test-tmpfs/nilfs-6665/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 12:58:07.836487517 -0500
@@ -126,6 +126,13 @@
       self.browserURL = urlTextField.getText(0, nChars)
 
 
+  def is_active(self):
+    return pyatspi.constants.STATE_ACTIVE in self.states
+
+  def is_minimized(self):
+    return pyatspi.constants.STATE_ICONIFIED in self.states
+
+
   def printMe(self):
     print ' ', self.title
     print '    x:%d,y:%d (%dx%d)' % (self.x, self.y, self.width, self.height)
--- /tmp/test-tmpfs/nilfs-6665/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 12:58:07.836487517 -0500
+++ /tmp/test-tmpfs/nilfs-6667/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:00:09.401354407 -0500
@@ -18,6 +18,9 @@
 '''
 
 
+# Note: pyatspi has some potentially useful utility functions:
+# http://people.gnome.org/~parente/pyatspi/doc/pyatspi.utils-module.html
+
 # TODO: can I get PIDs of controlling processes of each window?
 # (the 'application names' collected by pyatspi sometimes don't exactly
 # match the names collected by SystemTap)
--- /tmp/test-tmpfs/nilfs-6667/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:00:09.401354407 -0500
+++ /tmp/test-tmpfs/nilfs-6669/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:00:10.967571779 -0500
@@ -19,7 +19,7 @@
 
 
 # Note: pyatspi has some potentially useful utility functions:
-# http://people.gnome.org/~parente/pyatspi/doc/pyatspi.utils-module.html
+#   http://people.gnome.org/~parente/pyatspi/doc/pyatspi.utils-module.html
 
 # TODO: can I get PIDs of controlling processes of each window?
 # (the 'application names' collected by pyatspi sometimes don't exactly
--- /tmp/test-tmpfs/nilfs-6669/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:00:10.967571779 -0500
+++ /tmp/test-tmpfs/nilfs-6680/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:00:11.672669640 -0500
@@ -21,6 +21,7 @@
 # Note: pyatspi has some potentially useful utility functions:
 #   http://people.gnome.org/~parente/pyatspi/doc/pyatspi.utils-module.html
 
+
 # TODO: can I get PIDs of controlling processes of each window?
 # (the 'application names' collected by pyatspi sometimes don't exactly
 # match the names collected by SystemTap)
--- /tmp/test-tmpfs/nilfs-6680/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:00:11.672669640 -0500
+++ /tmp/test-tmpfs/nilfs-6694/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:02:51.334836839 -0500
@@ -140,7 +140,10 @@
   def printMe(self):
     print ' ', self.title
     print '    x:%d,y:%d (%dx%d)' % (self.x, self.y, self.width, self.height)
-    print '   ', self.states
+    if self.is_active():
+      print '    ACTIVE'
+    if self.is_minimized():
+      print '    MINIMIZED'
     if self.browserURL:
       print '   ', self.browserURL
 
--- /tmp/test-tmpfs/nilfs-6694/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:02:51.334836839 -0500
+++ /tmp/test-tmpfs/nilfs-6709/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:04:06.082234180 -0500
@@ -58,10 +58,10 @@
         assert desktopWindow.y == 0
         self.width  = desktopWindow.width
         self.height = desktopWindow.height
-      else:
-        # only append to self.apps if there are SOME windows
-        if len(newApp.windows):
-          self.apps.append(newApp)
+
+      # only append to self.apps if there are SOME windows
+      if len(newApp.windows):
+        self.apps.append(newApp)
 
     assert self.width > 0 and self.height > 0
 
--- /tmp/test-tmpfs/nilfs-6709/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:04:06.082234180 -0500
+++ /tmp/test-tmpfs/nilfs-6715/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:06:43.787240662 -0500
@@ -50,7 +50,7 @@
 
       newApp = Application(app)
 
-      # special case for nautilus window manager ...
+      # grab the desktop's dimensions
       if newApp.name == 'nautilus':
         desktopWindow = newApp.windows[0]
         assert desktopWindow.title == 'Desktop'
--- /tmp/test-tmpfs/nilfs-6741/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:07:09.508830515 -0500
+++ /tmp/test-tmpfs/nilfs-6743/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:08:36.883026160 -0500
@@ -99,14 +99,7 @@
     self.x, self.y = comp.getPosition(0)
     self.width, self.height = comp.getSize()
 
-    '''
-    When a window is minimized, its state set contains:
-      pyatspi.constants.STATE_ICONIFIED
-    (except that it doesn't work for Firefox for some reason!!!)
-
-    When a window is active (in focus), its state set contains:
-      pyatspi.constants.STATE_ACTIVE
-    '''
+
     self.states = frame.getState().getStates()
 
     # special fields for Firefox and Google Chrome
@@ -133,6 +126,7 @@
   def is_active(self):
     return pyatspi.constants.STATE_ACTIVE in self.states
 
+  # NB: doesn't work for Firefox
   def is_minimized(self):
     return pyatspi.constants.STATE_ICONIFIED in self.states
 
--- /tmp/test-tmpfs/nilfs-6758/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:08:39.809434659 -0500
+++ /tmp/test-tmpfs/nilfs-6762/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:11:43.223041368 -0500
@@ -46,7 +46,7 @@
       if not app: continue # some app entries are None; weird
 
       # ignore apps with certain names ...
-      if app.name == 'gnome-panel': continue
+      #if app.name == 'gnome-panel': continue
 
       newApp = Application(app)
 
--- /tmp/test-tmpfs/nilfs-6762/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:11:43.223041368 -0500
+++ /tmp/test-tmpfs/nilfs-6768/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:11:54.039553217 -0500
@@ -46,7 +46,7 @@
       if not app: continue # some app entries are None; weird
 
       # ignore apps with certain names ...
-      #if app.name == 'gnome-panel': continue
+      if app.name == 'gnome-panel': continue
 
       newApp = Application(app)
 
--- /tmp/test-tmpfs/nilfs-6768/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:11:54.039553217 -0500
+++ /tmp/test-tmpfs/nilfs-6773/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:13:04.637424430 -0500
@@ -249,7 +249,6 @@
 
 
 
-'''
 # Detects when a frame becomes 'active', which happens when it comes
 # into focus or when it's finished being moved ... seems pretty robust
 def frameActive(event):
@@ -269,7 +268,6 @@
 reg.registerEventListener(frameChange, 'window:minimize')
 reg.registerEventListener(frameChange, 'window:maximize')
 reg.registerEventListener(frameChange, 'window:restore')
-'''
 
 
 # Not too reliable
@@ -280,8 +278,8 @@
 reg.registerEventListener(focusEvent, 'focus')
 '''
 
-myDesktop = Desktop(atspiDesktop) # singleton
-myDesktop.printMe()
+#myDesktop = Desktop(atspiDesktop) # singleton
+#myDesktop.printMe()
 
 import sys
 sys.exit(0)
--- /tmp/test-tmpfs/nilfs-6773/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:13:04.637424430 -0500
+++ /tmp/test-tmpfs/nilfs-6775/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:13:33.260426673 -0500
@@ -215,40 +215,13 @@
 
 
 def printAllWindowInfo():
-  return
-  for app in atspiDesktop:
-    if app:
-      for frame in app:
-        # sometimes apps will have non-frame children ...
-        if frame.getRoleName() != 'frame': continue
-
-        print 'App:', app.name
-        print '  Window:', frame.name
-        comp = frame.queryComponent()
-        print '  Position:', comp.getPosition(0)
-        print '  Size:', comp.getSize()
-
-        urlField = None
-        if app.name == 'google-chrome':
-          urlField = getChromeUrlField(frame)
-        elif app.name == 'Firefox':
-          urlField = getFirefoxUrlField(frame)
-
-        if urlField:
-          urlTextField = urlField.queryEditableText()
-
-          # for some weird reason, google-chrome puts an extra 'junk'
-          # two bytes at the end of urlString, so adjust accordingly
-          nChars = urlTextField.characterCount
-          if app.name == 'google-chrome':
-            assert nChars > 0
-            nChars -= 2
-          urlString = urlTextField.getText(0, nChars)
-          print '  URL:', urlString
+  myDesktop = Desktop(atspiDesktop)
+  myDesktop.printMe()
   print '---'
 
 
 
+
 # Detects when a frame becomes 'active', which happens when it comes
 # into focus or when it's finished being moved ... seems pretty robust
 def frameActive(event):
@@ -278,9 +251,6 @@
 reg.registerEventListener(focusEvent, 'focus')
 '''
 
-#myDesktop = Desktop(atspiDesktop) # singleton
-#myDesktop.printMe()
-
 import sys
 sys.exit(0)
 
--- /tmp/test-tmpfs/nilfs-6775/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:13:33.260426673 -0500
+++ /tmp/test-tmpfs/nilfs-6777/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:13:34.361580645 -0500
@@ -220,8 +220,6 @@
   print '---'
 
 
-
-
 # Detects when a frame becomes 'active', which happens when it comes
 # into focus or when it's finished being moved ... seems pretty robust
 def frameActive(event):
--- /tmp/test-tmpfs/nilfs-6779/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:13:36.007810832 -0500
+++ /tmp/test-tmpfs/nilfs-6781/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:13:40.034373855 -0500
@@ -249,9 +249,6 @@
 reg.registerEventListener(focusEvent, 'focus')
 '''
 
-import sys
-sys.exit(0)
-
 
 try:
    pyatspi.Registry.start()
--- /tmp/test-tmpfs/nilfs-6801/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:13:41.339556355 -0500
+++ /tmp/test-tmpfs/nilfs-6807/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:26:43.632959802 -0500
@@ -226,14 +226,14 @@
   if event.source.getRoleName() != 'frame': return
   if event.detail1 != 1: return
   print get_ms_since_epoch(), event
-  printAllWindowInfo()
+  #printAllWindowInfo()
 reg.registerEventListener(frameActive, 'object:state-changed')
 
 
 def frameChange(event):
   if event.source.getRoleName() != 'frame': return
   print get_ms_since_epoch(), event
-  printAllWindowInfo()
+  #printAllWindowInfo()
 reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
 reg.registerEventListener(frameChange, 'window:create')
 reg.registerEventListener(frameChange, 'window:minimize')
--- /tmp/test-tmpfs/nilfs-6807/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:26:43.632959802 -0500
+++ /tmp/test-tmpfs/nilfs-6816/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:27:16.135505974 -0500
@@ -216,7 +216,7 @@
 
 def printAllWindowInfo():
   myDesktop = Desktop(atspiDesktop)
-  myDesktop.printMe()
+  #myDesktop.printMe()
   print '---'
 
 
@@ -226,14 +226,14 @@
   if event.source.getRoleName() != 'frame': return
   if event.detail1 != 1: return
   print get_ms_since_epoch(), event
-  #printAllWindowInfo()
+  printAllWindowInfo()
 reg.registerEventListener(frameActive, 'object:state-changed')
 
 
 def frameChange(event):
   if event.source.getRoleName() != 'frame': return
   print get_ms_since_epoch(), event
-  #printAllWindowInfo()
+  printAllWindowInfo()
 reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
 reg.registerEventListener(frameChange, 'window:create')
 reg.registerEventListener(frameChange, 'window:minimize')
--- /tmp/test-tmpfs/nilfs-6816/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:27:16.135505974 -0500
+++ /tmp/test-tmpfs/nilfs-6822/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:27:56.934212613 -0500
@@ -7,6 +7,8 @@
 #          check the "Enable assistive technologies" box,
 #          then log out and log back in.
 
+# NB: this won't fire an event when a Chrome window is moved :(
+
 
 '''
 Let's not support Firefox for now since it seems to have some quirks.  e.g.,:
--- /tmp/test-tmpfs/nilfs-6822/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:27:56.934212613 -0500
+++ /tmp/test-tmpfs/nilfs-6829/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:28:22.830834895 -0500
@@ -237,10 +237,10 @@
   print get_ms_since_epoch(), event
   printAllWindowInfo()
 reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
-reg.registerEventListener(frameChange, 'window:create')
-reg.registerEventListener(frameChange, 'window:minimize')
-reg.registerEventListener(frameChange, 'window:maximize')
-reg.registerEventListener(frameChange, 'window:restore')
+reg.registerEventListener(frameChange, 'window')
+#reg.registerEventListener(frameChange, 'window:minimize')
+#reg.registerEventListener(frameChange, 'window:maximize')
+#reg.registerEventListener(frameChange, 'window:restore')
 
 
 # Not too reliable
--- /tmp/test-tmpfs/nilfs-6829/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:28:22.830834895 -0500
+++ /tmp/test-tmpfs/nilfs-6831/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:29:06.661965835 -0500
@@ -237,10 +237,11 @@
   print get_ms_since_epoch(), event
   printAllWindowInfo()
 reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
-reg.registerEventListener(frameChange, 'window')
-#reg.registerEventListener(frameChange, 'window:minimize')
-#reg.registerEventListener(frameChange, 'window:maximize')
-#reg.registerEventListener(frameChange, 'window:restore')
+reg.registerEventListener(frameChange, 'window:create')
+reg.registerEventListener(frameChange, 'window:minimize')
+reg.registerEventListener(frameChange, 'window:maximize')
+reg.registerEventListener(frameChange, 'window:restore')
+reg.registerEventListener(frameChange, 'window:deactivate')
 
 
 # Not too reliable
--- /tmp/test-tmpfs/nilfs-6837/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:29:07.173037322 -0500
+++ /tmp/test-tmpfs/nilfs-6873/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:29:27.300852759 -0500
@@ -241,7 +241,6 @@
 reg.registerEventListener(frameChange, 'window:minimize')
 reg.registerEventListener(frameChange, 'window:maximize')
 reg.registerEventListener(frameChange, 'window:restore')
-reg.registerEventListener(frameChange, 'window:deactivate')
 
 
 # Not too reliable
--- /tmp/test-tmpfs/nilfs-6873/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:29:27.300852759 -0500
+++ /tmp/test-tmpfs/nilfs-6875/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:34:17.590459982 -0500
@@ -102,7 +102,10 @@
     self.width, self.height = comp.getSize()
 
 
-    self.states = frame.getState().getStates()
+    myStates = frame.getState().getStates() # temp
+
+    self.is_active = pyatspi.constants.STATE_ACTIVE in myStates
+    self.is_minimized = pyatspi.constants.STATE_ICONIFIED in myStates.states
 
     # special fields for Firefox and Google Chrome
     self.browserURL = None
@@ -125,14 +128,6 @@
       self.browserURL = urlTextField.getText(0, nChars)
 
 
-  def is_active(self):
-    return pyatspi.constants.STATE_ACTIVE in self.states
-
-  # NB: doesn't work for Firefox
-  def is_minimized(self):
-    return pyatspi.constants.STATE_ICONIFIED in self.states
-
-
   def printMe(self):
     print ' ', self.title
     print '    x:%d,y:%d (%dx%d)' % (self.x, self.y, self.width, self.height)
--- /tmp/test-tmpfs/nilfs-6875/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:34:17.590459982 -0500
+++ /tmp/test-tmpfs/nilfs-6878/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:34:21.502007177 -0500
@@ -131,9 +131,9 @@
   def printMe(self):
     print ' ', self.title
     print '    x:%d,y:%d (%dx%d)' % (self.x, self.y, self.width, self.height)
-    if self.is_active():
+    if self.is_active:
       print '    ACTIVE'
-    if self.is_minimized():
+    if self.is_minimized:
       print '    MINIMIZED'
     if self.browserURL:
       print '   ', self.browserURL
--- /tmp/test-tmpfs/nilfs-6878/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:34:21.502007177 -0500
+++ /tmp/test-tmpfs/nilfs-6881/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:34:29.486124092 -0500
@@ -213,7 +213,7 @@
 
 def printAllWindowInfo():
   myDesktop = Desktop(atspiDesktop)
-  #myDesktop.printMe()
+  myDesktop.printMe()
   print '---'
 
 
--- /tmp/test-tmpfs/nilfs-6881/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:34:29.486124092 -0500
+++ /tmp/test-tmpfs/nilfs-6888/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:34:42.260911191 -0500
@@ -105,7 +105,7 @@
     myStates = frame.getState().getStates() # temp
 
     self.is_active = pyatspi.constants.STATE_ACTIVE in myStates
-    self.is_minimized = pyatspi.constants.STATE_ICONIFIED in myStates.states
+    self.is_minimized = pyatspi.constants.STATE_ICONIFIED in myStates
 
     # special fields for Firefox and Google Chrome
     self.browserURL = None
--- /tmp/test-tmpfs/nilfs-6888/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:34:42.260911191 -0500
+++ /tmp/test-tmpfs/nilfs-6892/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:35:14.563430110 -0500
@@ -246,6 +246,8 @@
 reg.registerEventListener(focusEvent, 'focus')
 '''
 
+myDesktop = Desktop(atspiDesktop)
+
 
 try:
    pyatspi.Registry.start()
--- /tmp/test-tmpfs/nilfs-6892/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:35:14.563430110 -0500
+++ /tmp/test-tmpfs/nilfs-6894/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:35:29.499519586 -0500
@@ -212,7 +212,6 @@
 
 
 def printAllWindowInfo():
-  myDesktop = Desktop(atspiDesktop)
   myDesktop.printMe()
   print '---'
 
--- /tmp/test-tmpfs/nilfs-6900/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:35:31.466794800 -0500
+++ /tmp/test-tmpfs/nilfs-6909/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:35:58.058515709 -0500
@@ -245,7 +245,7 @@
 reg.registerEventListener(focusEvent, 'focus')
 '''
 
-myDesktop = Desktop(atspiDesktop)
+myDesktop = Desktop(atspiDesktop) # singleton
 
 
 try:
--- /tmp/test-tmpfs/nilfs-6909/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:35:58.058515709 -0500
+++ /tmp/test-tmpfs/nilfs-6913/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:37:26.505898482 -0500
@@ -139,6 +139,14 @@
       print '   ', self.browserURL
 
 
+# The plan here is to initialize a singleton myDesktop instance at the
+# beginning of execution and to selectively update myDesktop as events
+# occur while making AS FEW QUERIES to the at-spi API as possible, since
+# these queries can be SLOW!
+
+myDesktop = Desktop(atspiDesktop) # singleton
+
+
 
 '''
 Notes about window events:
@@ -245,8 +253,6 @@
 reg.registerEventListener(focusEvent, 'focus')
 '''
 
-myDesktop = Desktop(atspiDesktop) # singleton
-
 
 try:
    pyatspi.Registry.start()
--- /tmp/test-tmpfs/nilfs-6913/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:37:26.505898482 -0500
+++ /tmp/test-tmpfs/nilfs-6916/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:37:58.830423999 -0500
@@ -10,6 +10,10 @@
 # NB: this won't fire an event when a Chrome window is moved :(
 
 
+import time
+import pyatspi
+
+
 '''
 Let's not support Firefox for now since it seems to have some quirks.  e.g.,:
 
@@ -139,6 +143,9 @@
       print '   ', self.browserURL
 
 
+reg = pyatspi.Registry()    # get the Registry singleton
+atspiDesktop = reg.getDesktop(0) # get desktop
+
 # The plan here is to initialize a singleton myDesktop instance at the
 # beginning of execution and to selectively update myDesktop as events
 # occur while making AS FEW QUERIES to the at-spi API as possible, since
@@ -192,11 +199,6 @@
    http://developers-blog.org/blog/default/2010/08/21/Track-window-and-widget-events-with-AT-SPI
 '''
 
-import time
-import pyatspi
-
-reg = pyatspi.Registry()    # get the Registry singleton
-atspiDesktop = reg.getDesktop(0) # get desktop
  
 
 def get_ms_since_epoch():
--- /tmp/test-tmpfs/nilfs-6916/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:37:58.830423999 -0500
+++ /tmp/test-tmpfs/nilfs-6921/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:38:05.823403038 -0500
@@ -154,7 +154,6 @@
 myDesktop = Desktop(atspiDesktop) # singleton
 
 
-
 '''
 Notes about window events:
 
--- /tmp/test-tmpfs/nilfs-6921/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:38:05.823403038 -0500
+++ /tmp/test-tmpfs/nilfs-6939/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:38:29.004648488 -0500
@@ -23,6 +23,20 @@
   ... except that it doesn't work for Firefox for some reason!!!
 '''
 
+# SUPER hacky way of getting the current URL text string from
+# Google Chrome and Firefox ... there MUST be a better way :)
+#
+# Use printDesktopTree.py to find out the exact path to the URL boxes
+#
+# use the accessibility API to find the exact location of the URL bar.
+# Note that this will BREAK if the user's Chrome/Firefox GUI even
+# looks slightly different than my own GUI:
+def getChromeUrlField(frameElt):
+  return frameElt[0][0][2][0][0][1][0][1][1][0][0]
+
+def getFirefoxUrlField(frameElt):
+  return frameElt[10][6][1]
+
 
 # Note: pyatspi has some potentially useful utility functions:
 #   http://people.gnome.org/~parente/pyatspi/doc/pyatspi.utils-module.html
@@ -204,22 +218,6 @@
   milliseconds_since_epoch = int(time.time() * 1000)
   return milliseconds_since_epoch
 
-
-# SUPER hacky way of getting the current URL text string from
-# Google Chrome and Firefox ... there MUST be a better way :)
-#
-# Use printDesktopTree.py to find out the exact path to the URL boxes
-#
-# use the accessibility API to find the exact location of the URL bar.
-# Note that this will BREAK if the user's Chrome/Firefox GUI even
-# looks slightly different than my own GUI:
-def getChromeUrlField(frameElt):
-  return frameElt[0][0][2][0][0][1][0][1][1][0][0]
-
-def getFirefoxUrlField(frameElt):
-  return frameElt[10][6][1]
-
-
 def printAllWindowInfo():
   myDesktop.printMe()
   print '---'
--- /tmp/test-tmpfs/nilfs-6939/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:38:29.004648488 -0500
+++ /tmp/test-tmpfs/nilfs-6943/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:40:43.161431046 -0500
@@ -230,6 +230,10 @@
   if event.detail1 != 1: return
   print get_ms_since_epoch(), event
   printAllWindowInfo()
+  # TODO: QUERY and de-activate the previously-active frame, because it
+  # might have been minimized or moved ... then query THIS frame to get
+  # its new coordinates
+
 reg.registerEventListener(frameActive, 'object:state-changed')
 
 
--- /tmp/test-tmpfs/nilfs-6943/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:40:43.161431046 -0500
+++ /tmp/test-tmpfs/nilfs-6949/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:41:36.515900997 -0500
@@ -219,7 +219,7 @@
   return milliseconds_since_epoch
 
 def printAllWindowInfo():
-  myDesktop.printMe()
+  #myDesktop.printMe()
   print '---'
 
 
@@ -227,7 +227,7 @@
 # into focus or when it's finished being moved ... seems pretty robust
 def frameActive(event):
   if event.source.getRoleName() != 'frame': return
-  if event.detail1 != 1: return
+  #if event.detail1 != 1: return
   print get_ms_since_epoch(), event
   printAllWindowInfo()
   # TODO: QUERY and de-activate the previously-active frame, because it
--- /tmp/test-tmpfs/nilfs-6949/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:41:36.515900997 -0500
+++ /tmp/test-tmpfs/nilfs-6954/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:42:22.513340955 -0500
@@ -227,7 +227,7 @@
 # into focus or when it's finished being moved ... seems pretty robust
 def frameActive(event):
   if event.source.getRoleName() != 'frame': return
-  #if event.detail1 != 1: return
+  if event.detail1 != 1: return
   print get_ms_since_epoch(), event
   printAllWindowInfo()
   # TODO: QUERY and de-activate the previously-active frame, because it
--- /tmp/test-tmpfs/nilfs-6954/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:42:22.513340955 -0500
+++ /tmp/test-tmpfs/nilfs-6959/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:43:14.920678386 -0500
@@ -227,7 +227,11 @@
 # into focus or when it's finished being moved ... seems pretty robust
 def frameActive(event):
   if event.source.getRoleName() != 'frame': return
-  if event.detail1 != 1: return
+
+  # event.details1 == 1 means the frame has turned 'active'
+  # event.details1 == 0 means the frame has turned 'inactive'
+  #if event.detail1 != 1: return
+
   print get_ms_since_epoch(), event
   printAllWindowInfo()
   # TODO: QUERY and de-activate the previously-active frame, because it
--- /tmp/test-tmpfs/nilfs-6959/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:43:14.920678386 -0500
+++ /tmp/test-tmpfs/nilfs-6964/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:43:36.830745977 -0500
@@ -223,9 +223,7 @@
   print '---'
 
 
-# Detects when a frame becomes 'active', which happens when it comes
-# into focus or when it's finished being moved ... seems pretty robust
-def frameActive(event):
+def frameStateChanged(event):
   if event.source.getRoleName() != 'frame': return
 
   # event.details1 == 1 means the frame has turned 'active'
@@ -238,7 +236,7 @@
   # might have been minimized or moved ... then query THIS frame to get
   # its new coordinates
 
-reg.registerEventListener(frameActive, 'object:state-changed')
+reg.registerEventListener(frameStateChanged, 'object:state-changed')
 
 
 def frameChange(event):
--- /tmp/test-tmpfs/nilfs-6970/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:45:45.689787460 -0500
+++ /tmp/test-tmpfs/nilfs-6988/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:47:37.290412806 -0500
@@ -244,10 +244,10 @@
   print get_ms_since_epoch(), event
   printAllWindowInfo()
 reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
-reg.registerEventListener(frameChange, 'window:create')
-reg.registerEventListener(frameChange, 'window:minimize')
-reg.registerEventListener(frameChange, 'window:maximize')
-reg.registerEventListener(frameChange, 'window:restore')
+#reg.registerEventListener(frameChange, 'window:create')
+#reg.registerEventListener(frameChange, 'window:minimize')
+#reg.registerEventListener(frameChange, 'window:maximize')
+#reg.registerEventListener(frameChange, 'window:restore')
 
 
 # Not too reliable
--- /tmp/test-tmpfs/nilfs-6988/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:47:37.290412806 -0500
+++ /tmp/test-tmpfs/nilfs-6994/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:51:44.181981064 -0500
@@ -224,7 +224,7 @@
 
 
 def frameStateChanged(event):
-  if event.source.getRoleName() != 'frame': return
+  if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
 
   # event.details1 == 1 means the frame has turned 'active'
   # event.details1 == 0 means the frame has turned 'inactive'
@@ -240,7 +240,8 @@
 
 
 def frameChange(event):
-  if event.source.getRoleName() != 'frame': return
+  if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
+
   print get_ms_since_epoch(), event
   printAllWindowInfo()
 reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
--- /tmp/test-tmpfs/nilfs-6994/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:51:44.181981064 -0500
+++ /tmp/test-tmpfs/nilfs-6997/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:52:17.434636965 -0500
@@ -57,6 +57,8 @@
   def __init__(self, atspiDesktop):
     self.apps = []
 
+    self.atspiDesktop = atspiDesktop
+
     # In GNOME, the desktop resolution is set by the dimensions of the
     # 'Desktop' window of the 'nautilus' application
     self.width = -1
--- /tmp/test-tmpfs/nilfs-6997/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:52:17.434636965 -0500
+++ /tmp/test-tmpfs/nilfs-7000/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:52:27.987114482 -0500
@@ -97,6 +97,7 @@
 class Application:
   def __init__(self, app):
     self.name = app.name
+    self.atspiApp = app
     self.windows = []
 
     for child in app:
--- /tmp/test-tmpfs/nilfs-7000/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:52:27.987114482 -0500
+++ /tmp/test-tmpfs/nilfs-7003/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:52:35.331142766 -0500
@@ -116,6 +116,7 @@
 class Window:
   def __init__(self, frame, parentApp):
     self.parent = parentApp
+    self.atspiFrame = frame
     self.title = frame.name
 
     comp = frame.queryComponent()
--- /tmp/test-tmpfs/nilfs-7012/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:52:42.386130581 -0500
+++ /tmp/test-tmpfs/nilfs-7018/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:58:27.442440318 -0500
@@ -123,7 +123,6 @@
     self.x, self.y = comp.getPosition(0)
     self.width, self.height = comp.getSize()
 
-
     myStates = frame.getState().getStates() # temp
 
     self.is_active = pyatspi.constants.STATE_ACTIVE in myStates
--- /tmp/test-tmpfs/nilfs-7018/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:58:27.442440318 -0500
+++ /tmp/test-tmpfs/nilfs-7021/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:59:23.231249928 -0500
@@ -245,7 +245,7 @@
 def frameChange(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
 
-  print get_ms_since_epoch(), event
+  print get_ms_since_epoch(), event.source
   printAllWindowInfo()
 reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
 #reg.registerEventListener(frameChange, 'window:create')
--- /tmp/test-tmpfs/nilfs-7021/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:59:23.231249928 -0500
+++ /tmp/test-tmpfs/nilfs-7024/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:59:35.136916554 -0500
@@ -245,7 +245,7 @@
 def frameChange(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
 
-  print get_ms_since_epoch(), event.source
+  print get_ms_since_epoch(), event
   printAllWindowInfo()
 reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
 #reg.registerEventListener(frameChange, 'window:create')
--- /tmp/test-tmpfs/nilfs-7024/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:59:35.136916554 -0500
+++ /tmp/test-tmpfs/nilfs-7029/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:59:44.743261309 -0500
@@ -233,7 +233,7 @@
   # event.details1 == 0 means the frame has turned 'inactive'
   #if event.detail1 != 1: return
 
-  print get_ms_since_epoch(), event
+  print get_ms_since_epoch(), event.source
   printAllWindowInfo()
   # TODO: QUERY and de-activate the previously-active frame, because it
   # might have been minimized or moved ... then query THIS frame to get
@@ -245,7 +245,7 @@
 def frameChange(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
 
-  print get_ms_since_epoch(), event
+  print get_ms_since_epoch(), event.source
   printAllWindowInfo()
 reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
 #reg.registerEventListener(frameChange, 'window:create')
--- /tmp/test-tmpfs/nilfs-7029/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 13:59:44.743261309 -0500
+++ /tmp/test-tmpfs/nilfs-7032/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:00:35.839414097 -0500
@@ -235,9 +235,6 @@
 
   print get_ms_since_epoch(), event.source
   printAllWindowInfo()
-  # TODO: QUERY and de-activate the previously-active frame, because it
-  # might have been minimized or moved ... then query THIS frame to get
-  # its new coordinates
 
 reg.registerEventListener(frameStateChanged, 'object:state-changed')
 
--- /tmp/test-tmpfs/nilfs-7032/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:00:35.839414097 -0500
+++ /tmp/test-tmpfs/nilfs-7034/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:00:58.310559776 -0500
@@ -234,6 +234,7 @@
   #if event.detail1 != 1: return
 
   print get_ms_since_epoch(), event.source
+  myDesktop.updateFrame(event.source)
   printAllWindowInfo()
 
 reg.registerEventListener(frameStateChanged, 'object:state-changed')
@@ -243,6 +244,7 @@
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
 
   print get_ms_since_epoch(), event.source
+  myDesktop.updateFrame(event.source)
   printAllWindowInfo()
 reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
 #reg.registerEventListener(frameChange, 'window:create')
--- /tmp/test-tmpfs/nilfs-7034/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:00:58.310559776 -0500
+++ /tmp/test-tmpfs/nilfs-7043/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:01:01.653027682 -0500
@@ -235,7 +235,7 @@
 
   print get_ms_since_epoch(), event.source
   myDesktop.updateFrame(event.source)
-  printAllWindowInfo()
+  #printAllWindowInfo()
 
 reg.registerEventListener(frameStateChanged, 'object:state-changed')
 
@@ -245,7 +245,7 @@
 
   print get_ms_since_epoch(), event.source
   myDesktop.updateFrame(event.source)
-  printAllWindowInfo()
+  #printAllWindowInfo()
 reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
 #reg.registerEventListener(frameChange, 'window:create')
 #reg.registerEventListener(frameChange, 'window:minimize')
--- /tmp/test-tmpfs/nilfs-7043/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:01:01.653027682 -0500
+++ /tmp/test-tmpfs/nilfs-7046/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:03:40.362245297 -0500
@@ -88,6 +88,12 @@
     assert self.width > 0 and self.height > 0
 
 
+  # 
+  def updateFrame(self, atspiFrame):
+    
+    # if the frame isn't found, then this means it's a NEW window, 
+
+
   def printMe(self):
     print 'DESKTOP %dx%d' % (self.width, self.height)
     for app in self.apps:
@@ -233,8 +239,8 @@
   # event.details1 == 0 means the frame has turned 'inactive'
   #if event.detail1 != 1: return
 
-  print get_ms_since_epoch(), event.source
-  myDesktop.updateFrame(event.source)
+  print get_ms_since_epoch(), event.source, event.host_application
+  #myDesktop.updateFrame(event.source, event.host_application)
   #printAllWindowInfo()
 
 reg.registerEventListener(frameStateChanged, 'object:state-changed')
@@ -244,7 +250,7 @@
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
 
   print get_ms_since_epoch(), event.source
-  myDesktop.updateFrame(event.source)
+  #myDesktop.updateFrame(event.source, event.host_application)
   #printAllWindowInfo()
 reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
 #reg.registerEventListener(frameChange, 'window:create')
--- /tmp/test-tmpfs/nilfs-7046/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:03:40.362245297 -0500
+++ /tmp/test-tmpfs/nilfs-7049/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:03:48.715414669 -0500
@@ -89,7 +89,8 @@
 
 
   # 
-  def updateFrame(self, atspiFrame):
+  def updateFrame(self, atspiFrame, atspiApp):
+    pass
     
     # if the frame isn't found, then this means it's a NEW window, 
 
--- /tmp/test-tmpfs/nilfs-7052/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:03:59.767961929 -0500
+++ /tmp/test-tmpfs/nilfs-7054/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:04:21.041940107 -0500
@@ -88,7 +88,8 @@
     assert self.width > 0 and self.height > 0
 
 
-  # 
+  # do an 'incremental update' since querying the entire desktop using
+  # at-spi leads to a small but noticeable lag
   def updateFrame(self, atspiFrame, atspiApp):
     pass
     
--- /tmp/test-tmpfs/nilfs-7066/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:04:22.969209911 -0500
+++ /tmp/test-tmpfs/nilfs-7069/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:13:11.779220381 -0500
@@ -55,7 +55,7 @@
 
 class Desktop:
   def __init__(self, atspiDesktop):
-    self.apps = []
+    self.apps = [] # Application instances
 
     self.atspiDesktop = atspiDesktop
 
@@ -91,6 +91,7 @@
   # do an 'incremental update' since querying the entire desktop using
   # at-spi leads to a small but noticeable lag
   def updateFrame(self, atspiFrame, atspiApp):
+    for app in self.apps:
     pass
     
     # if the frame isn't found, then this means it's a NEW window, 
@@ -106,7 +107,7 @@
   def __init__(self, app):
     self.name = app.name
     self.atspiApp = app
-    self.windows = []
+    self.windows = [] # Window instances
 
     for child in app:
       # sometimes apps will have non-frame children ...
--- /tmp/test-tmpfs/nilfs-7069/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:13:11.779220381 -0500
+++ /tmp/test-tmpfs/nilfs-7072/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:13:32.481118206 -0500
@@ -92,7 +92,8 @@
   # at-spi leads to a small but noticeable lag
   def updateFrame(self, atspiFrame, atspiApp):
     for app in self.apps:
-    pass
+      if app.atspiApp == atspiApp:
+        print "BOOYA"
     
     # if the frame isn't found, then this means it's a NEW window, 
 
--- /tmp/test-tmpfs/nilfs-7072/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:13:32.481118206 -0500
+++ /tmp/test-tmpfs/nilfs-7075/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:13:57.363601237 -0500
@@ -95,7 +95,9 @@
       if app.atspiApp == atspiApp:
         print "BOOYA"
     
-    # if the frame isn't found, then this means it's a NEW window, 
+    # if the app isn't found, then this means it's a NEW app!
+
+    # TODO: what about if an app CLOSES!?!
 
 
   def printMe(self):
--- /tmp/test-tmpfs/nilfs-7075/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:13:57.363601237 -0500
+++ /tmp/test-tmpfs/nilfs-7091/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:14:03.938521591 -0500
@@ -246,7 +246,7 @@
   #if event.detail1 != 1: return
 
   print get_ms_since_epoch(), event.source, event.host_application
-  #myDesktop.updateFrame(event.source, event.host_application)
+  myDesktop.updateFrame(event.source, event.host_application)
   #printAllWindowInfo()
 
 reg.registerEventListener(frameStateChanged, 'object:state-changed')
@@ -256,7 +256,7 @@
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
 
   print get_ms_since_epoch(), event.source
-  #myDesktop.updateFrame(event.source, event.host_application)
+  myDesktop.updateFrame(event.source, event.host_application)
   #printAllWindowInfo()
 reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
 #reg.registerEventListener(frameChange, 'window:create')
--- /tmp/test-tmpfs/nilfs-7091/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:14:03.938521591 -0500
+++ /tmp/test-tmpfs/nilfs-7105/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:21:45.487131261 -0500
@@ -91,13 +91,17 @@
   # do an 'incremental update' since querying the entire desktop using
   # at-spi leads to a small but noticeable lag
   def updateFrame(self, atspiFrame, atspiApp):
+    found = False
     for app in self.apps:
       if app.atspiApp == atspiApp:
+        found = True
         print "BOOYA"
     
+    if not found:
+      pass
     # if the app isn't found, then this means it's a NEW app!
 
-    # TODO: what about if an app CLOSES!?!
+    # TODO: what about if an app CLOSES so it's no longer in the desktop???
 
 
   def printMe(self):
--- /tmp/test-tmpfs/nilfs-7105/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:21:45.487131261 -0500
+++ /tmp/test-tmpfs/nilfs-7108/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:22:12.350891905 -0500
@@ -267,6 +267,7 @@
 #reg.registerEventListener(frameChange, 'window:minimize')
 #reg.registerEventListener(frameChange, 'window:maximize')
 #reg.registerEventListener(frameChange, 'window:restore')
+reg.registerEventListener(frameChange, 'window')
 
 
 # Not too reliable
--- /tmp/test-tmpfs/nilfs-7108/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:22:12.350891905 -0500
+++ /tmp/test-tmpfs/nilfs-7123/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:22:18.374735182 -0500
@@ -259,7 +259,7 @@
 def frameChange(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
 
-  print get_ms_since_epoch(), event.source
+  print get_ms_since_epoch(), event.source, event.host_application
   myDesktop.updateFrame(event.source, event.host_application)
   #printAllWindowInfo()
 reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
--- /tmp/test-tmpfs/nilfs-7123/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:22:18.374735182 -0500
+++ /tmp/test-tmpfs/nilfs-7139/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:22:35.423121786 -0500
@@ -259,7 +259,7 @@
 def frameChange(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
 
-  print get_ms_since_epoch(), event.source, event.host_application
+  print get_ms_since_epoch(), event
   myDesktop.updateFrame(event.source, event.host_application)
   #printAllWindowInfo()
 reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
--- /tmp/test-tmpfs/nilfs-7139/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:22:35.423121786 -0500
+++ /tmp/test-tmpfs/nilfs-7194/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:23:21.467567579 -0500
@@ -102,6 +102,7 @@
     # if the app isn't found, then this means it's a NEW app!
 
     # TODO: what about if an app CLOSES so it's no longer in the desktop???
+    # check out window events then
 
 
   def printMe(self):
--- /tmp/test-tmpfs/nilfs-7194/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 14:23:21.467567579 -0500
+++ /tmp/test-tmpfs/nilfs-7207/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:06:42.789437190 -0500
@@ -91,13 +91,15 @@
   # do an 'incremental update' since querying the entire desktop using
   # at-spi leads to a small but noticeable lag
   def updateFrame(self, atspiFrame, atspiApp):
-    found = False
+    appFound = False
     for app in self.apps:
       if app.atspiApp == atspiApp:
-        found = True
-        print "BOOYA"
+        appFound = True
+        for window in app.windows:
+          if window.atspiFrame == atspiFrame:
+            print 'FRAME FOUND!'
     
-    if not found:
+    if not appFound:
       pass
     # if the app isn't found, then this means it's a NEW app!
 
--- /tmp/test-tmpfs/nilfs-7207/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:06:42.789437190 -0500
+++ /tmp/test-tmpfs/nilfs-7210/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:11:25.458044822 -0500
@@ -92,12 +92,15 @@
   # at-spi leads to a small but noticeable lag
   def updateFrame(self, atspiFrame, atspiApp):
     appFound = False
+    frameFound = False
+
     for app in self.apps:
       if app.atspiApp == atspiApp:
         appFound = True
         for window in app.windows:
           if window.atspiFrame == atspiFrame:
-            print 'FRAME FOUND!'
+            frameFound = True
+            break
     
     if not appFound:
       pass
@@ -167,6 +170,8 @@
         nChars -= 2
       self.browserURL = urlTextField.getText(0, nChars)
 
+  def update(self, atspiFrame):
+
 
   def printMe(self):
     print ' ', self.title
--- /tmp/test-tmpfs/nilfs-7210/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:11:25.458044822 -0500
+++ /tmp/test-tmpfs/nilfs-7214/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:11:39.735045321 -0500
@@ -170,7 +170,8 @@
         nChars -= 2
       self.browserURL = urlTextField.getText(0, nChars)
 
-  def update(self, atspiFrame):
+  # update fields from self.atspiFrame
+  def update(self):
 
 
   def printMe(self):
--- /tmp/test-tmpfs/nilfs-7214/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:11:39.735045321 -0500
+++ /tmp/test-tmpfs/nilfs-7218/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:11:51.609709204 -0500
@@ -100,6 +100,7 @@
         for window in app.windows:
           if window.atspiFrame == atspiFrame:
             frameFound = True
+            window.update()
             break
     
     if not appFound:
--- /tmp/test-tmpfs/nilfs-7218/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:11:51.609709204 -0500
+++ /tmp/test-tmpfs/nilfs-7222/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:12:12.191593145 -0500
@@ -173,6 +173,7 @@
 
   # update fields from self.atspiFrame
   def update(self):
+    print self
 
 
   def printMe(self):
--- /tmp/test-tmpfs/nilfs-7222/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:12:12.191593145 -0500
+++ /tmp/test-tmpfs/nilfs-7227/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:12:31.669322372 -0500
@@ -278,7 +278,9 @@
 #reg.registerEventListener(frameChange, 'window:minimize')
 #reg.registerEventListener(frameChange, 'window:maximize')
 #reg.registerEventListener(frameChange, 'window:restore')
-reg.registerEventListener(frameChange, 'window')
+
+# try a catch-all for all window events:
+#reg.registerEventListener(frameChange, 'window')
 
 
 # Not too reliable
--- /tmp/test-tmpfs/nilfs-7227/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:12:31.669322372 -0500
+++ /tmp/test-tmpfs/nilfs-7232/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:12:54.523524711 -0500
@@ -172,6 +172,7 @@
       self.browserURL = urlTextField.getText(0, nChars)
 
   # update fields from self.atspiFrame
+  # and print (later return) the diffs from current state
   def update(self):
     print self
 
--- /tmp/test-tmpfs/nilfs-7232/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:12:54.523524711 -0500
+++ /tmp/test-tmpfs/nilfs-7237/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:13:31.025639401 -0500
@@ -175,6 +175,7 @@
   # and print (later return) the diffs from current state
   def update(self):
     print self
+    self.title = frame.name
 
 
   def printMe(self):
--- /tmp/test-tmpfs/nilfs-7237/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:13:31.025639401 -0500
+++ /tmp/test-tmpfs/nilfs-7242/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:14:15.443863299 -0500
@@ -177,6 +177,19 @@
     print self
     self.title = frame.name
 
+    # COPY-AND-PASTE ALERT!
+
+    comp = frame.queryComponent()
+    x, y = comp.getPosition(0)
+    width, height = comp.getSize()
+
+    myStates = frame.getState().getStates() # temp
+
+    self.is_active = pyatspi.constants.STATE_ACTIVE in myStates
+    self.is_minimized = pyatspi.constants.STATE_ICONIFIED in myStates
+
+
+
 
   def printMe(self):
     print ' ', self.title
--- /tmp/test-tmpfs/nilfs-7242/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:14:15.443863299 -0500
+++ /tmp/test-tmpfs/nilfs-7245/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:14:50.091718169 -0500
@@ -180,15 +180,12 @@
     # COPY-AND-PASTE ALERT!
 
     comp = frame.queryComponent()
-    x, y = comp.getPosition(0)
-    width, height = comp.getSize()
-
-    myStates = frame.getState().getStates() # temp
-
-    self.is_active = pyatspi.constants.STATE_ACTIVE in myStates
-    self.is_minimized = pyatspi.constants.STATE_ICONIFIED in myStates
-
+    new_x, new_y = comp.getPosition(0)
+    new_width, new_height = comp.getSize()
 
+    new_states = frame.getState().getStates()
+    new_is_active = pyatspi.constants.STATE_ACTIVE in new_states
+    new_is_minimized = pyatspi.constants.STATE_ICONIFIED in new_states
 
 
   def printMe(self):
--- /tmp/test-tmpfs/nilfs-7245/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:14:50.091718169 -0500
+++ /tmp/test-tmpfs/nilfs-7251/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:14:59.913094345 -0500
@@ -175,10 +175,9 @@
   # and print (later return) the diffs from current state
   def update(self):
     print self
-    self.title = frame.name
+    new_title = frame.name
 
     # COPY-AND-PASTE ALERT!
-
     comp = frame.queryComponent()
     new_x, new_y = comp.getPosition(0)
     new_width, new_height = comp.getSize()
--- /tmp/test-tmpfs/nilfs-7251/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:14:59.913094345 -0500
+++ /tmp/test-tmpfs/nilfs-7255/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:15:48.519905149 -0500
@@ -174,7 +174,6 @@
   # update fields from self.atspiFrame
   # and print (later return) the diffs from current state
   def update(self):
-    print self
     new_title = frame.name
 
     # COPY-AND-PASTE ALERT!
@@ -186,6 +185,12 @@
     new_is_active = pyatspi.constants.STATE_ACTIVE in new_states
     new_is_minimized = pyatspi.constants.STATE_ICONIFIED in new_states
 
+    if self.title != new_title: print 'TITLE CHANGED:', new_title
+    if self.x != new_x: print 'x CHANGED:', new_x
+    if self.y != new_y: print 'y CHANGED:', new_y
+    if self.width != new_width: print 'width CHANGED:', new_width
+    if self.height != new_height: print 'height CHANGED:', new_height
+
 
   def printMe(self):
     print ' ', self.title
--- /tmp/test-tmpfs/nilfs-7255/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:15:48.519905149 -0500
+++ /tmp/test-tmpfs/nilfs-7260/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:16:12.817309711 -0500
@@ -190,6 +190,8 @@
     if self.y != new_y: print 'y CHANGED:', new_y
     if self.width != new_width: print 'width CHANGED:', new_width
     if self.height != new_height: print 'height CHANGED:', new_height
+    if self.is_active != new_is_active: print 'is_active CHANGED:', new_is_active
+    if self.is_minimized != new_is_minimized: print 'is_minimized CHANGED:', new_is_minimized
 
 
   def printMe(self):
--- /tmp/test-tmpfs/nilfs-7260/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:16:12.817309711 -0500
+++ /tmp/test-tmpfs/nilfs-7264/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:16:37.235731232 -0500
@@ -174,7 +174,7 @@
   # update fields from self.atspiFrame
   # and print (later return) the diffs from current state
   def update(self):
-    new_title = frame.name
+    new_title = self.atspiFrame.name
 
     # COPY-AND-PASTE ALERT!
     comp = frame.queryComponent()
--- /tmp/test-tmpfs/nilfs-7264/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:16:37.235731232 -0500
+++ /tmp/test-tmpfs/nilfs-7291/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:16:52.161822680 -0500
@@ -171,17 +171,17 @@
         nChars -= 2
       self.browserURL = urlTextField.getText(0, nChars)
 
-  # update fields from self.atspiFrame
+  # update fields by re-querying self.atspiFrame
   # and print (later return) the diffs from current state
   def update(self):
     new_title = self.atspiFrame.name
 
     # COPY-AND-PASTE ALERT!
-    comp = frame.queryComponent()
+    comp = self.atspiFrame.queryComponent()
     new_x, new_y = comp.getPosition(0)
     new_width, new_height = comp.getSize()
 
-    new_states = frame.getState().getStates()
+    new_states = self.atspiFrame.getState().getStates()
     new_is_active = pyatspi.constants.STATE_ACTIVE in new_states
     new_is_minimized = pyatspi.constants.STATE_ICONIFIED in new_states
 
--- /tmp/test-tmpfs/nilfs-7291/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:16:52.161822680 -0500
+++ /tmp/test-tmpfs/nilfs-7317/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:20:57.240096414 -0500
@@ -193,6 +193,14 @@
     if self.is_active != new_is_active: print 'is_active CHANGED:', new_is_active
     if self.is_minimized != new_is_minimized: print 'is_minimized CHANGED:', new_is_minimized
 
+    self.title = new_title
+    self.x = new_x
+    self.y = new_y
+    self.width = new_width
+    self.height = new_height
+    self.is_active = new_is_active
+    self.is_minimized = new_is_minimized
+
 
   def printMe(self):
     print ' ', self.title
--- /tmp/test-tmpfs/nilfs-7317/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:20:57.240096414 -0500
+++ /tmp/test-tmpfs/nilfs-7319/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:26:06.513097962 -0500
@@ -193,6 +193,24 @@
     if self.is_active != new_is_active: print 'is_active CHANGED:', new_is_active
     if self.is_minimized != new_is_minimized: print 'is_minimized CHANGED:', new_is_minimized
 
+    # special fields for Firefox and Google Chrome
+    urlField = None
+    if self.parent.name == 'google-chrome':
+      urlField = getChromeUrlField(frame)
+    elif self.parent.name == 'Firefox':
+      urlField = getFirefoxUrlField(frame)
+
+    if urlField:
+      urlTextField = urlField.queryEditableText()
+
+      # for some weird reason, google-chrome puts an extra 'junk'
+      # two bytes at the end of urlString, so adjust accordingly
+      nChars = urlTextField.characterCount
+      if self.parent.name == 'google-chrome':
+        assert nChars > 0
+        nChars -= 2
+      self.browserURL = urlTextField.getText(0, nChars)
+
     self.title = new_title
     self.x = new_x
     self.y = new_y
--- /tmp/test-tmpfs/nilfs-7324/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:26:07.849097969 -0500
+++ /tmp/test-tmpfs/nilfs-7351/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:26:24.780098054 -0500
@@ -196,9 +196,9 @@
     # special fields for Firefox and Google Chrome
     urlField = None
     if self.parent.name == 'google-chrome':
-      urlField = getChromeUrlField(frame)
+      urlField = getChromeUrlField(self.atspiFrame)
     elif self.parent.name == 'Firefox':
-      urlField = getFirefoxUrlField(frame)
+      urlField = getFirefoxUrlField(self.atspiFrame)
 
     if urlField:
       urlTextField = urlField.queryEditableText()
--- /tmp/test-tmpfs/nilfs-7351/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:26:24.780098054 -0500
+++ /tmp/test-tmpfs/nilfs-7355/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:27:18.220098321 -0500
@@ -209,7 +209,7 @@
       if self.parent.name == 'google-chrome':
         assert nChars > 0
         nChars -= 2
-      self.browserURL = urlTextField.getText(0, nChars)
+      new_browserURL = urlTextField.getText(0, nChars)
 
     self.title = new_title
     self.x = new_x
@@ -218,6 +218,7 @@
     self.height = new_height
     self.is_active = new_is_active
     self.is_minimized = new_is_minimized
+    self.browserURL = new_browserURL
 
 
   def printMe(self):
--- /tmp/test-tmpfs/nilfs-7355/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:27:18.220098321 -0500
+++ /tmp/test-tmpfs/nilfs-7357/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:27:41.743098439 -0500
@@ -185,13 +185,6 @@
     new_is_active = pyatspi.constants.STATE_ACTIVE in new_states
     new_is_minimized = pyatspi.constants.STATE_ICONIFIED in new_states
 
-    if self.title != new_title: print 'TITLE CHANGED:', new_title
-    if self.x != new_x: print 'x CHANGED:', new_x
-    if self.y != new_y: print 'y CHANGED:', new_y
-    if self.width != new_width: print 'width CHANGED:', new_width
-    if self.height != new_height: print 'height CHANGED:', new_height
-    if self.is_active != new_is_active: print 'is_active CHANGED:', new_is_active
-    if self.is_minimized != new_is_minimized: print 'is_minimized CHANGED:', new_is_minimized
 
     # special fields for Firefox and Google Chrome
     urlField = None
@@ -211,6 +204,15 @@
         nChars -= 2
       new_browserURL = urlTextField.getText(0, nChars)
 
+    if self.title != new_title: print 'TITLE CHANGED:', new_title
+    if self.x != new_x: print 'x CHANGED:', new_x
+    if self.y != new_y: print 'y CHANGED:', new_y
+    if self.width != new_width: print 'width CHANGED:', new_width
+    if self.height != new_height: print 'height CHANGED:', new_height
+    if self.is_active != new_is_active: print 'is_active CHANGED:', new_is_active
+    if self.is_minimized != new_is_minimized: print 'is_minimized CHANGED:', new_is_minimized
+    if self.browserURL != new_browserURL: print 'URL CHANGED:', new_browserURL
+
     self.title = new_title
     self.x = new_x
     self.y = new_y
--- /tmp/test-tmpfs/nilfs-7360/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:27:43.208098446 -0500
+++ /tmp/test-tmpfs/nilfs-7363/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:28:09.117098576 -0500
@@ -186,6 +186,8 @@
     new_is_minimized = pyatspi.constants.STATE_ICONIFIED in new_states
 
 
+    new_browserURL = None
+
     # special fields for Firefox and Google Chrome
     urlField = None
     if self.parent.name == 'google-chrome':
--- /tmp/test-tmpfs/nilfs-7415/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:28:15.461098607 -0500
+++ /tmp/test-tmpfs/nilfs-7417/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:31:12.433099493 -0500
@@ -88,8 +88,9 @@
     assert self.width > 0 and self.height > 0
 
 
-  # do an 'incremental update' since querying the entire desktop using
-  # at-spi leads to a small but noticeable lag
+  # do an incremental update since querying the entire desktop using
+  # at-spi leads to (small but noticeable) lag
+
   def updateFrame(self, atspiFrame, atspiApp):
     appFound = False
     frameFound = False
--- /tmp/test-tmpfs/nilfs-7417/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:31:12.433099493 -0500
+++ /tmp/test-tmpfs/nilfs-7424/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:31:13.857099500 -0500
@@ -90,7 +90,6 @@
 
   # do an incremental update since querying the entire desktop using
   # at-spi leads to (small but noticeable) lag
-
   def updateFrame(self, atspiFrame, atspiApp):
     appFound = False
     frameFound = False
--- /tmp/test-tmpfs/nilfs-7424/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:31:13.857099500 -0500
+++ /tmp/test-tmpfs/nilfs-7426/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:32:55.793100010 -0500
@@ -152,8 +152,11 @@
     self.is_minimized = pyatspi.constants.STATE_ICONIFIED in myStates
 
     # special fields for Firefox and Google Chrome
-    self.browserURL = None
+    self.browserURL = self.getURL()
 
+  # returns a URL string if applicable, or 'None' if the Window isn't a
+  # Firefox or Chrome web browser window
+  def getURL(self):
     urlField = None
     if self.parent.name == 'google-chrome':
       urlField = getChromeUrlField(frame)
@@ -169,7 +172,10 @@
       if self.parent.name == 'google-chrome':
         assert nChars > 0
         nChars -= 2
-      self.browserURL = urlTextField.getText(0, nChars)
+      return urlTextField.getText(0, nChars)
+
+    return None
+
 
   # update fields by re-querying self.atspiFrame
   # and print (later return) the diffs from current state
--- /tmp/test-tmpfs/nilfs-7426/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:32:55.793100010 -0500
+++ /tmp/test-tmpfs/nilfs-7428/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:32:56.818100015 -0500
@@ -154,6 +154,7 @@
     # special fields for Firefox and Google Chrome
     self.browserURL = self.getURL()
 
+
   # returns a URL string if applicable, or 'None' if the Window isn't a
   # Firefox or Chrome web browser window
   def getURL(self):
--- /tmp/test-tmpfs/nilfs-7432/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:33:00.691100035 -0500
+++ /tmp/test-tmpfs/nilfs-7436/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:33:11.508100089 -0500
@@ -160,9 +160,9 @@
   def getURL(self):
     urlField = None
     if self.parent.name == 'google-chrome':
-      urlField = getChromeUrlField(frame)
+      urlField = getChromeUrlField(self.atspiFrame)
     elif self.parent.name == 'Firefox':
-      urlField = getFirefoxUrlField(frame)
+      urlField = getFirefoxUrlField(self.atspiFrame)
 
     if urlField:
       urlTextField = urlField.queryEditableText()
--- /tmp/test-tmpfs/nilfs-7436/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:33:11.508100089 -0500
+++ /tmp/test-tmpfs/nilfs-7472/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:33:36.569100215 -0500
@@ -187,31 +187,10 @@
     comp = self.atspiFrame.queryComponent()
     new_x, new_y = comp.getPosition(0)
     new_width, new_height = comp.getSize()
-
     new_states = self.atspiFrame.getState().getStates()
     new_is_active = pyatspi.constants.STATE_ACTIVE in new_states
     new_is_minimized = pyatspi.constants.STATE_ICONIFIED in new_states
-
-
-    new_browserURL = None
-
-    # special fields for Firefox and Google Chrome
-    urlField = None
-    if self.parent.name == 'google-chrome':
-      urlField = getChromeUrlField(self.atspiFrame)
-    elif self.parent.name == 'Firefox':
-      urlField = getFirefoxUrlField(self.atspiFrame)
-
-    if urlField:
-      urlTextField = urlField.queryEditableText()
-
-      # for some weird reason, google-chrome puts an extra 'junk'
-      # two bytes at the end of urlString, so adjust accordingly
-      nChars = urlTextField.characterCount
-      if self.parent.name == 'google-chrome':
-        assert nChars > 0
-        nChars -= 2
-      new_browserURL = urlTextField.getText(0, nChars)
+    new_browserURL = self.getURL()
 
     if self.title != new_title: print 'TITLE CHANGED:', new_title
     if self.x != new_x: print 'x CHANGED:', new_x
--- /tmp/test-tmpfs/nilfs-7472/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:33:36.569100215 -0500
+++ /tmp/test-tmpfs/nilfs-7501/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:49:35.537495823 -0500
@@ -192,23 +192,37 @@
     new_is_minimized = pyatspi.constants.STATE_ICONIFIED in new_states
     new_browserURL = self.getURL()
 
-    if self.title != new_title: print 'TITLE CHANGED:', new_title
-    if self.x != new_x: print 'x CHANGED:', new_x
-    if self.y != new_y: print 'y CHANGED:', new_y
-    if self.width != new_width: print 'width CHANGED:', new_width
-    if self.height != new_height: print 'height CHANGED:', new_height
-    if self.is_active != new_is_active: print 'is_active CHANGED:', new_is_active
-    if self.is_minimized != new_is_minimized: print 'is_minimized CHANGED:', new_is_minimized
-    if self.browserURL != new_browserURL: print 'URL CHANGED:', new_browserURL
-
-    self.title = new_title
-    self.x = new_x
-    self.y = new_y
-    self.width = new_width
-    self.height = new_height
-    self.is_active = new_is_active
-    self.is_minimized = new_is_minimized
-    self.browserURL = new_browserURL
+    if self.title != new_title:
+      print 'TITLE CHANGED:', new_title
+      self.title = new_title
+
+    if self.x != new_x:
+      print 'x CHANGED:', new_x
+      self.x = new_x
+
+    if self.y != new_y:
+      print 'y CHANGED:', new_y
+      self.y = new_y
+
+    if self.width != new_width:
+      print 'width CHANGED:', new_width
+      self.width = new_width
+
+    if self.height != new_height:
+      print 'height CHANGED:', new_height
+      self.height = new_height
+
+    if self.is_active != new_is_active:
+      print 'is_active CHANGED:', new_is_active
+      self.is_active = new_is_active
+
+    if self.is_minimized != new_is_minimized:
+      print 'is_minimized CHANGED:', new_is_minimized
+      self.is_minimized = new_is_minimized
+
+    if self.browserURL != new_browserURL:
+      print 'URL CHANGED:', new_browserURL
+      self.browserURL = new_browserURL
 
 
   def printMe(self):
--- /tmp/test-tmpfs/nilfs-7501/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:49:35.537495823 -0500
+++ /tmp/test-tmpfs/nilfs-7610/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:50:16.298558797 -0500
@@ -193,35 +193,35 @@
     new_browserURL = self.getURL()
 
     if self.title != new_title:
-      print 'TITLE CHANGED:', new_title
+      print '  TITLE CHANGED:', new_title
       self.title = new_title
 
     if self.x != new_x:
-      print 'x CHANGED:', new_x
+      print '  x CHANGED:', new_x
       self.x = new_x
 
     if self.y != new_y:
-      print 'y CHANGED:', new_y
+      print '  y CHANGED:', new_y
       self.y = new_y
 
     if self.width != new_width:
-      print 'width CHANGED:', new_width
+      print '  width CHANGED:', new_width
       self.width = new_width
 
     if self.height != new_height:
-      print 'height CHANGED:', new_height
+      print '  height CHANGED:', new_height
       self.height = new_height
 
     if self.is_active != new_is_active:
-      print 'is_active CHANGED:', new_is_active
+      print '  is_active CHANGED:', new_is_active
       self.is_active = new_is_active
 
     if self.is_minimized != new_is_minimized:
-      print 'is_minimized CHANGED:', new_is_minimized
+      print '  is_minimized CHANGED:', new_is_minimized
       self.is_minimized = new_is_minimized
 
     if self.browserURL != new_browserURL:
-      print 'URL CHANGED:', new_browserURL
+      print '  URL CHANGED:', new_browserURL
       self.browserURL = new_browserURL
 
 
--- /tmp/test-tmpfs/nilfs-7610/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 19:50:16.298558797 -0500
+++ /tmp/test-tmpfs/nilfs-7612/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:00:22.696469601 -0500
@@ -182,8 +182,6 @@
   # and print (later return) the diffs from current state
   def update(self):
     new_title = self.atspiFrame.name
-
-    # COPY-AND-PASTE ALERT!
     comp = self.atspiFrame.queryComponent()
     new_x, new_y = comp.getPosition(0)
     new_width, new_height = comp.getSize()
--- /tmp/test-tmpfs/nilfs-7612/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:00:22.696469601 -0500
+++ /tmp/test-tmpfs/nilfs-7614/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:00:27.409465577 -0500
@@ -139,6 +139,7 @@
 class Window:
   def __init__(self, frame, parentApp):
     self.parent = parentApp
+
     self.atspiFrame = frame
     self.title = frame.name
 
--- /tmp/test-tmpfs/nilfs-7614/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:00:27.409465577 -0500
+++ /tmp/test-tmpfs/nilfs-7617/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:00:29.111107535 -0500
@@ -139,8 +139,8 @@
 class Window:
   def __init__(self, frame, parentApp):
     self.parent = parentApp
-
     self.atspiFrame = frame
+
     self.title = frame.name
 
     comp = frame.queryComponent()
--- /tmp/test-tmpfs/nilfs-7619/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:00:34.136552623 -0500
+++ /tmp/test-tmpfs/nilfs-7622/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:00:37.926881799 -0500
@@ -147,8 +147,7 @@
     self.x, self.y = comp.getPosition(0)
     self.width, self.height = comp.getSize()
 
-    myStates = frame.getState().getStates() # temp
-
+    myStates = frame.getState().getStates()
     self.is_active = pyatspi.constants.STATE_ACTIVE in myStates
     self.is_minimized = pyatspi.constants.STATE_ICONIFIED in myStates
 
--- /tmp/test-tmpfs/nilfs-7622/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:00:37.926881799 -0500
+++ /tmp/test-tmpfs/nilfs-7624/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:00:43.861315236 -0500
@@ -151,7 +151,7 @@
     self.is_active = pyatspi.constants.STATE_ACTIVE in myStates
     self.is_minimized = pyatspi.constants.STATE_ICONIFIED in myStates
 
-    # special fields for Firefox and Google Chrome
+    # special field for Firefox and Google Chrome
     self.browserURL = self.getURL()
 
 
--- /tmp/test-tmpfs/nilfs-7641/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:00:48.059535163 -0500
+++ /tmp/test-tmpfs/nilfs-7662/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:02:33.648167452 -0500
@@ -327,7 +327,7 @@
 #reg.registerEventListener(frameChange, 'window:restore')
 
 # try a catch-all for all window events:
-#reg.registerEventListener(frameChange, 'window')
+reg.registerEventListener(frameChange, 'window')
 
 
 # Not too reliable
--- /tmp/test-tmpfs/nilfs-7662/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:02:33.648167452 -0500
+++ /tmp/test-tmpfs/nilfs-7675/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:03:27.876578505 -0500
@@ -307,9 +307,8 @@
   # event.details1 == 0 means the frame has turned 'inactive'
   #if event.detail1 != 1: return
 
-  print get_ms_since_epoch(), event.source, event.host_application
+  print get_ms_since_epoch(), event
   myDesktop.updateFrame(event.source, event.host_application)
-  #printAllWindowInfo()
 
 reg.registerEventListener(frameStateChanged, 'object:state-changed')
 
@@ -319,7 +318,7 @@
 
   print get_ms_since_epoch(), event
   myDesktop.updateFrame(event.source, event.host_application)
-  #printAllWindowInfo()
+
 reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
 #reg.registerEventListener(frameChange, 'window:create')
 #reg.registerEventListener(frameChange, 'window:minimize')
--- /tmp/test-tmpfs/nilfs-7675/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:03:27.876578505 -0500
+++ /tmp/test-tmpfs/nilfs-7686/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:04:00.464696919 -0500
@@ -320,13 +320,13 @@
   myDesktop.updateFrame(event.source, event.host_application)
 
 reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
-#reg.registerEventListener(frameChange, 'window:create')
-#reg.registerEventListener(frameChange, 'window:minimize')
-#reg.registerEventListener(frameChange, 'window:maximize')
-#reg.registerEventListener(frameChange, 'window:restore')
+reg.registerEventListener(frameChange, 'window:create')
+reg.registerEventListener(frameChange, 'window:minimize')
+reg.registerEventListener(frameChange, 'window:maximize')
+reg.registerEventListener(frameChange, 'window:restore')
 
 # try a catch-all for all window events:
-reg.registerEventListener(frameChange, 'window')
+#reg.registerEventListener(frameChange, 'window')
 
 
 # Not too reliable
--- /tmp/test-tmpfs/nilfs-7686/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:04:00.464696919 -0500
+++ /tmp/test-tmpfs/nilfs-7705/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:06:10.837256515 -0500
@@ -104,6 +104,7 @@
             break
     
     if not appFound:
+      print 'APP NOT FOUND!'
       pass
     # if the app isn't found, then this means it's a NEW app!
 
--- /tmp/test-tmpfs/nilfs-7705/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:06:10.837256515 -0500
+++ /tmp/test-tmpfs/nilfs-7708/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:07:34.765889767 -0500
@@ -103,10 +103,12 @@
             window.update()
             break
     
-    if not appFound:
-      print 'APP NOT FOUND!'
-      pass
     # if the app isn't found, then this means it's a NEW app!
+    if not appFound:
+      print 'NEW APP!'
+      newApp = Application(atspiApp)
+      if len(newApp.windows):
+        self.apps.append(newApp)
 
     # TODO: what about if an app CLOSES so it's no longer in the desktop???
     # check out window events then
--- /tmp/test-tmpfs/nilfs-7725/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:07:40.786430571 -0500
+++ /tmp/test-tmpfs/nilfs-7797/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:08:31.735727386 -0500
@@ -327,6 +327,7 @@
 reg.registerEventListener(frameChange, 'window:minimize')
 reg.registerEventListener(frameChange, 'window:maximize')
 reg.registerEventListener(frameChange, 'window:restore')
+reg.registerEventListener(frameChange, 'window:deactivate')
 
 # try a catch-all for all window events:
 #reg.registerEventListener(frameChange, 'window')
--- /tmp/test-tmpfs/nilfs-7797/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:08:31.735727386 -0500
+++ /tmp/test-tmpfs/nilfs-7801/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:11:43.151928679 -0500
@@ -311,7 +311,7 @@
   #if event.detail1 != 1: return
 
   print get_ms_since_epoch(), event
-  myDesktop.updateFrame(event.source, event.host_application)
+  #myDesktop.updateFrame(event.source, event.host_application)
 
 reg.registerEventListener(frameStateChanged, 'object:state-changed')
 
@@ -320,7 +320,7 @@
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
 
   print get_ms_since_epoch(), event
-  myDesktop.updateFrame(event.source, event.host_application)
+  #myDesktop.updateFrame(event.source, event.host_application)
 
 reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
 reg.registerEventListener(frameChange, 'window:create')
--- /tmp/test-tmpfs/nilfs-7801/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:11:43.151928679 -0500
+++ /tmp/test-tmpfs/nilfs-7824/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:12:14.519717915 -0500
@@ -327,6 +327,7 @@
 reg.registerEventListener(frameChange, 'window:minimize')
 reg.registerEventListener(frameChange, 'window:maximize')
 reg.registerEventListener(frameChange, 'window:restore')
+reg.registerEventListener(frameChange, 'window:activate')
 reg.registerEventListener(frameChange, 'window:deactivate')
 
 # try a catch-all for all window events:
--- /tmp/test-tmpfs/nilfs-7824/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:12:14.519717915 -0500
+++ /tmp/test-tmpfs/nilfs-7828/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:15:03.407424819 -0500
@@ -318,17 +318,23 @@
 
 def frameChange(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
+  print get_ms_since_epoch(), event
+  #myDesktop.updateFrame(event.source, event.host_application)
+
 
+def windowChange(event):
+  if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
   print get_ms_since_epoch(), event
   #myDesktop.updateFrame(event.source, event.host_application)
 
+
 reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
-reg.registerEventListener(frameChange, 'window:create')
-reg.registerEventListener(frameChange, 'window:minimize')
-reg.registerEventListener(frameChange, 'window:maximize')
-reg.registerEventListener(frameChange, 'window:restore')
-reg.registerEventListener(frameChange, 'window:activate')
-reg.registerEventListener(frameChange, 'window:deactivate')
+reg.registerEventListener(windowChange, 'window:create')
+reg.registerEventListener(windowChange, 'window:minimize')
+reg.registerEventListener(windowChange, 'window:maximize')
+reg.registerEventListener(windowChange, 'window:restore')
+reg.registerEventListener(windowChange, 'window:activate')
+reg.registerEventListener(windowChange, 'window:deactivate')
 
 # try a catch-all for all window events:
 #reg.registerEventListener(frameChange, 'window')
--- /tmp/test-tmpfs/nilfs-7828/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:15:03.407424819 -0500
+++ /tmp/test-tmpfs/nilfs-7873/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:15:27.993535384 -0500
@@ -313,7 +313,7 @@
   print get_ms_since_epoch(), event
   #myDesktop.updateFrame(event.source, event.host_application)
 
-reg.registerEventListener(frameStateChanged, 'object:state-changed')
+#reg.registerEventListener(frameStateChanged, 'object:state-changed')
 
 
 def frameChange(event):
@@ -328,16 +328,18 @@
   #myDesktop.updateFrame(event.source, event.host_application)
 
 
-reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
-reg.registerEventListener(windowChange, 'window:create')
-reg.registerEventListener(windowChange, 'window:minimize')
-reg.registerEventListener(windowChange, 'window:maximize')
-reg.registerEventListener(windowChange, 'window:restore')
-reg.registerEventListener(windowChange, 'window:activate')
-reg.registerEventListener(windowChange, 'window:deactivate')
+# when, say, the frame's title changes
+#reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
+
+#reg.registerEventListener(windowChange, 'window:create')
+#reg.registerEventListener(windowChange, 'window:minimize')
+#reg.registerEventListener(windowChange, 'window:maximize')
+#reg.registerEventListener(windowChange, 'window:restore')
+#reg.registerEventListener(windowChange, 'window:activate')
+#reg.registerEventListener(windowChange, 'window:deactivate')
 
 # try a catch-all for all window events:
-#reg.registerEventListener(frameChange, 'window')
+reg.registerEventListener(windowChange, 'window')
 
 
 # Not too reliable
--- /tmp/test-tmpfs/nilfs-7873/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:15:27.993535384 -0500
+++ /tmp/test-tmpfs/nilfs-7876/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:16:49.246975990 -0500
@@ -324,7 +324,7 @@
 
 def windowChange(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
-  print get_ms_since_epoch(), event
+  print get_ms_since_epoch(), event.name
   #myDesktop.updateFrame(event.source, event.host_application)
 
 
--- /tmp/test-tmpfs/nilfs-7876/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:16:49.246975990 -0500
+++ /tmp/test-tmpfs/nilfs-7880/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:16:57.390016834 -0500
@@ -324,7 +324,7 @@
 
 def windowChange(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
-  print get_ms_since_epoch(), event.name
+  print get_ms_since_epoch(), dir(event)
   #myDesktop.updateFrame(event.source, event.host_application)
 
 
--- /tmp/test-tmpfs/nilfs-7880/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:16:57.390016834 -0500
+++ /tmp/test-tmpfs/nilfs-7883/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:17:11.531759339 -0500
@@ -324,7 +324,7 @@
 
 def windowChange(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
-  print get_ms_since_epoch(), dir(event)
+  print get_ms_since_epoch(), event.type
   #myDesktop.updateFrame(event.source, event.host_application)
 
 
--- /tmp/test-tmpfs/nilfs-7883/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:17:11.531759339 -0500
+++ /tmp/test-tmpfs/nilfs-7886/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:17:19.397024140 -0500
@@ -324,7 +324,7 @@
 
 def windowChange(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
-  print get_ms_since_epoch(), event.type
+  print get_ms_since_epoch(), type(event.type)
   #myDesktop.updateFrame(event.source, event.host_application)
 
 
--- /tmp/test-tmpfs/nilfs-7886/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:17:19.397024140 -0500
+++ /tmp/test-tmpfs/nilfs-7890/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:17:31.085542130 -0500
@@ -324,7 +324,7 @@
 
 def windowChange(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
-  print get_ms_since_epoch(), type(event.type)
+  print get_ms_since_epoch(), dir(event.type)
   #myDesktop.updateFrame(event.source, event.host_application)
 
 
--- /tmp/test-tmpfs/nilfs-7890/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:17:31.085542130 -0500
+++ /tmp/test-tmpfs/nilfs-7893/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:17:45.268679124 -0500
@@ -324,7 +324,7 @@
 
 def windowChange(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
-  print get_ms_since_epoch(), dir(event.type)
+  print get_ms_since_epoch(), dir(event.type.name)
   #myDesktop.updateFrame(event.source, event.host_application)
 
 
--- /tmp/test-tmpfs/nilfs-7893/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:17:45.268679124 -0500
+++ /tmp/test-tmpfs/nilfs-7896/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:17:54.842834374 -0500
@@ -324,7 +324,7 @@
 
 def windowChange(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
-  print get_ms_since_epoch(), dir(event.type.name)
+  print get_ms_since_epoch(), type(event.type.name)
   #myDesktop.updateFrame(event.source, event.host_application)
 
 
--- /tmp/test-tmpfs/nilfs-7896/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:17:54.842834374 -0500
+++ /tmp/test-tmpfs/nilfs-7902/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:18:01.390612030 -0500
@@ -324,7 +324,7 @@
 
 def windowChange(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
-  print get_ms_since_epoch(), type(event.type.name)
+  print get_ms_since_epoch(), event.type.name
   #myDesktop.updateFrame(event.source, event.host_application)
 
 
--- /tmp/test-tmpfs/nilfs-7902/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:18:01.390612030 -0500
+++ /tmp/test-tmpfs/nilfs-7905/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:18:49.572519118 -0500
@@ -327,6 +327,10 @@
   print get_ms_since_epoch(), event.type.name
   #myDesktop.updateFrame(event.source, event.host_application)
 
+  # perhaps this window is now CLOSED for good?
+  if event.type.name == 'window:deactivate':
+    pass
+
 
 # when, say, the frame's title changes
 #reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
--- /tmp/test-tmpfs/nilfs-7905/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:18:49.572519118 -0500
+++ /tmp/test-tmpfs/nilfs-7910/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:19:00.892829058 -0500
@@ -324,8 +324,8 @@
 
 def windowChange(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
-  print get_ms_since_epoch(), event.type.name
-  #myDesktop.updateFrame(event.source, event.host_application)
+  print get_ms_since_epoch(), event
+  myDesktop.updateFrame(event.source, event.host_application)
 
   # perhaps this window is now CLOSED for good?
   if event.type.name == 'window:deactivate':
--- /tmp/test-tmpfs/nilfs-7913/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:19:29.482879864 -0500
+++ /tmp/test-tmpfs/nilfs-7917/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:20:21.806703230 -0500
@@ -110,9 +110,6 @@
       if len(newApp.windows):
         self.apps.append(newApp)
 
-    # TODO: what about if an app CLOSES so it's no longer in the desktop???
-    # check out window events then
-
 
   def printMe(self):
     print 'DESKTOP %dx%d' % (self.width, self.height)
--- /tmp/test-tmpfs/nilfs-7917/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:20:21.806703230 -0500
+++ /tmp/test-tmpfs/nilfs-7922/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:20:39.932041589 -0500
@@ -330,7 +330,7 @@
 
 
 # when, say, the frame's title changes
-#reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
+reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
 
 #reg.registerEventListener(windowChange, 'window:create')
 #reg.registerEventListener(windowChange, 'window:minimize')
--- /tmp/test-tmpfs/nilfs-7922/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:20:39.932041589 -0500
+++ /tmp/test-tmpfs/nilfs-7925/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:21:01.979764437 -0500
@@ -319,7 +319,7 @@
   #myDesktop.updateFrame(event.source, event.host_application)
 
 
-def windowChange(event):
+def eventHandler(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
   print get_ms_since_epoch(), event
   myDesktop.updateFrame(event.source, event.host_application)
@@ -330,17 +330,17 @@
 
 
 # when, say, the frame's title changes
-reg.registerEventListener(frameChange, 'object:property-change:accessible-name')
+reg.registerEventListener(eventHandler, 'object:property-change:accessible-name')
 
-#reg.registerEventListener(windowChange, 'window:create')
-#reg.registerEventListener(windowChange, 'window:minimize')
-#reg.registerEventListener(windowChange, 'window:maximize')
-#reg.registerEventListener(windowChange, 'window:restore')
-#reg.registerEventListener(windowChange, 'window:activate')
-#reg.registerEventListener(windowChange, 'window:deactivate')
+#reg.registerEventListener(eventHandler, 'window:create')
+#reg.registerEventListener(eventHandler, 'window:minimize')
+#reg.registerEventListener(eventHandler, 'window:maximize')
+#reg.registerEventListener(eventHandler, 'window:restore')
+#reg.registerEventListener(eventHandler, 'window:activate')
+#reg.registerEventListener(eventHandler, 'window:deactivate')
 
 # try a catch-all for all window events:
-reg.registerEventListener(windowChange, 'window')
+reg.registerEventListener(eventHandler, 'window')
 
 
 # Not too reliable
--- /tmp/test-tmpfs/nilfs-7925/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:21:01.979764437 -0500
+++ /tmp/test-tmpfs/nilfs-7928/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:21:07.425295838 -0500
@@ -313,12 +313,6 @@
 #reg.registerEventListener(frameStateChanged, 'object:state-changed')
 
 
-def frameChange(event):
-  if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
-  print get_ms_since_epoch(), event
-  #myDesktop.updateFrame(event.source, event.host_application)
-
-
 def eventHandler(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
   print get_ms_since_epoch(), event
--- /tmp/test-tmpfs/nilfs-7936/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:21:21.103741735 -0500
+++ /tmp/test-tmpfs/nilfs-7987/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:23:45.626825370 -0500
@@ -10,6 +10,11 @@
 # NB: this won't fire an event when a Chrome window is moved :(
 
 
+# TODO: handle the case when a frame has been added to or deleted from
+# an existing app, and also the case when an app has been added to or
+# deleted from the existing desktop.
+
+
 import time
 import pyatspi
 
--- /tmp/test-tmpfs/nilfs-7987/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-13 20:23:45.626825370 -0500
+++ /tmp/test-tmpfs/nilfs-7993/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 09:46:29.690127337 -0500
@@ -50,6 +50,7 @@
 # TODO: can I get PIDs of controlling processes of each window?
 # (the 'application names' collected by pyatspi sometimes don't exactly
 # match the names collected by SystemTap)
+# - ugh, sadly I don't think so
 
 # TODO: what happens when the user has multiple virtual desktops?
 
--- /tmp/test-tmpfs/nilfs-7993/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 09:46:29.690127337 -0500
+++ /tmp/test-tmpfs/nilfs-7999/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 09:46:58.825212719 -0500
@@ -97,6 +97,9 @@
   # do an incremental update since querying the entire desktop using
   # at-spi leads to (small but noticeable) lag
   def updateFrame(self, atspiFrame, atspiApp):
+    # do a full scan of all apps to see if any are missing
+
+
     appFound = False
     frameFound = False
 
--- /tmp/test-tmpfs/nilfs-7999/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 09:46:58.825212719 -0500
+++ /tmp/test-tmpfs/nilfs-8004/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 09:48:20.797707069 -0500
@@ -61,7 +61,9 @@
 
 class Desktop:
   def __init__(self, atspiDesktop):
-    self.apps = [] # Application instances
+    # Key:   app name
+    # Value: Application instance
+    self.apps = {}
 
     self.atspiDesktop = atspiDesktop
 
--- /tmp/test-tmpfs/nilfs-8004/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 09:48:20.797707069 -0500
+++ /tmp/test-tmpfs/nilfs-8014/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 09:48:55.343551157 -0500
@@ -91,7 +91,8 @@
 
       # only append to self.apps if there are SOME windows
       if len(newApp.windows):
-        self.apps.append(newApp)
+        assert app.name not in self.apps
+        self.apps[app.name] = newApp
 
     assert self.width > 0 and self.height > 0
 
--- /tmp/test-tmpfs/nilfs-8014/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 09:48:55.343551157 -0500
+++ /tmp/test-tmpfs/nilfs-8019/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 09:52:03.059873122 -0500
@@ -89,7 +89,7 @@
         self.width  = desktopWindow.width
         self.height = desktopWindow.height
 
-      # only append to self.apps if there are SOME windows
+      # only add to self.apps if there are SOME windows
       if len(newApp.windows):
         assert app.name not in self.apps
         self.apps[app.name] = newApp
--- /tmp/test-tmpfs/nilfs-8019/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 09:52:03.059873122 -0500
+++ /tmp/test-tmpfs/nilfs-8027/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 09:53:19.492590672 -0500
@@ -100,7 +100,37 @@
   # do an incremental update since querying the entire desktop using
   # at-spi leads to (small but noticeable) lag
   def updateFrame(self, atspiFrame, atspiApp):
-    # do a full scan of all apps to see if any are missing
+    # do a full scan of all apps to see if any have been CLOSED
+    # or any new ones have been OPENED
+    newApps = {}
+    
+    for app in self.atspiDesktop:
+      if not app: continue # some app entries are None; weird
+
+      # ignore apps with certain names ...
+      if app.name == 'gnome-panel': continue
+
+      if newApp.name
+
+      newApp = Application(app)
+
+      # grab the desktop's dimensions
+      if newApp.name == 'nautilus':
+        desktopWindow = newApp.windows[0]
+        assert desktopWindow.title == 'Desktop'
+        assert desktopWindow.x == 0
+        assert desktopWindow.y == 0
+        self.width  = desktopWindow.width
+        self.height = desktopWindow.height
+
+      # only add to self.apps if there are SOME windows
+      if len(newApp.windows):
+        assert app.name not in self.apps
+        self.apps[app.name] = newApp
+
+
+
+    self.apps = newApps{}
 
 
     appFound = False
--- /tmp/test-tmpfs/nilfs-8027/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 09:53:19.492590672 -0500
+++ /tmp/test-tmpfs/nilfs-8029/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 09:54:57.384317251 -0500
@@ -101,7 +101,7 @@
   # at-spi leads to (small but noticeable) lag
   def updateFrame(self, atspiFrame, atspiApp):
     # do a full scan of all apps to see if any have been CLOSED
-    # or any new ones have been OPENED
+    # or any new ones have been CREATED since the last update ...
     newApps = {}
     
     for app in self.atspiDesktop:
@@ -110,25 +110,12 @@
       # ignore apps with certain names ...
       if app.name == 'gnome-panel': continue
 
-      if newApp.name
-
-      newApp = Application(app)
-
-      # grab the desktop's dimensions
-      if newApp.name == 'nautilus':
-        desktopWindow = newApp.windows[0]
-        assert desktopWindow.title == 'Desktop'
-        assert desktopWindow.x == 0
-        assert desktopWindow.y == 0
-        self.width  = desktopWindow.width
-        self.height = desktopWindow.height
-
-      # only add to self.apps if there are SOME windows
-      if len(newApp.windows):
-        assert app.name not in self.apps
-        self.apps[app.name] = newApp
-
-
+      if app.name in newApps:
+        # do a straight-up copy for efficiency
+        newApps[app.name] = self.apps[app.name]
+      else:
+        # create a new one
+        newApp = Application(app)
 
     self.apps = newApps{}
 
--- /tmp/test-tmpfs/nilfs-8034/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 09:54:58.680499004 -0500
+++ /tmp/test-tmpfs/nilfs-8038/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 09:59:08.605544003 -0500
@@ -19,6 +19,9 @@
 import pyatspi
 
 
+IGNORED_APPS = ('gnome-panel',)
+
+
 '''
 Let's not support Firefox for now since it seems to have some quirks.  e.g.,:
 
@@ -74,9 +77,7 @@
 
     for app in atspiDesktop:
       if not app: continue # some app entries are None; weird
-
-      # ignore apps with certain names ...
-      if app.name == 'gnome-panel': continue
+      if app.name in IGNORED_APPS: continue
 
       newApp = Application(app)
 
@@ -106,9 +107,7 @@
     
     for app in self.atspiDesktop:
       if not app: continue # some app entries are None; weird
-
-      # ignore apps with certain names ...
-      if app.name == 'gnome-panel': continue
+      if app.name in IGNORED_APP: continue
 
       if app.name in newApps:
         # do a straight-up copy for efficiency
--- /tmp/test-tmpfs/nilfs-8038/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 09:59:08.605544003 -0500
+++ /tmp/test-tmpfs/nilfs-8063/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 09:59:30.629632266 -0500
@@ -19,7 +19,7 @@
 import pyatspi
 
 
-IGNORED_APPS = ('gnome-panel',)
+IGNORED_APPS = ('gnome-panel',) # ignore these 'boring' apps on GNOME
 
 
 '''
--- /tmp/test-tmpfs/nilfs-8063/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 09:59:30.629632266 -0500
+++ /tmp/test-tmpfs/nilfs-8069/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:16:42.469707820 -0500
@@ -66,8 +66,7 @@
   def __init__(self, atspiDesktop):
     # Key:   app name
     # Value: Application instance
-    self.apps = {}
-
+    self.appsDict = {}
     self.atspiDesktop = atspiDesktop
 
     # In GNOME, the desktop resolution is set by the dimensions of the
@@ -75,7 +74,14 @@
     self.width = -1
     self.height = -1
 
-    for app in atspiDesktop:
+    self.__updateAppsDict():
+
+    assert self.width > 0 and self.height > 0
+
+  # update self.appsDict by scanning through self.atspiDesktop again so
+  # that we can check for apps that have been newly-created or deleted
+  def __updateAppsDict(self):
+    for app in self.atspiDesktop:
       if not app: continue # some app entries are None; weird
       if app.name in IGNORED_APPS: continue
 
@@ -95,7 +101,6 @@
         assert app.name not in self.apps
         self.apps[app.name] = newApp
 
-    assert self.width > 0 and self.height > 0
 
 
   # do an incremental update since querying the entire desktop using
--- /tmp/test-tmpfs/nilfs-8069/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:16:42.469707820 -0500
+++ /tmp/test-tmpfs/nilfs-8075/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:18:55.208563692 -0500
@@ -75,17 +75,27 @@
     self.height = -1
 
     self.__updateAppsDict():
-
     assert self.width > 0 and self.height > 0
 
   # update self.appsDict by scanning through self.atspiDesktop again so
   # that we can check for apps that have been newly-created or deleted
   def __updateAppsDict(self):
+    newAppsDict = {}
+
     for app in self.atspiDesktop:
       if not app: continue # some app entries are None; weird
       if app.name in IGNORED_APPS: continue
 
-      newApp = Application(app)
+      if app.name in self.appsDict:
+        # do a straight-up copy for efficiency
+        newAppsDict[app.name] = self.appsDict[app.name]
+      else:
+        # create a new one
+        newApp = Application(app)
+        # only add to self.apps if there are SOME windows
+        if len(newApp.windows):
+          self.appsDict[app.name] = newApp
+
 
       # grab the desktop's dimensions
       if newApp.name == 'nautilus':
@@ -96,31 +106,16 @@
         self.width  = desktopWindow.width
         self.height = desktopWindow.height
 
-      # only add to self.apps if there are SOME windows
-      if len(newApp.windows):
-        assert app.name not in self.apps
-        self.apps[app.name] = newApp
-
 
 
   # do an incremental update since querying the entire desktop using
   # at-spi leads to (small but noticeable) lag
   def updateFrame(self, atspiFrame, atspiApp):
-    # do a full scan of all apps to see if any have been CLOSED
-    # or any new ones have been CREATED since the last update ...
-    newApps = {}
     
     for app in self.atspiDesktop:
       if not app: continue # some app entries are None; weird
       if app.name in IGNORED_APP: continue
 
-      if app.name in newApps:
-        # do a straight-up copy for efficiency
-        newApps[app.name] = self.apps[app.name]
-      else:
-        # create a new one
-        newApp = Application(app)
-
     self.apps = newApps{}
 
 
--- /tmp/test-tmpfs/nilfs-8075/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:18:55.208563692 -0500
+++ /tmp/test-tmpfs/nilfs-8080/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:21:03.033812879 -0500
@@ -96,7 +96,6 @@
         if len(newApp.windows):
           self.appsDict[app.name] = newApp
 
-
       # grab the desktop's dimensions
       if newApp.name == 'nautilus':
         desktopWindow = newApp.windows[0]
--- /tmp/test-tmpfs/nilfs-8080/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:21:03.033812879 -0500
+++ /tmp/test-tmpfs/nilfs-8084/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:22:50.563032055 -0500
@@ -68,12 +68,6 @@
     # Value: Application instance
     self.appsDict = {}
     self.atspiDesktop = atspiDesktop
-
-    # In GNOME, the desktop resolution is set by the dimensions of the
-    # 'Desktop' window of the 'nautilus' application
-    self.width = -1
-    self.height = -1
-
     self.__updateAppsDict():
     assert self.width > 0 and self.height > 0
 
@@ -94,17 +88,9 @@
         newApp = Application(app)
         # only add to self.apps if there are SOME windows
         if len(newApp.windows):
-          self.appsDict[app.name] = newApp
-
-      # grab the desktop's dimensions
-      if newApp.name == 'nautilus':
-        desktopWindow = newApp.windows[0]
-        assert desktopWindow.title == 'Desktop'
-        assert desktopWindow.x == 0
-        assert desktopWindow.y == 0
-        self.width  = desktopWindow.width
-        self.height = desktopWindow.height
+          newAppsDict[app.name] = newApp
 
+    self.appsDict = newAppsDict
 
 
   # do an incremental update since querying the entire desktop using
--- /tmp/test-tmpfs/nilfs-8084/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:22:50.563032055 -0500
+++ /tmp/test-tmpfs/nilfs-8086/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:23:41.648975152 -0500
@@ -96,18 +96,12 @@
   # do an incremental update since querying the entire desktop using
   # at-spi leads to (small but noticeable) lag
   def updateFrame(self, atspiFrame, atspiApp):
+    self.__updateAppsDict()
     
-    for app in self.atspiDesktop:
-      if not app: continue # some app entries are None; weird
-      if app.name in IGNORED_APP: continue
-
-    self.apps = newApps{}
-
-
     appFound = False
     frameFound = False
 
-    for app in self.apps:
+    for app in self.appsDict:
       if app.atspiApp == atspiApp:
         appFound = True
         for window in app.windows:
@@ -116,12 +110,7 @@
             window.update()
             break
     
-    # if the app isn't found, then this means it's a NEW app!
-    if not appFound:
-      print 'NEW APP!'
-      newApp = Application(atspiApp)
-      if len(newApp.windows):
-        self.apps.append(newApp)
+    assert appFound
 
 
   def printMe(self):
--- /tmp/test-tmpfs/nilfs-8094/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:23:46.409614606 -0500
+++ /tmp/test-tmpfs/nilfs-8101/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:27:47.323581583 -0500
@@ -96,21 +96,8 @@
   # do an incremental update since querying the entire desktop using
   # at-spi leads to (small but noticeable) lag
   def updateFrame(self, atspiFrame, atspiApp):
-    self.__updateAppsDict()
-    
-    appFound = False
-    frameFound = False
-
-    for app in self.appsDict:
-      if app.atspiApp == atspiApp:
-        appFound = True
-        for window in app.windows:
-          if window.atspiFrame == atspiFrame:
-            frameFound = True
-            window.update()
-            break
-    
-    assert appFound
+    self.__updateAppsDict() # check for added/deleted apps
+    self.appsDict[atspiApp.name].updateFrame(atspiFrame)
 
 
   def printMe(self):
--- /tmp/test-tmpfs/nilfs-8101/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:27:47.323581583 -0500
+++ /tmp/test-tmpfs/nilfs-8104/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:30:47.601235302 -0500
@@ -117,6 +117,8 @@
       if child.getRoleName() != 'frame': continue
       self.windows.append(Window(child, self))
 
+  def updateFrame(self, atspiFrame):
+
 
   def printMe(self):
     print ' APP:', self.name
--- /tmp/test-tmpfs/nilfs-8104/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:30:47.601235302 -0500
+++ /tmp/test-tmpfs/nilfs-8109/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:31:02.569174983 -0500
@@ -112,12 +112,13 @@
     self.atspiApp = app
     self.windows = [] # Window instances
 
-    for child in app:
+    for child in self.atspiApp:
       # sometimes apps will have non-frame children ...
       if child.getRoleName() != 'frame': continue
       self.windows.append(Window(child, self))
 
   def updateFrame(self, atspiFrame):
+    for child in self.atspiApp:
 
 
   def printMe(self):
--- /tmp/test-tmpfs/nilfs-8109/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:31:02.569174983 -0500
+++ /tmp/test-tmpfs/nilfs-8111/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:32:02.575919726 -0500
@@ -118,7 +118,11 @@
       self.windows.append(Window(child, self))
 
   def updateFrame(self, atspiFrame):
+    # update self.windows to account for the fact that frames might
+    # have been added or deleted to this app since the last update
+    newWindows = []
     for child in self.atspiApp:
+      for w in self.windows:
 
 
   def printMe(self):
--- /tmp/test-tmpfs/nilfs-8115/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:32:04.566175777 -0500
+++ /tmp/test-tmpfs/nilfs-8118/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:32:35.549155410 -0500
@@ -123,6 +123,7 @@
     newWindows = []
     for child in self.atspiApp:
       for w in self.windows:
+        if child == w.atspiFrame
 
 
   def printMe(self):
--- /tmp/test-tmpfs/nilfs-8118/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:32:35.549155410 -0500
+++ /tmp/test-tmpfs/nilfs-8121/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:32:43.598187359 -0500
@@ -123,7 +123,8 @@
     newWindows = []
     for child in self.atspiApp:
       for w in self.windows:
-        if child == w.atspiFrame
+        if child == w.atspiFrame:
+          newWindows.append(w)
 
 
   def printMe(self):
--- /tmp/test-tmpfs/nilfs-8121/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:32:43.598187359 -0500
+++ /tmp/test-tmpfs/nilfs-8133/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:32:49.852988747 -0500
@@ -126,6 +126,8 @@
         if child == w.atspiFrame:
           newWindows.append(w)
 
+    self.windows = newWindows
+
 
   def printMe(self):
     print ' APP:', self.name
--- /tmp/test-tmpfs/nilfs-8133/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:32:49.852988747 -0500
+++ /tmp/test-tmpfs/nilfs-8136/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:35:38.179400463 -0500
@@ -122,12 +122,27 @@
     # have been added or deleted to this app since the last update
     newWindows = []
     for child in self.atspiApp:
+      if child.getRoleName() != 'frame': continue
+
+      # recycle existing Window instances if found (for efficiency)
+      childFound = False
       for w in self.windows:
         if child == w.atspiFrame:
           newWindows.append(w)
+          childFound = True
+          break
+      # new frame!
+      if not childFound:
+        newWindows.append(Window(child, self))
 
     self.windows = newWindows
 
+    # find Window with matching atspiFrame and update it ...
+    for w in self.windows:
+      if atspiFrame == w.atspiFrame:
+        w.update()
+        break
+
 
   def printMe(self):
     print ' APP:', self.name
--- /tmp/test-tmpfs/nilfs-8136/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:35:38.179400463 -0500
+++ /tmp/test-tmpfs/nilfs-8139/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:35:43.281045264 -0500
@@ -117,6 +117,7 @@
       if child.getRoleName() != 'frame': continue
       self.windows.append(Window(child, self))
 
+
   def updateFrame(self, atspiFrame):
     # update self.windows to account for the fact that frames might
     # have been added or deleted to this app since the last update
--- /tmp/test-tmpfs/nilfs-8141/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:36:00.741250447 -0500
+++ /tmp/test-tmpfs/nilfs-8144/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:36:07.631119943 -0500
@@ -68,7 +68,7 @@
     # Value: Application instance
     self.appsDict = {}
     self.atspiDesktop = atspiDesktop
-    self.__updateAppsDict():
+    self.__updateAppsDict()
     assert self.width > 0 and self.height > 0
 
   # update self.appsDict by scanning through self.atspiDesktop again so
--- /tmp/test-tmpfs/nilfs-8144/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:36:07.631119943 -0500
+++ /tmp/test-tmpfs/nilfs-8146/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:36:12.788770587 -0500
@@ -69,7 +69,6 @@
     self.appsDict = {}
     self.atspiDesktop = atspiDesktop
     self.__updateAppsDict()
-    assert self.width > 0 and self.height > 0
 
   # update self.appsDict by scanning through self.atspiDesktop again so
   # that we can check for apps that have been newly-created or deleted
--- /tmp/test-tmpfs/nilfs-8146/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:36:12.788770587 -0500
+++ /tmp/test-tmpfs/nilfs-8153/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:36:13.886909092 -0500
@@ -70,6 +70,7 @@
     self.atspiDesktop = atspiDesktop
     self.__updateAppsDict()
 
+
   # update self.appsDict by scanning through self.atspiDesktop again so
   # that we can check for apps that have been newly-created or deleted
   def __updateAppsDict(self):
--- /tmp/test-tmpfs/nilfs-8153/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:36:13.886909092 -0500
+++ /tmp/test-tmpfs/nilfs-8158/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:36:54.912076866 -0500
@@ -56,6 +56,7 @@
 # - ugh, sadly I don't think so
 
 # TODO: what happens when the user has multiple virtual desktops?
+#       (this fact doesn't seem to be captured by atspi)
 
 
 # Class hierarchy: A Desktop contains 0 or more Application instances,
--- /tmp/test-tmpfs/nilfs-8158/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:36:54.912076866 -0500
+++ /tmp/test-tmpfs/nilfs-8205/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:39:41.576955215 -0500
@@ -56,8 +56,8 @@
 # - ugh, sadly I don't think so
 
 # TODO: what happens when the user has multiple virtual desktops?
-#       (this fact doesn't seem to be captured by atspi)
-
+# ahhh, very interesting ... when you move an app to another virtual
+# desktop, it shows up as STATE_ICONIFIED, so it's like it was MINIMIZED
 
 # Class hierarchy: A Desktop contains 0 or more Application instances,
 # and each Application contains 1 or more Window instances.
--- /tmp/test-tmpfs/nilfs-8205/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:39:41.576955215 -0500
+++ /tmp/test-tmpfs/nilfs-8210/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:47:49.927101166 -0500
@@ -68,6 +68,7 @@
     # Key:   app name
     # Value: Application instance
     self.appsDict = {}
+
     self.atspiDesktop = atspiDesktop
     self.__updateAppsDict()
 
--- /tmp/test-tmpfs/nilfs-8210/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:47:49.927101166 -0500
+++ /tmp/test-tmpfs/nilfs-8215/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:48:20.526314415 -0500
@@ -86,7 +86,7 @@
         # do a straight-up copy for efficiency
         newAppsDict[app.name] = self.appsDict[app.name]
       else:
-        # create a new one
+        # create a new one, which might incur a *slight* delay
         newApp = Application(app)
         # only add to self.apps if there are SOME windows
         if len(newApp.windows):
--- /tmp/test-tmpfs/nilfs-8215/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:48:20.526314415 -0500
+++ /tmp/test-tmpfs/nilfs-8219/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:48:54.629982116 -0500
@@ -117,6 +117,7 @@
     for child in self.atspiApp:
       # sometimes apps will have non-frame children ...
       if child.getRoleName() != 'frame': continue
+      # create a new Window object, which might incur a *slight* delay
       self.windows.append(Window(child, self))
 
 
--- /tmp/test-tmpfs/nilfs-8219/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:48:54.629982116 -0500
+++ /tmp/test-tmpfs/nilfs-8221/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:49:31.781035390 -0500
@@ -126,7 +126,6 @@
     # have been added or deleted to this app since the last update
     newWindows = []
     for child in self.atspiApp:
-      if child.getRoleName() != 'frame': continue
 
       # recycle existing Window instances if found (for efficiency)
       childFound = False
@@ -137,6 +136,7 @@
           break
       # new frame!
       if not childFound:
+        if child.getRoleName() != 'frame': continue
         newWindows.append(Window(child, self))
 
     self.windows = newWindows
--- /tmp/test-tmpfs/nilfs-8221/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:49:31.781035390 -0500
+++ /tmp/test-tmpfs/nilfs-8226/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:49:34.403390898 -0500
@@ -126,7 +126,6 @@
     # have been added or deleted to this app since the last update
     newWindows = []
     for child in self.atspiApp:
-
       # recycle existing Window instances if found (for efficiency)
       childFound = False
       for w in self.windows:
--- /tmp/test-tmpfs/nilfs-8226/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:49:34.403390898 -0500
+++ /tmp/test-tmpfs/nilfs-8229/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:49:55.436236861 -0500
@@ -116,7 +116,7 @@
 
     for child in self.atspiApp:
       # sometimes apps will have non-frame children ...
-      if child.getRoleName() != 'frame': continue
+      if child.getRole() != pyatspi.constants.ROLE_FRAME: continue
       # create a new Window object, which might incur a *slight* delay
       self.windows.append(Window(child, self))
 
@@ -135,7 +135,7 @@
           break
       # new frame!
       if not childFound:
-        if child.getRoleName() != 'frame': continue
+        if child.getRole() != pyatspi.constants.ROLE_FRAME: continue
         newWindows.append(Window(child, self))
 
     self.windows = newWindows
--- /tmp/test-tmpfs/nilfs-8229/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:49:55.436236861 -0500
+++ /tmp/test-tmpfs/nilfs-8232/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:50:02.260158178 -0500
@@ -136,6 +136,7 @@
       # new frame!
       if not childFound:
         if child.getRole() != pyatspi.constants.ROLE_FRAME: continue
+        # create a new Window object, which might incur a *slight* delay
         newWindows.append(Window(child, self))
 
     self.windows = newWindows
--- /tmp/test-tmpfs/nilfs-8232/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:50:02.260158178 -0500
+++ /tmp/test-tmpfs/nilfs-8237/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:50:08.964062343 -0500
@@ -141,7 +141,7 @@
 
     self.windows = newWindows
 
-    # find Window with matching atspiFrame and update it ...
+    # find the Window with matching atspiFrame and update it ...
     for w in self.windows:
       if atspiFrame == w.atspiFrame:
         w.update()
--- /tmp/test-tmpfs/nilfs-8237/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:50:08.964062343 -0500
+++ /tmp/test-tmpfs/nilfs-8241/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:50:42.123521199 -0500
@@ -121,7 +121,7 @@
       self.windows.append(Window(child, self))
 
 
-  def updateFrame(self, atspiFrame):
+  def updateFrame(self, cur_atspiFrame):
     # update self.windows to account for the fact that frames might
     # have been added or deleted to this app since the last update
     newWindows = []
@@ -141,11 +141,12 @@
 
     self.windows = newWindows
 
-    # find the Window with matching atspiFrame and update it ...
     for w in self.windows:
-      if atspiFrame == w.atspiFrame:
+      if cur_atspiFrame == w.atspiFrame:
         w.update()
-        break
+        return
+
+    assert False # should never reach here
 
 
   def printMe(self):
--- /tmp/test-tmpfs/nilfs-8249/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:51:05.995717982 -0500
+++ /tmp/test-tmpfs/nilfs-8251/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:53:51.814657756 -0500
@@ -10,11 +10,6 @@
 # NB: this won't fire an event when a Chrome window is moved :(
 
 
-# TODO: handle the case when a frame has been added to or deleted from
-# an existing app, and also the case when an app has been added to or
-# deleted from the existing desktop.
-
-
 import time
 import pyatspi
 
@@ -53,7 +48,7 @@
 # TODO: can I get PIDs of controlling processes of each window?
 # (the 'application names' collected by pyatspi sometimes don't exactly
 # match the names collected by SystemTap)
-# - ugh, sadly I don't think so
+# - ugh, sadly I don't think so :(
 
 # TODO: what happens when the user has multiple virtual desktops?
 # ahhh, very interesting ... when you move an app to another virtual
--- /tmp/test-tmpfs/nilfs-8251/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:53:51.814657756 -0500
+++ /tmp/test-tmpfs/nilfs-8254/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:53:52.638765772 -0500
@@ -50,6 +50,7 @@
 # match the names collected by SystemTap)
 # - ugh, sadly I don't think so :(
 
+
 # TODO: what happens when the user has multiple virtual desktops?
 # ahhh, very interesting ... when you move an app to another virtual
 # desktop, it shows up as STATE_ICONIFIED, so it's like it was MINIMIZED
--- /tmp/test-tmpfs/nilfs-8254/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:53:52.638765772 -0500
+++ /tmp/test-tmpfs/nilfs-8257/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:54:05.383435072 -0500
@@ -51,9 +51,10 @@
 # - ugh, sadly I don't think so :(
 
 
-# TODO: what happens when the user has multiple virtual desktops?
-# ahhh, very interesting ... when you move an app to another virtual
-# desktop, it shows up as STATE_ICONIFIED, so it's like it was MINIMIZED
+# What happens when the user has multiple virtual desktops?
+#   ahhh, very interesting ... when you move an app to another virtual
+#   desktop, it shows up as STATE_ICONIFIED, so it's like it was MINIMIZED
+
 
 # Class hierarchy: A Desktop contains 0 or more Application instances,
 # and each Application contains 1 or more Window instances.
--- /tmp/test-tmpfs/nilfs-8264/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:54:12.877415652 -0500
+++ /tmp/test-tmpfs/nilfs-8266/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:55:21.628379343 -0500
@@ -119,6 +119,7 @@
 
 
   def updateFrame(self, cur_atspiFrame):
+    print 'updateFrame:', cur_atspiFrame
     # update self.windows to account for the fact that frames might
     # have been added or deleted to this app since the last update
     newWindows = []
--- /tmp/test-tmpfs/nilfs-8266/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:55:21.628379343 -0500
+++ /tmp/test-tmpfs/nilfs-8271/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:55:23.844667381 -0500
@@ -119,7 +119,7 @@
 
 
   def updateFrame(self, cur_atspiFrame):
-    print 'updateFrame:', cur_atspiFrame
+    print '== updateFrame:', cur_atspiFrame
     # update self.windows to account for the fact that frames might
     # have been added or deleted to this app since the last update
     newWindows = []
--- /tmp/test-tmpfs/nilfs-8271/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:55:23.844667381 -0500
+++ /tmp/test-tmpfs/nilfs-8276/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:55:50.128079173 -0500
@@ -131,6 +131,7 @@
           newWindows.append(w)
           childFound = True
           break
+
       # new frame!
       if not childFound:
         if child.getRole() != pyatspi.constants.ROLE_FRAME: continue
--- /tmp/test-tmpfs/nilfs-8276/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:55:50.128079173 -0500
+++ /tmp/test-tmpfs/nilfs-8280/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:56:02.292655730 -0500
@@ -142,6 +142,7 @@
 
     for w in self.windows:
       if cur_atspiFrame == w.atspiFrame:
+        print '== FOUND'
         w.update()
         return
 
--- /tmp/test-tmpfs/nilfs-8280/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:56:02.292655730 -0500
+++ /tmp/test-tmpfs/nilfs-8284/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:56:24.314505946 -0500
@@ -142,8 +142,8 @@
 
     for w in self.windows:
       if cur_atspiFrame == w.atspiFrame:
-        print '== FOUND'
         w.update()
+        print '== FOUND', w.is_active
         return
 
     assert False # should never reach here
--- /tmp/test-tmpfs/nilfs-8284/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:56:24.314505946 -0500
+++ /tmp/test-tmpfs/nilfs-8286/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:56:47.117607451 -0500
@@ -144,7 +144,6 @@
       if cur_atspiFrame == w.atspiFrame:
         w.update()
         print '== FOUND', w.is_active
-        return
 
     assert False # should never reach here
 
--- /tmp/test-tmpfs/nilfs-8286/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:56:47.117607451 -0500
+++ /tmp/test-tmpfs/nilfs-8289/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:56:49.234896730 -0500
@@ -145,8 +145,6 @@
         w.update()
         print '== FOUND', w.is_active
 
-    assert False # should never reach here
-
 
   def printMe(self):
     print ' APP:', self.name
--- /tmp/test-tmpfs/nilfs-8289/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:56:49.234896730 -0500
+++ /tmp/test-tmpfs/nilfs-8293/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:56:56.562897158 -0500
@@ -144,6 +144,9 @@
       if cur_atspiFrame == w.atspiFrame:
         w.update()
         print '== FOUND', w.is_active
+        return
+
+    assert False # should never reach here
 
 
   def printMe(self):
--- /tmp/test-tmpfs/nilfs-8293/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:56:56.562897158 -0500
+++ /tmp/test-tmpfs/nilfs-8296/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:57:14.242305884 -0500
@@ -199,7 +199,6 @@
 
 
   # update fields by re-querying self.atspiFrame
-  # and print (later return) the diffs from current state
   def update(self):
     new_title = self.atspiFrame.name
     comp = self.atspiFrame.queryComponent()
--- /tmp/test-tmpfs/nilfs-8296/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:57:14.242305884 -0500
+++ /tmp/test-tmpfs/nilfs-8301/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:57:47.474815588 -0500
@@ -120,6 +120,7 @@
 
   def updateFrame(self, cur_atspiFrame):
     print '== updateFrame:', cur_atspiFrame
+    '''
     # update self.windows to account for the fact that frames might
     # have been added or deleted to this app since the last update
     newWindows = []
@@ -139,6 +140,7 @@
         newWindows.append(Window(child, self))
 
     self.windows = newWindows
+    '''
 
     for w in self.windows:
       if cur_atspiFrame == w.atspiFrame:
--- /tmp/test-tmpfs/nilfs-8301/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:57:47.474815588 -0500
+++ /tmp/test-tmpfs/nilfs-8305/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:58:15.993667809 -0500
@@ -120,7 +120,6 @@
 
   def updateFrame(self, cur_atspiFrame):
     print '== updateFrame:', cur_atspiFrame
-    '''
     # update self.windows to account for the fact that frames might
     # have been added or deleted to this app since the last update
     newWindows = []
@@ -140,7 +139,7 @@
         newWindows.append(Window(child, self))
 
     self.windows = newWindows
-    '''
+
 
     for w in self.windows:
       if cur_atspiFrame == w.atspiFrame:
--- /tmp/test-tmpfs/nilfs-8305/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:58:15.993667809 -0500
+++ /tmp/test-tmpfs/nilfs-8311/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:58:33.826068595 -0500
@@ -144,7 +144,7 @@
     for w in self.windows:
       if cur_atspiFrame == w.atspiFrame:
         w.update()
-        print '== FOUND', w.is_active
+        print '== FOUND', w.printMe()
         return
 
     assert False # should never reach here
--- /tmp/test-tmpfs/nilfs-8311/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:58:33.826068595 -0500
+++ /tmp/test-tmpfs/nilfs-8313/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:59:07.575596426 -0500
@@ -144,7 +144,7 @@
     for w in self.windows:
       if cur_atspiFrame == w.atspiFrame:
         w.update()
-        print '== FOUND', w.printMe()
+        print '== FOUND'
         return
 
     assert False # should never reach here
--- /tmp/test-tmpfs/nilfs-8337/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:59:11.481119099 -0500
+++ /tmp/test-tmpfs/nilfs-8340/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:59:57.479255829 -0500
@@ -119,6 +119,7 @@
 
 
   def updateFrame(self, cur_atspiFrame):
+    '''
     print '== updateFrame:', cur_atspiFrame
     # update self.windows to account for the fact that frames might
     # have been added or deleted to this app since the last update
@@ -148,6 +149,7 @@
         return
 
     assert False # should never reach here
+    '''
 
 
   def printMe(self):
--- /tmp/test-tmpfs/nilfs-8340/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 10:59:57.479255829 -0500
+++ /tmp/test-tmpfs/nilfs-8346/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:00:08.738752823 -0500
@@ -119,6 +119,15 @@
 
 
   def updateFrame(self, cur_atspiFrame):
+    self.windows = []
+
+    for child in self.atspiApp:
+      # sometimes apps will have non-frame children ...
+      if child.getRole() != pyatspi.constants.ROLE_FRAME: continue
+      # create a new Window object, which might incur a *slight* delay
+      self.windows.append(Window(child, self))
+
+
     '''
     print '== updateFrame:', cur_atspiFrame
     # update self.windows to account for the fact that frames might
--- /tmp/test-tmpfs/nilfs-8346/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:00:08.738752823 -0500
+++ /tmp/test-tmpfs/nilfs-8353/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:00:33.510039488 -0500
@@ -127,6 +127,8 @@
       # create a new Window object, which might incur a *slight* delay
       self.windows.append(Window(child, self))
 
+    self.printMe()
+
 
     '''
     print '== updateFrame:', cur_atspiFrame
--- /tmp/test-tmpfs/nilfs-8353/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:00:33.510039488 -0500
+++ /tmp/test-tmpfs/nilfs-8359/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:01:53.115543039 -0500
@@ -96,7 +96,7 @@
   # at-spi leads to (small but noticeable) lag
   def updateFrame(self, atspiFrame, atspiApp):
     self.__updateAppsDict() # check for added/deleted apps
-    self.appsDict[atspiApp.name].updateFrame(atspiFrame)
+    self.appsDict[atspiApp.name].updateAllFrames()
 
 
   def printMe(self):
@@ -118,6 +118,17 @@
       self.windows.append(Window(child, self))
 
 
+  def updateAllFrames(self):
+    self.windows = []
+
+    for child in self.atspiApp:
+      # sometimes apps will have non-frame children ...
+      if child.getRole() != pyatspi.constants.ROLE_FRAME: continue
+      # create a new Window object, which might incur a *slight* delay
+      self.windows.append(Window(child, self))
+
+
+
   def updateFrame(self, cur_atspiFrame):
     self.windows = []
 
--- /tmp/test-tmpfs/nilfs-8359/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:01:53.115543039 -0500
+++ /tmp/test-tmpfs/nilfs-8363/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:02:30.172404724 -0500
@@ -130,17 +130,6 @@
 
 
   def updateFrame(self, cur_atspiFrame):
-    self.windows = []
-
-    for child in self.atspiApp:
-      # sometimes apps will have non-frame children ...
-      if child.getRole() != pyatspi.constants.ROLE_FRAME: continue
-      # create a new Window object, which might incur a *slight* delay
-      self.windows.append(Window(child, self))
-
-    self.printMe()
-
-
     '''
     print '== updateFrame:', cur_atspiFrame
     # update self.windows to account for the fact that frames might
--- /tmp/test-tmpfs/nilfs-8363/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:02:30.172404724 -0500
+++ /tmp/test-tmpfs/nilfs-8368/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:02:55.900770709 -0500
@@ -94,7 +94,7 @@
 
   # do an incremental update since querying the entire desktop using
   # at-spi leads to (small but noticeable) lag
-  def updateFrame(self, atspiFrame, atspiApp):
+  def updateApp(self, atspiApp):
     self.__updateAppsDict() # check for added/deleted apps
     self.appsDict[atspiApp.name].updateAllFrames()
 
@@ -349,7 +349,7 @@
 def eventHandler(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
   print get_ms_since_epoch(), event
-  myDesktop.updateFrame(event.source, event.host_application)
+  myDesktop.updateApp(event.host_application)
 
   # perhaps this window is now CLOSED for good?
   if event.type.name == 'window:deactivate':
--- /tmp/test-tmpfs/nilfs-8368/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:02:55.900770709 -0500
+++ /tmp/test-tmpfs/nilfs-8369/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:03:19.736957566 -0500
@@ -92,8 +92,7 @@
     self.appsDict = newAppsDict
 
 
-  # do an incremental update since querying the entire desktop using
-  # at-spi leads to (small but noticeable) lag
+  # do an incremental update for efficiency
   def updateApp(self, atspiApp):
     self.__updateAppsDict() # check for added/deleted apps
     self.appsDict[atspiApp.name].updateAllFrames()
--- /tmp/test-tmpfs/nilfs-8369/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:03:19.736957566 -0500
+++ /tmp/test-tmpfs/nilfs-8372/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:03:24.609615662 -0500
@@ -128,7 +128,7 @@
 
 
 
-  def updateFrame(self, cur_atspiFrame):
+  def __updateFrame(self, cur_atspiFrame):
     '''
     print '== updateFrame:', cur_atspiFrame
     # update self.windows to account for the fact that frames might
--- /tmp/test-tmpfs/nilfs-8372/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:03:24.609615662 -0500
+++ /tmp/test-tmpfs/nilfs-8375/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:03:37.218316546 -0500
@@ -109,12 +109,7 @@
     self.name = app.name
     self.atspiApp = app
     self.windows = [] # Window instances
-
-    for child in self.atspiApp:
-      # sometimes apps will have non-frame children ...
-      if child.getRole() != pyatspi.constants.ROLE_FRAME: continue
-      # create a new Window object, which might incur a *slight* delay
-      self.windows.append(Window(child, self))
+    self.updateAllFrames()
 
 
   def updateAllFrames(self):
--- /tmp/test-tmpfs/nilfs-8375/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:03:37.218316546 -0500
+++ /tmp/test-tmpfs/nilfs-8377/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:03:45.450425478 -0500
@@ -109,11 +109,12 @@
     self.name = app.name
     self.atspiApp = app
     self.windows = [] # Window instances
+
     self.updateAllFrames()
 
 
   def updateAllFrames(self):
-    self.windows = []
+    self.windows = [] # clear it first!
 
     for child in self.atspiApp:
       # sometimes apps will have non-frame children ...
--- /tmp/test-tmpfs/nilfs-8377/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:03:45.450425478 -0500
+++ /tmp/test-tmpfs/nilfs-8383/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:03:47.849748458 -0500
@@ -123,7 +123,6 @@
       self.windows.append(Window(child, self))
 
 
-
   def __updateFrame(self, cur_atspiFrame):
     '''
     print '== updateFrame:', cur_atspiFrame
--- /tmp/test-tmpfs/nilfs-8383/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:03:47.849748458 -0500
+++ /tmp/test-tmpfs/nilfs-8389/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:04:26.481935110 -0500
@@ -342,7 +342,8 @@
 
 def eventHandler(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
-  print get_ms_since_epoch(), event
+  #print get_ms_since_epoch(), event
+  print event
   myDesktop.updateApp(event.host_application)
 
   # perhaps this window is now CLOSED for good?
--- /tmp/test-tmpfs/nilfs-8389/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:04:26.481935110 -0500
+++ /tmp/test-tmpfs/nilfs-8397/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:04:59.855395891 -0500
@@ -94,6 +94,7 @@
 
   # do an incremental update for efficiency
   def updateApp(self, atspiApp):
+    print '  updateApp', atspiApp.name
     self.__updateAppsDict() # check for added/deleted apps
     self.appsDict[atspiApp.name].updateAllFrames()
 
--- /tmp/test-tmpfs/nilfs-8397/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:04:59.855395891 -0500
+++ /tmp/test-tmpfs/nilfs-8400/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:06:01.151644830 -0500
@@ -180,6 +180,8 @@
     self.is_active = pyatspi.constants.STATE_ACTIVE in myStates
     self.is_minimized = pyatspi.constants.STATE_ICONIFIED in myStates
 
+    print "new Window:", self.title, self.is_active
+
     # special field for Firefox and Google Chrome
     self.browserURL = self.getURL()
 
--- /tmp/test-tmpfs/nilfs-8400/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:06:01.151644830 -0500
+++ /tmp/test-tmpfs/nilfs-8449/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:06:12.401167684 -0500
@@ -180,7 +180,7 @@
     self.is_active = pyatspi.constants.STATE_ACTIVE in myStates
     self.is_minimized = pyatspi.constants.STATE_ICONIFIED in myStates
 
-    print "new Window:", self.title, self.is_active
+    print "new Window:", self.is_active, self.title
 
     # special field for Firefox and Google Chrome
     self.browserURL = self.getURL()
--- /tmp/test-tmpfs/nilfs-8449/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:06:12.401167684 -0500
+++ /tmp/test-tmpfs/nilfs-8472/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:08:27.499365828 -0500
@@ -10,11 +10,13 @@
 # NB: this won't fire an event when a Chrome window is moved :(
 
 
-import time
-import pyatspi
+# TODO: handle the case when a frame has been added to or deleted from
+# an existing app, and also the case when an app has been added to or
+# deleted from the existing desktop.
 
 
-IGNORED_APPS = ('gnome-panel',) # ignore these 'boring' apps on GNOME
+import time
+import pyatspi
 
 
 '''
@@ -48,12 +50,8 @@
 # TODO: can I get PIDs of controlling processes of each window?
 # (the 'application names' collected by pyatspi sometimes don't exactly
 # match the names collected by SystemTap)
-# - ugh, sadly I don't think so :(
-
 
-# What happens when the user has multiple virtual desktops?
-#   ahhh, very interesting ... when you move an app to another virtual
-#   desktop, it shows up as STATE_ICONIFIED, so it's like it was MINIMIZED
+# TODO: what happens when the user has multiple virtual desktops?
 
 
 # Class hierarchy: A Desktop contains 0 or more Application instances,
@@ -62,41 +60,60 @@
 
 class Desktop:
   def __init__(self, atspiDesktop):
-    # Key:   app name
-    # Value: Application instance
-    self.appsDict = {}
+    self.apps = [] # Application instances
 
     self.atspiDesktop = atspiDesktop
-    self.__updateAppsDict()
-
 
-  # update self.appsDict by scanning through self.atspiDesktop again so
-  # that we can check for apps that have been newly-created or deleted
-  def __updateAppsDict(self):
-    newAppsDict = {}
+    # In GNOME, the desktop resolution is set by the dimensions of the
+    # 'Desktop' window of the 'nautilus' application
+    self.width = -1
+    self.height = -1
 
-    for app in self.atspiDesktop:
+    for app in atspiDesktop:
       if not app: continue # some app entries are None; weird
-      if app.name in IGNORED_APPS: continue
 
-      if app.name in self.appsDict:
-        # do a straight-up copy for efficiency
-        newAppsDict[app.name] = self.appsDict[app.name]
-      else:
-        # create a new one, which might incur a *slight* delay
-        newApp = Application(app)
-        # only add to self.apps if there are SOME windows
-        if len(newApp.windows):
-          newAppsDict[app.name] = newApp
-
-    self.appsDict = newAppsDict
-
-
-  # do an incremental update for efficiency
-  def updateApp(self, atspiApp):
-    print '  updateApp', atspiApp.name
-    self.__updateAppsDict() # check for added/deleted apps
-    self.appsDict[atspiApp.name].updateAllFrames()
+      # ignore apps with certain names ...
+      if app.name == 'gnome-panel': continue
+
+      newApp = Application(app)
+
+      # grab the desktop's dimensions
+      if newApp.name == 'nautilus':
+        desktopWindow = newApp.windows[0]
+        assert desktopWindow.title == 'Desktop'
+        assert desktopWindow.x == 0
+        assert desktopWindow.y == 0
+        self.width  = desktopWindow.width
+        self.height = desktopWindow.height
+
+      # only append to self.apps if there are SOME windows
+      if len(newApp.windows):
+        self.apps.append(newApp)
+
+    assert self.width > 0 and self.height > 0
+
+
+  # do an incremental update since querying the entire desktop using
+  # at-spi leads to (small but noticeable) lag
+  def updateFrame(self, atspiFrame, atspiApp):
+    appFound = False
+    frameFound = False
+
+    for app in self.apps:
+      if app.atspiApp == atspiApp:
+        appFound = True
+        for window in app.windows:
+          if window.atspiFrame == atspiFrame:
+            frameFound = True
+            window.update()
+            break
+    
+    # if the app isn't found, then this means it's a NEW app!
+    if not appFound:
+      print 'NEW APP!'
+      newApp = Application(atspiApp)
+      if len(newApp.windows):
+        self.apps.append(newApp)
 
 
   def printMe(self):
@@ -111,53 +128,12 @@
     self.atspiApp = app
     self.windows = [] # Window instances
 
-    self.updateAllFrames()
-
-
-  def updateAllFrames(self):
-    self.windows = [] # clear it first!
-
-    for child in self.atspiApp:
+    for child in app:
       # sometimes apps will have non-frame children ...
-      if child.getRole() != pyatspi.constants.ROLE_FRAME: continue
-      # create a new Window object, which might incur a *slight* delay
+      if child.getRoleName() != 'frame': continue
       self.windows.append(Window(child, self))
 
 
-  def __updateFrame(self, cur_atspiFrame):
-    '''
-    print '== updateFrame:', cur_atspiFrame
-    # update self.windows to account for the fact that frames might
-    # have been added or deleted to this app since the last update
-    newWindows = []
-    for child in self.atspiApp:
-      # recycle existing Window instances if found (for efficiency)
-      childFound = False
-      for w in self.windows:
-        if child == w.atspiFrame:
-          newWindows.append(w)
-          childFound = True
-          break
-
-      # new frame!
-      if not childFound:
-        if child.getRole() != pyatspi.constants.ROLE_FRAME: continue
-        # create a new Window object, which might incur a *slight* delay
-        newWindows.append(Window(child, self))
-
-    self.windows = newWindows
-
-
-    for w in self.windows:
-      if cur_atspiFrame == w.atspiFrame:
-        w.update()
-        print '== FOUND'
-        return
-
-    assert False # should never reach here
-    '''
-
-
   def printMe(self):
     print ' APP:', self.name
     for w in self.windows:
@@ -180,8 +156,6 @@
     self.is_active = pyatspi.constants.STATE_ACTIVE in myStates
     self.is_minimized = pyatspi.constants.STATE_ICONIFIED in myStates
 
-    print "new Window:", self.is_active, self.title
-
     # special field for Firefox and Google Chrome
     self.browserURL = self.getURL()
 
@@ -210,6 +184,7 @@
 
 
   # update fields by re-querying self.atspiFrame
+  # and print (later return) the diffs from current state
   def update(self):
     new_title = self.atspiFrame.name
     comp = self.atspiFrame.queryComponent()
@@ -345,9 +320,8 @@
 
 def eventHandler(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
-  #print get_ms_since_epoch(), event
-  print event
-  myDesktop.updateApp(event.host_application)
+  print get_ms_since_epoch(), event
+  myDesktop.updateFrame(event.source, event.host_application)
 
   # perhaps this window is now CLOSED for good?
   if event.type.name == 'window:deactivate':
--- /tmp/test-tmpfs/nilfs-8472/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:08:27.499365828 -0500
+++ /tmp/test-tmpfs/nilfs-8477/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:12:12.681369959 -0500
@@ -248,6 +248,10 @@
 # these queries can be SLOW!
 
 myDesktop = Desktop(atspiDesktop) # singleton
+myDesktop.printMe()
+
+import sys
+sys.exit(0)
 
 
 '''
--- /tmp/test-tmpfs/nilfs-8477/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:12:12.681369959 -0500
+++ /tmp/test-tmpfs/nilfs-8490/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:12:27.764366705 -0500
@@ -247,8 +247,12 @@
 # occur while making AS FEW QUERIES to the at-spi API as possible, since
 # these queries can be SLOW!
 
-myDesktop = Desktop(atspiDesktop) # singleton
-myDesktop.printMe()
+import time
+
+while True:
+  myDesktop = Desktop(atspiDesktop) # singleton
+  myDesktop.printMe()
+  time.sleep(2)
 
 import sys
 sys.exit(0)
--- /tmp/test-tmpfs/nilfs-8490/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:12:27.764366705 -0500
+++ /tmp/test-tmpfs/nilfs-8493/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:14:55.956908732 -0500
@@ -246,16 +246,17 @@
 # beginning of execution and to selectively update myDesktop as events
 # occur while making AS FEW QUERIES to the at-spi API as possible, since
 # these queries can be SLOW!
+myDesktop = Desktop(atspiDesktop) # singleton
 
+'''
 import time
-
 while True:
-  myDesktop = Desktop(atspiDesktop) # singleton
   myDesktop.printMe()
   time.sleep(2)
 
 import sys
 sys.exit(0)
+'''
 
 
 '''
--- /tmp/test-tmpfs/nilfs-8493/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:14:55.956908732 -0500
+++ /tmp/test-tmpfs/nilfs-8497/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:15:07.315401169 -0500
@@ -332,10 +332,6 @@
   print get_ms_since_epoch(), event
   myDesktop.updateFrame(event.source, event.host_application)
 
-  # perhaps this window is now CLOSED for good?
-  if event.type.name == 'window:deactivate':
-    pass
-
 
 # when, say, the frame's title changes
 reg.registerEventListener(eventHandler, 'object:property-change:accessible-name')
--- /tmp/test-tmpfs/nilfs-8497/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:15:07.315401169 -0500
+++ /tmp/test-tmpfs/nilfs-8500/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:15:20.418121889 -0500
@@ -324,7 +324,7 @@
   print get_ms_since_epoch(), event
   #myDesktop.updateFrame(event.source, event.host_application)
 
-#reg.registerEventListener(frameStateChanged, 'object:state-changed')
+reg.registerEventListener(frameStateChanged, 'object:state-changed')
 
 
 def eventHandler(event):
--- /tmp/test-tmpfs/nilfs-8500/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:15:20.418121889 -0500
+++ /tmp/test-tmpfs/nilfs-8511/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:06:12.401167684 -0500
@@ -10,15 +10,13 @@
 # NB: this won't fire an event when a Chrome window is moved :(
 
 
-# TODO: handle the case when a frame has been added to or deleted from
-# an existing app, and also the case when an app has been added to or
-# deleted from the existing desktop.
-
-
 import time
 import pyatspi
 
 
+IGNORED_APPS = ('gnome-panel',) # ignore these 'boring' apps on GNOME
+
+
 '''
 Let's not support Firefox for now since it seems to have some quirks.  e.g.,:
 
@@ -50,8 +48,12 @@
 # TODO: can I get PIDs of controlling processes of each window?
 # (the 'application names' collected by pyatspi sometimes don't exactly
 # match the names collected by SystemTap)
+# - ugh, sadly I don't think so :(
 
-# TODO: what happens when the user has multiple virtual desktops?
+
+# What happens when the user has multiple virtual desktops?
+#   ahhh, very interesting ... when you move an app to another virtual
+#   desktop, it shows up as STATE_ICONIFIED, so it's like it was MINIMIZED
 
 
 # Class hierarchy: A Desktop contains 0 or more Application instances,
@@ -60,60 +62,41 @@
 
 class Desktop:
   def __init__(self, atspiDesktop):
-    self.apps = [] # Application instances
+    # Key:   app name
+    # Value: Application instance
+    self.appsDict = {}
 
     self.atspiDesktop = atspiDesktop
+    self.__updateAppsDict()
 
-    # In GNOME, the desktop resolution is set by the dimensions of the
-    # 'Desktop' window of the 'nautilus' application
-    self.width = -1
-    self.height = -1
-
-    for app in atspiDesktop:
-      if not app: continue # some app entries are None; weird
-
-      # ignore apps with certain names ...
-      if app.name == 'gnome-panel': continue
 
-      newApp = Application(app)
+  # update self.appsDict by scanning through self.atspiDesktop again so
+  # that we can check for apps that have been newly-created or deleted
+  def __updateAppsDict(self):
+    newAppsDict = {}
 
-      # grab the desktop's dimensions
-      if newApp.name == 'nautilus':
-        desktopWindow = newApp.windows[0]
-        assert desktopWindow.title == 'Desktop'
-        assert desktopWindow.x == 0
-        assert desktopWindow.y == 0
-        self.width  = desktopWindow.width
-        self.height = desktopWindow.height
-
-      # only append to self.apps if there are SOME windows
-      if len(newApp.windows):
-        self.apps.append(newApp)
-
-    assert self.width > 0 and self.height > 0
-
-
-  # do an incremental update since querying the entire desktop using
-  # at-spi leads to (small but noticeable) lag
-  def updateFrame(self, atspiFrame, atspiApp):
-    appFound = False
-    frameFound = False
+    for app in self.atspiDesktop:
+      if not app: continue # some app entries are None; weird
+      if app.name in IGNORED_APPS: continue
 
-    for app in self.apps:
-      if app.atspiApp == atspiApp:
-        appFound = True
-        for window in app.windows:
-          if window.atspiFrame == atspiFrame:
-            frameFound = True
-            window.update()
-            break
-    
-    # if the app isn't found, then this means it's a NEW app!
-    if not appFound:
-      print 'NEW APP!'
-      newApp = Application(atspiApp)
-      if len(newApp.windows):
-        self.apps.append(newApp)
+      if app.name in self.appsDict:
+        # do a straight-up copy for efficiency
+        newAppsDict[app.name] = self.appsDict[app.name]
+      else:
+        # create a new one, which might incur a *slight* delay
+        newApp = Application(app)
+        # only add to self.apps if there are SOME windows
+        if len(newApp.windows):
+          newAppsDict[app.name] = newApp
+
+    self.appsDict = newAppsDict
+
+
+  # do an incremental update for efficiency
+  def updateApp(self, atspiApp):
+    print '  updateApp', atspiApp.name
+    self.__updateAppsDict() # check for added/deleted apps
+    self.appsDict[atspiApp.name].updateAllFrames()
 
 
   def printMe(self):
@@ -128,12 +111,53 @@
     self.atspiApp = app
     self.windows = [] # Window instances
 
-    for child in app:
+    self.updateAllFrames()
+
+
+  def updateAllFrames(self):
+    self.windows = [] # clear it first!
+
+    for child in self.atspiApp:
       # sometimes apps will have non-frame children ...
-      if child.getRoleName() != 'frame': continue
+      if child.getRole() != pyatspi.constants.ROLE_FRAME: continue
+      # create a new Window object, which might incur a *slight* delay
       self.windows.append(Window(child, self))
 
 
+  def __updateFrame(self, cur_atspiFrame):
+    '''
+    print '== updateFrame:', cur_atspiFrame
+    # update self.windows to account for the fact that frames might
+    # have been added or deleted to this app since the last update
+    newWindows = []
+    for child in self.atspiApp:
+      # recycle existing Window instances if found (for efficiency)
+      childFound = False
+      for w in self.windows:
+        if child == w.atspiFrame:
+          newWindows.append(w)
+          childFound = True
+          break
+
+      # new frame!
+      if not childFound:
+        if child.getRole() != pyatspi.constants.ROLE_FRAME: continue
+        # create a new Window object, which might incur a *slight* delay
+        newWindows.append(Window(child, self))
+
+    self.windows = newWindows
+
+
+    for w in self.windows:
+      if cur_atspiFrame == w.atspiFrame:
+        w.update()
+        print '== FOUND'
+        return
+
+    assert False # should never reach here
+    '''
+
+
   def printMe(self):
     print ' APP:', self.name
     for w in self.windows:
@@ -156,6 +180,8 @@
     self.is_active = pyatspi.constants.STATE_ACTIVE in myStates
     self.is_minimized = pyatspi.constants.STATE_ICONIFIED in myStates
 
+    print "new Window:", self.is_active, self.title
+
     # special field for Firefox and Google Chrome
     self.browserURL = self.getURL()
 
@@ -184,7 +210,6 @@
 
 
   # update fields by re-querying self.atspiFrame
-  # and print (later return) the diffs from current state
   def update(self):
     new_title = self.atspiFrame.name
     comp = self.atspiFrame.queryComponent()
@@ -246,17 +271,8 @@
 # beginning of execution and to selectively update myDesktop as events
 # occur while making AS FEW QUERIES to the at-spi API as possible, since
 # these queries can be SLOW!
-myDesktop = Desktop(atspiDesktop) # singleton
 
-'''
-import time
-while True:
-  myDesktop.printMe()
-  time.sleep(2)
-
-import sys
-sys.exit(0)
-'''
+myDesktop = Desktop(atspiDesktop) # singleton
 
 
 '''
@@ -324,13 +340,18 @@
   print get_ms_since_epoch(), event
   #myDesktop.updateFrame(event.source, event.host_application)
 
-reg.registerEventListener(frameStateChanged, 'object:state-changed')
+#reg.registerEventListener(frameStateChanged, 'object:state-changed')
 
 
 def eventHandler(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
-  print get_ms_since_epoch(), event
-  myDesktop.updateFrame(event.source, event.host_application)
+  #print get_ms_since_epoch(), event
+  print event
+  myDesktop.updateApp(event.host_application)
+
+  # perhaps this window is now CLOSED for good?
+  if event.type.name == 'window:deactivate':
+    pass
 
 
 # when, say, the frame's title changes
--- /tmp/test-tmpfs/nilfs-8511/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:06:12.401167684 -0500
+++ /tmp/test-tmpfs/nilfs-8515/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:16:50.435918340 -0500
@@ -340,10 +340,8 @@
   print get_ms_since_epoch(), event
   #myDesktop.updateFrame(event.source, event.host_application)
 
-#reg.registerEventListener(frameStateChanged, 'object:state-changed')
 
-
-def eventHandler(event):
+def frameEventHandler(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
   #print get_ms_since_epoch(), event
   print event
@@ -355,7 +353,8 @@
 
 
 # when, say, the frame's title changes
-reg.registerEventListener(eventHandler, 'object:property-change:accessible-name')
+reg.registerEventListener(frameEventHandler, 'object:property-change:accessible-name')
+reg.registerEventListener(frameEventHandler, 'object:state-changed')
 
 #reg.registerEventListener(eventHandler, 'window:create')
 #reg.registerEventListener(eventHandler, 'window:minimize')
@@ -365,7 +364,7 @@
 #reg.registerEventListener(eventHandler, 'window:deactivate')
 
 # try a catch-all for all window events:
-reg.registerEventListener(eventHandler, 'window')
+#reg.registerEventListener(frameEventHandler, 'window')
 
 
 # Not too reliable
--- /tmp/test-tmpfs/nilfs-8515/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:16:50.435918340 -0500
+++ /tmp/test-tmpfs/nilfs-8517/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:16:59.137056342 -0500
@@ -352,9 +352,9 @@
     pass
 
 
+reg.registerEventListener(frameEventHandler, 'object:state-changed')
 # when, say, the frame's title changes
 reg.registerEventListener(frameEventHandler, 'object:property-change:accessible-name')
-reg.registerEventListener(frameEventHandler, 'object:state-changed')
 
 #reg.registerEventListener(eventHandler, 'window:create')
 #reg.registerEventListener(eventHandler, 'window:minimize')
--- /tmp/test-tmpfs/nilfs-8517/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:16:59.137056342 -0500
+++ /tmp/test-tmpfs/nilfs-8520/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:17:03.465622321 -0500
@@ -347,10 +347,6 @@
   print event
   myDesktop.updateApp(event.host_application)
 
-  # perhaps this window is now CLOSED for good?
-  if event.type.name == 'window:deactivate':
-    pass
-
 
 reg.registerEventListener(frameEventHandler, 'object:state-changed')
 # when, say, the frame's title changes
--- /tmp/test-tmpfs/nilfs-8527/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:17:14.090011114 -0500
+++ /tmp/test-tmpfs/nilfs-8529/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:18:03.449455975 -0500
@@ -180,8 +180,6 @@
     self.is_active = pyatspi.constants.STATE_ACTIVE in myStates
     self.is_minimized = pyatspi.constants.STATE_ICONIFIED in myStates
 
-    print "new Window:", self.is_active, self.title
-
     # special field for Firefox and Google Chrome
     self.browserURL = self.getURL()
 
--- /tmp/test-tmpfs/nilfs-8533/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:18:05.398710250 -0500
+++ /tmp/test-tmpfs/nilfs-8553/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:18:16.424148142 -0500
@@ -94,7 +94,6 @@
 
   # do an incremental update for efficiency
   def updateApp(self, atspiApp):
-    print '  updateApp', atspiApp.name
     self.__updateAppsDict() # check for added/deleted apps
     self.appsDict[atspiApp.name].updateAllFrames()
 
--- /tmp/test-tmpfs/nilfs-8553/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:18:16.424148142 -0500
+++ /tmp/test-tmpfs/nilfs-8559/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:18:57.511501626 -0500
@@ -341,7 +341,7 @@
 def frameEventHandler(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
   #print get_ms_since_epoch(), event
-  print event
+  print event.name
   myDesktop.updateApp(event.host_application)
 
 
--- /tmp/test-tmpfs/nilfs-8559/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:18:57.511501626 -0500
+++ /tmp/test-tmpfs/nilfs-8568/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:19:06.045612618 -0500
@@ -341,7 +341,7 @@
 def frameEventHandler(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
   #print get_ms_since_epoch(), event
-  print event.name
+  print event.type
   myDesktop.updateApp(event.host_application)
 
 
--- /tmp/test-tmpfs/nilfs-8568/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:19:06.045612618 -0500
+++ /tmp/test-tmpfs/nilfs-8574/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:19:36.549581064 -0500
@@ -345,7 +345,7 @@
   myDesktop.updateApp(event.host_application)
 
 
-reg.registerEventListener(frameEventHandler, 'object:state-changed')
+reg.registerEventListener(frameEventHandler, 'object:state-changed:active')
 # when, say, the frame's title changes
 reg.registerEventListener(frameEventHandler, 'object:property-change:accessible-name')
 
--- /tmp/test-tmpfs/nilfs-8574/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:19:36.549581064 -0500
+++ /tmp/test-tmpfs/nilfs-8581/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:20:00.188653637 -0500
@@ -357,7 +357,7 @@
 #reg.registerEventListener(eventHandler, 'window:deactivate')
 
 # try a catch-all for all window events:
-#reg.registerEventListener(frameEventHandler, 'window')
+reg.registerEventListener(frameEventHandler, 'window')
 
 
 # Not too reliable
--- /tmp/test-tmpfs/nilfs-8581/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:20:00.188653637 -0500
+++ /tmp/test-tmpfs/nilfs-8586/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:20:37.051440315 -0500
@@ -349,15 +349,10 @@
 # when, say, the frame's title changes
 reg.registerEventListener(frameEventHandler, 'object:property-change:accessible-name')
 
-#reg.registerEventListener(eventHandler, 'window:create')
-#reg.registerEventListener(eventHandler, 'window:minimize')
-#reg.registerEventListener(eventHandler, 'window:maximize')
-#reg.registerEventListener(eventHandler, 'window:restore')
-#reg.registerEventListener(eventHandler, 'window:activate')
-#reg.registerEventListener(eventHandler, 'window:deactivate')
-
-# try a catch-all for all window events:
-reg.registerEventListener(frameEventHandler, 'window')
+reg.registerEventListener(eventHandler, 'window:create')
+reg.registerEventListener(eventHandler, 'window:minimize')
+reg.registerEventListener(eventHandler, 'window:maximize')
+reg.registerEventListener(eventHandler, 'window:restore')
 
 
 # Not too reliable
--- /tmp/test-tmpfs/nilfs-8586/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:20:37.051440315 -0500
+++ /tmp/test-tmpfs/nilfs-8590/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:20:49.804094964 -0500
@@ -349,10 +349,10 @@
 # when, say, the frame's title changes
 reg.registerEventListener(frameEventHandler, 'object:property-change:accessible-name')
 
-reg.registerEventListener(eventHandler, 'window:create')
-reg.registerEventListener(eventHandler, 'window:minimize')
-reg.registerEventListener(eventHandler, 'window:maximize')
-reg.registerEventListener(eventHandler, 'window:restore')
+reg.registerEventListener(frameEventHandler, 'window:create')
+reg.registerEventListener(frameEventHandler, 'window:minimize')
+reg.registerEventListener(frameEventHandler, 'window:maximize')
+reg.registerEventListener(frameEventHandler, 'window:restore')
 
 
 # Not too reliable
--- /tmp/test-tmpfs/nilfs-8590/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:20:49.804094964 -0500
+++ /tmp/test-tmpfs/nilfs-8599/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:21:11.529912368 -0500
@@ -352,7 +352,7 @@
 reg.registerEventListener(frameEventHandler, 'window:create')
 reg.registerEventListener(frameEventHandler, 'window:minimize')
 reg.registerEventListener(frameEventHandler, 'window:maximize')
-reg.registerEventListener(frameEventHandler, 'window:restore')
+#reg.registerEventListener(frameEventHandler, 'window:restore')
 
 
 # Not too reliable
--- /tmp/test-tmpfs/nilfs-8599/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:21:11.529912368 -0500
+++ /tmp/test-tmpfs/nilfs-8604/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:21:51.091037902 -0500
@@ -352,7 +352,7 @@
 reg.registerEventListener(frameEventHandler, 'window:create')
 reg.registerEventListener(frameEventHandler, 'window:minimize')
 reg.registerEventListener(frameEventHandler, 'window:maximize')
-#reg.registerEventListener(frameEventHandler, 'window:restore')
+reg.registerEventListener(frameEventHandler, 'window:restore')
 
 
 # Not too reliable
--- /tmp/test-tmpfs/nilfs-8604/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:21:51.091037902 -0500
+++ /tmp/test-tmpfs/nilfs-8607/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:22:19.209677325 -0500
@@ -346,9 +346,7 @@
 
 
 reg.registerEventListener(frameEventHandler, 'object:state-changed:active')
-# when, say, the frame's title changes
-reg.registerEventListener(frameEventHandler, 'object:property-change:accessible-name')
-
+reg.registerEventListener(frameEventHandler, 'object:property-change:accessible-name') # frame title changes
 reg.registerEventListener(frameEventHandler, 'window:create')
 reg.registerEventListener(frameEventHandler, 'window:minimize')
 reg.registerEventListener(frameEventHandler, 'window:maximize')
--- /tmp/test-tmpfs/nilfs-8607/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:22:19.209677325 -0500
+++ /tmp/test-tmpfs/nilfs-8609/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:22:29.490007185 -0500
@@ -345,6 +345,7 @@
   myDesktop.updateApp(event.host_application)
 
 
+# the minimal set of required listeners to get what we want ...
 reg.registerEventListener(frameEventHandler, 'object:state-changed:active')
 reg.registerEventListener(frameEventHandler, 'object:property-change:accessible-name') # frame title changes
 reg.registerEventListener(frameEventHandler, 'window:create')
--- /tmp/test-tmpfs/nilfs-8630/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:22:32.840440513 -0500
+++ /tmp/test-tmpfs/nilfs-8638/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:23:13.632843783 -0500
@@ -354,15 +354,6 @@
 reg.registerEventListener(frameEventHandler, 'window:restore')
 
 
-# Not too reliable
-'''
-def focusEvent(event):
-  print event
-  printAllWindowInfo()
-reg.registerEventListener(focusEvent, 'focus')
-'''
-
-
 try:
    pyatspi.Registry.start()
 except KeyboardInterrupt:
--- /tmp/test-tmpfs/nilfs-8638/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:23:13.632843783 -0500
+++ /tmp/test-tmpfs/nilfs-8642/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:23:42.712730085 -0500
@@ -327,17 +327,6 @@
   print '---'
 
 
-def frameStateChanged(event):
-  if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
-
-  # event.details1 == 1 means the frame has turned 'active'
-  # event.details1 == 0 means the frame has turned 'inactive'
-  #if event.detail1 != 1: return
-
-  print get_ms_since_epoch(), event
-  #myDesktop.updateFrame(event.source, event.host_application)
-
-
 def frameEventHandler(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
   #print get_ms_since_epoch(), event
--- /tmp/test-tmpfs/nilfs-8646/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:23:45.536107066 -0500
+++ /tmp/test-tmpfs/nilfs-8648/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:24:18.751537528 -0500
@@ -124,7 +124,6 @@
 
 
   def __updateFrame(self, cur_atspiFrame):
-    '''
     print '== updateFrame:', cur_atspiFrame
     # update self.windows to account for the fact that frames might
     # have been added or deleted to this app since the last update
@@ -150,11 +149,9 @@
     for w in self.windows:
       if cur_atspiFrame == w.atspiFrame:
         w.update()
-        print '== FOUND'
         return
 
     assert False # should never reach here
-    '''
 
 
   def printMe(self):
--- /tmp/test-tmpfs/nilfs-8648/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:24:18.751537528 -0500
+++ /tmp/test-tmpfs/nilfs-8650/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:24:21.564912418 -0500
@@ -124,7 +124,6 @@
 
 
   def __updateFrame(self, cur_atspiFrame):
-    print '== updateFrame:', cur_atspiFrame
     # update self.windows to account for the fact that frames might
     # have been added or deleted to this app since the last update
     newWindows = []
--- /tmp/test-tmpfs/nilfs-8650/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:24:21.564912418 -0500
+++ /tmp/test-tmpfs/nilfs-8655/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:24:22.840082318 -0500
@@ -123,7 +123,7 @@
       self.windows.append(Window(child, self))
 
 
-  def __updateFrame(self, cur_atspiFrame):
+  def updateFrame(self, cur_atspiFrame):
     # update self.windows to account for the fact that frames might
     # have been added or deleted to this app since the last update
     newWindows = []
--- /tmp/test-tmpfs/nilfs-8655/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:24:22.840082318 -0500
+++ /tmp/test-tmpfs/nilfs-8658/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:24:54.078240760 -0500
@@ -93,9 +93,10 @@
 
 
   # do an incremental update for efficiency
-  def updateApp(self, atspiApp):
+  def updateAppFrame(self, atspiApp, atspiFrame):
     self.__updateAppsDict() # check for added/deleted apps
-    self.appsDict[atspiApp.name].updateAllFrames()
+    #self.appsDict[atspiApp.name].updateAllFrames()
+    self.appsDict[atspiApp.name].updateFrame(atspiFrame)
 
 
   def printMe(self):
@@ -327,7 +328,7 @@
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
   #print get_ms_since_epoch(), event
   print event.type
-  myDesktop.updateApp(event.host_application)
+  myDesktop.updateAppFrame(event.host_application, event.source)
 
 
 # the minimal set of required listeners to get what we want ...
--- /tmp/test-tmpfs/nilfs-8679/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:25:02.805401278 -0500
+++ /tmp/test-tmpfs/nilfs-8686/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:25:57.773698789 -0500
@@ -326,8 +326,7 @@
 
 def frameEventHandler(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
-  #print get_ms_since_epoch(), event
-  print event.type
+  print get_ms_since_epoch(), event.type
   myDesktop.updateAppFrame(event.host_application, event.source)
 
 
--- /tmp/test-tmpfs/nilfs-8686/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:25:57.773698789 -0500
+++ /tmp/test-tmpfs/nilfs-8688/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:26:23.317083000 -0500
@@ -205,6 +205,7 @@
 
   # update fields by re-querying self.atspiFrame
   def update(self):
+    print 'updating', self.title
     new_title = self.atspiFrame.name
     comp = self.atspiFrame.queryComponent()
     new_x, new_y = comp.getPosition(0)
--- /tmp/test-tmpfs/nilfs-8688/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:26:23.317083000 -0500
+++ /tmp/test-tmpfs/nilfs-8690/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:26:24.254207074 -0500
@@ -206,6 +206,7 @@
   # update fields by re-querying self.atspiFrame
   def update(self):
     print 'updating', self.title
+
     new_title = self.atspiFrame.name
     comp = self.atspiFrame.queryComponent()
     new_x, new_y = comp.getPosition(0)
--- /tmp/test-tmpfs/nilfs-8690/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:26:24.254207074 -0500
+++ /tmp/test-tmpfs/nilfs-8695/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:26:27.861684663 -0500
@@ -205,7 +205,7 @@
 
   # update fields by re-querying self.atspiFrame
   def update(self):
-    print 'updating', self.title
+    print 'FRAME UPDATE', self.title
 
     new_title = self.atspiFrame.name
     comp = self.atspiFrame.queryComponent()
--- /tmp/test-tmpfs/nilfs-8695/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:26:27.861684663 -0500
+++ /tmp/test-tmpfs/nilfs-8700/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:26:54.261177093 -0500
@@ -205,7 +205,7 @@
 
   # update fields by re-querying self.atspiFrame
   def update(self):
-    print 'FRAME UPDATE', self.title
+    print ' FRAME UPDATE', self.title
 
     new_title = self.atspiFrame.name
     comp = self.atspiFrame.queryComponent()
--- /tmp/test-tmpfs/nilfs-8700/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:26:54.261177093 -0500
+++ /tmp/test-tmpfs/nilfs-8766/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:27:37.395874084 -0500
@@ -14,9 +14,6 @@
 import pyatspi
 
 
-IGNORED_APPS = ('gnome-panel',) # ignore these 'boring' apps on GNOME
-
-
 '''
 Let's not support Firefox for now since it seems to have some quirks.  e.g.,:
 
@@ -77,7 +74,6 @@
 
     for app in self.atspiDesktop:
       if not app: continue # some app entries are None; weird
-      if app.name in IGNORED_APPS: continue
 
       if app.name in self.appsDict:
         # do a straight-up copy for efficiency
--- /tmp/test-tmpfs/nilfs-8766/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 11:27:37.395874084 -0500
+++ /tmp/test-tmpfs/nilfs-8770/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:26:53.265143167 -0500
@@ -200,8 +200,9 @@
 
 
   # update fields by re-querying self.atspiFrame
+  # and return 'True' if any field has been modified
   def update(self):
-    print ' FRAME UPDATE', self.title
+    modified = False
 
     new_title = self.atspiFrame.name
     comp = self.atspiFrame.queryComponent()
@@ -244,6 +245,8 @@
       print '  URL CHANGED:', new_browserURL
       self.browserURL = new_browserURL
 
+    return modified
+
 
   def printMe(self):
     print ' ', self.title
--- /tmp/test-tmpfs/nilfs-8770/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:26:53.265143167 -0500
+++ /tmp/test-tmpfs/nilfs-8773/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:28:16.055049324 -0500
@@ -216,34 +216,42 @@
     if self.title != new_title:
       print '  TITLE CHANGED:', new_title
       self.title = new_title
+      modified = True
 
     if self.x != new_x:
       print '  x CHANGED:', new_x
       self.x = new_x
+      modified = True
 
     if self.y != new_y:
       print '  y CHANGED:', new_y
       self.y = new_y
+      modified = True
 
     if self.width != new_width:
       print '  width CHANGED:', new_width
       self.width = new_width
+      modified = True
 
     if self.height != new_height:
       print '  height CHANGED:', new_height
       self.height = new_height
+      modified = True
 
     if self.is_active != new_is_active:
       print '  is_active CHANGED:', new_is_active
       self.is_active = new_is_active
+      modified = True
 
     if self.is_minimized != new_is_minimized:
       print '  is_minimized CHANGED:', new_is_minimized
       self.is_minimized = new_is_minimized
+      modified = True
 
     if self.browserURL != new_browserURL:
       print '  URL CHANGED:', new_browserURL
       self.browserURL = new_browserURL
+      modified = True
 
     return modified
 
--- /tmp/test-tmpfs/nilfs-8773/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:28:16.055049324 -0500
+++ /tmp/test-tmpfs/nilfs-8776/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:28:30.701978318 -0500
@@ -144,8 +144,7 @@
 
     for w in self.windows:
       if cur_atspiFrame == w.atspiFrame:
-        w.update()
-        return
+        return w.update()
 
     assert False # should never reach here
 
--- /tmp/test-tmpfs/nilfs-8776/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:28:30.701978318 -0500
+++ /tmp/test-tmpfs/nilfs-8778/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:28:37.789911744 -0500
@@ -147,6 +147,7 @@
         return w.update()
 
     assert False # should never reach here
+    return False
 
 
   def printMe(self):
--- /tmp/test-tmpfs/nilfs-8778/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:28:37.789911744 -0500
+++ /tmp/test-tmpfs/nilfs-8782/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:28:40.031206897 -0500
@@ -147,7 +147,6 @@
         return w.update()
 
     assert False # should never reach here
-    return False
 
 
   def printMe(self):
--- /tmp/test-tmpfs/nilfs-8782/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:28:40.031206897 -0500
+++ /tmp/test-tmpfs/nilfs-8784/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:28:52.843894124 -0500
@@ -120,6 +120,7 @@
       self.windows.append(Window(child, self))
 
 
+  # return True if the frame has changed
   def updateFrame(self, cur_atspiFrame):
     # update self.windows to account for the fact that frames might
     # have been added or deleted to this app since the last update
--- /tmp/test-tmpfs/nilfs-8784/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:28:52.843894124 -0500
+++ /tmp/test-tmpfs/nilfs-8786/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:29:08.319931921 -0500
@@ -107,12 +107,6 @@
     self.atspiApp = app
     self.windows = [] # Window instances
 
-    self.updateAllFrames()
-
-
-  def updateAllFrames(self):
-    self.windows = [] # clear it first!
-
     for child in self.atspiApp:
       # sometimes apps will have non-frame children ...
       if child.getRole() != pyatspi.constants.ROLE_FRAME: continue
--- /tmp/test-tmpfs/nilfs-8790/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:29:11.981414022 -0500
+++ /tmp/test-tmpfs/nilfs-8795/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:29:28.189548006 -0500
@@ -88,11 +88,11 @@
     self.appsDict = newAppsDict
 
 
-  # do an incremental update for efficiency
+  # do an incremental update for efficiency,
+  # returning True if the frame has been modified
   def updateAppFrame(self, atspiApp, atspiFrame):
     self.__updateAppsDict() # check for added/deleted apps
-    #self.appsDict[atspiApp.name].updateAllFrames()
-    self.appsDict[atspiApp.name].updateFrame(atspiFrame)
+    return self.appsDict[atspiApp.name].updateFrame(atspiFrame)
 
 
   def printMe(self):
--- /tmp/test-tmpfs/nilfs-8795/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:29:28.189548006 -0500
+++ /tmp/test-tmpfs/nilfs-8799/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:33:29.624315183 -0500
@@ -69,6 +69,8 @@
 
   # update self.appsDict by scanning through self.atspiDesktop again so
   # that we can check for apps that have been newly-created or deleted
+  #
+  # return True if the number of apps has changed
   def __updateAppsDict(self):
     newAppsDict = {}
 
@@ -85,6 +87,7 @@
         if len(newApp.windows):
           newAppsDict[app.name] = newApp
 
+    if len(self.appsDict) != len(newAppsDict)
     self.appsDict = newAppsDict
 
 
--- /tmp/test-tmpfs/nilfs-8799/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:33:29.624315183 -0500
+++ /tmp/test-tmpfs/nilfs-8804/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:33:59.406231197 -0500
@@ -87,8 +87,10 @@
         if len(newApp.windows):
           newAppsDict[app.name] = newApp
 
-    if len(self.appsDict) != len(newAppsDict)
-    self.appsDict = newAppsDict
+    appNumChanged = (len(self.appsDict) != len(newAppsDict))
+
+    self.appsDict = newAppsDict # VERY important!
+    return appNumChanged
 
 
   # do an incremental update for efficiency,
--- /tmp/test-tmpfs/nilfs-8804/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:33:59.406231197 -0500
+++ /tmp/test-tmpfs/nilfs-8807/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:34:22.127218396 -0500
@@ -94,10 +94,11 @@
 
 
   # do an incremental update for efficiency,
-  # returning True if the frame has been modified
+  # returning True if the desktop has been modified
   def updateAppFrame(self, atspiApp, atspiFrame):
-    self.__updateAppsDict() # check for added/deleted apps
-    return self.appsDict[atspiApp.name].updateFrame(atspiFrame)
+    x = self.__updateAppsDict() # check for added/deleted apps
+    y = self.appsDict[atspiApp.name].updateFrame(atspiFrame)
+    return x or y
 
 
   def printMe(self):
--- /tmp/test-tmpfs/nilfs-8812/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:34:31.239416314 -0500
+++ /tmp/test-tmpfs/nilfs-8816/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:35:07.213145037 -0500
@@ -96,9 +96,9 @@
   # do an incremental update for efficiency,
   # returning True if the desktop has been modified
   def updateAppFrame(self, atspiApp, atspiFrame):
-    x = self.__updateAppsDict() # check for added/deleted apps
-    y = self.appsDict[atspiApp.name].updateFrame(atspiFrame)
-    return x or y
+    appNumChanged = self.__updateAppsDict() # check for added/deleted apps
+    frameChanged = self.appsDict[atspiApp.name].updateFrame(atspiFrame)
+    return appNumChanged or frameChanged
 
 
   def printMe(self):
--- /tmp/test-tmpfs/nilfs-8816/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:35:07.213145037 -0500
+++ /tmp/test-tmpfs/nilfs-8820/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:35:20.291864026 -0500
@@ -120,7 +120,7 @@
       self.windows.append(Window(child, self))
 
 
-  # return True if the frame has changed
+  # return True if the number of frames or cur_atspiFrame have changed
   def updateFrame(self, cur_atspiFrame):
     # update self.windows to account for the fact that frames might
     # have been added or deleted to this app since the last update
--- /tmp/test-tmpfs/nilfs-8820/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:35:20.291864026 -0500
+++ /tmp/test-tmpfs/nilfs-8822/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:35:40.387505076 -0500
@@ -140,6 +140,7 @@
         # create a new Window object, which might incur a *slight* delay
         newWindows.append(Window(child, self))
 
+    frameNumChanged = (len(self.windows) != len(newWindows))
     self.windows = newWindows
 
 
--- /tmp/test-tmpfs/nilfs-8822/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:35:40.387505076 -0500
+++ /tmp/test-tmpfs/nilfs-8825/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:35:41.379635458 -0500
@@ -143,7 +143,6 @@
     frameNumChanged = (len(self.windows) != len(newWindows))
     self.windows = newWindows
 
-
     for w in self.windows:
       if cur_atspiFrame == w.atspiFrame:
         return w.update()
--- /tmp/test-tmpfs/nilfs-8825/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:35:41.379635458 -0500
+++ /tmp/test-tmpfs/nilfs-8913/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:36:01.387264685 -0500
@@ -145,7 +145,8 @@
 
     for w in self.windows:
       if cur_atspiFrame == w.atspiFrame:
-        return w.update()
+        curFrameChanged = w.update()
+        return frameNumChanged or curFrameChanged
 
     assert False # should never reach here
 
--- /tmp/test-tmpfs/nilfs-8913/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:36:01.387264685 -0500
+++ /tmp/test-tmpfs/nilfs-8931/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:39:35.062415133 -0500
@@ -337,7 +337,9 @@
 def frameEventHandler(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
   print get_ms_since_epoch(), event.type
-  myDesktop.updateAppFrame(event.host_application, event.source)
+  desktopAltered = myDesktop.updateAppFrame(event.host_application, event.source)
+  if desktopAltered:
+    print "  ALLO!"
 
 
 # the minimal set of required listeners to get what we want ...
--- /tmp/test-tmpfs/nilfs-8931/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:39:35.062415133 -0500
+++ /tmp/test-tmpfs/nilfs-8963/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:40:22.853719442 -0500
@@ -215,42 +215,42 @@
     new_browserURL = self.getURL()
 
     if self.title != new_title:
-      print '  TITLE CHANGED:', new_title
+      #print '  TITLE CHANGED:', new_title
       self.title = new_title
       modified = True
 
     if self.x != new_x:
-      print '  x CHANGED:', new_x
+      #print '  x CHANGED:', new_x
       self.x = new_x
       modified = True
 
     if self.y != new_y:
-      print '  y CHANGED:', new_y
+      #print '  y CHANGED:', new_y
       self.y = new_y
       modified = True
 
     if self.width != new_width:
-      print '  width CHANGED:', new_width
+      #print '  width CHANGED:', new_width
       self.width = new_width
       modified = True
 
     if self.height != new_height:
-      print '  height CHANGED:', new_height
+      #print '  height CHANGED:', new_height
       self.height = new_height
       modified = True
 
     if self.is_active != new_is_active:
-      print '  is_active CHANGED:', new_is_active
+      #print '  is_active CHANGED:', new_is_active
       self.is_active = new_is_active
       modified = True
 
     if self.is_minimized != new_is_minimized:
-      print '  is_minimized CHANGED:', new_is_minimized
+      #print '  is_minimized CHANGED:', new_is_minimized
       self.is_minimized = new_is_minimized
       modified = True
 
     if self.browserURL != new_browserURL:
-      print '  URL CHANGED:', new_browserURL
+      #print '  URL CHANGED:', new_browserURL
       self.browserURL = new_browserURL
       modified = True
 
--- /tmp/test-tmpfs/nilfs-8963/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:40:22.853719442 -0500
+++ /tmp/test-tmpfs/nilfs-9000/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:47:30.011996903 -0500
@@ -339,7 +339,7 @@
   print get_ms_since_epoch(), event.type
   desktopAltered = myDesktop.updateAppFrame(event.host_application, event.source)
   if desktopAltered:
-    print "  ALLO!"
+    myDesktop.printMe()
 
 
 # the minimal set of required listeners to get what we want ...
--- /tmp/test-tmpfs/nilfs-9000/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:47:30.011996903 -0500
+++ /tmp/test-tmpfs/nilfs-9003/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:48:12.778624656 -0500
@@ -339,6 +339,8 @@
   print get_ms_since_epoch(), event.type
   desktopAltered = myDesktop.updateAppFrame(event.host_application, event.source)
   if desktopAltered:
+    for i in range(100:
+      print
     myDesktop.printMe()
 
 
--- /tmp/test-tmpfs/nilfs-9003/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:48:12.778624656 -0500
+++ /tmp/test-tmpfs/nilfs-9007/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:48:18.298350923 -0500
@@ -339,7 +339,7 @@
   print get_ms_since_epoch(), event.type
   desktopAltered = myDesktop.updateAppFrame(event.host_application, event.source)
   if desktopAltered:
-    for i in range(100:
+    for i in range(100):
       print
     myDesktop.printMe()
 
--- /tmp/test-tmpfs/nilfs-9007/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:48:18.298350923 -0500
+++ /tmp/test-tmpfs/nilfs-9010/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:48:32.576229473 -0500
@@ -102,7 +102,7 @@
 
 
   def printMe(self):
-    print 'DESKTOP %dx%d' % (self.width, self.height)
+    print '=== DESKTOP ==='
     for app in self.apps:
       app.printMe()
 
--- /tmp/test-tmpfs/nilfs-9010/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:48:32.576229473 -0500
+++ /tmp/test-tmpfs/nilfs-9015/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:48:41.914458034 -0500
@@ -103,7 +103,7 @@
 
   def printMe(self):
     print '=== DESKTOP ==='
-    for app in self.apps:
+    for app in self.appsDict:
       app.printMe()
 
 
--- /tmp/test-tmpfs/nilfs-9015/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:48:41.914458034 -0500
+++ /tmp/test-tmpfs/nilfs-9031/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:49:08.858002496 -0500
@@ -103,8 +103,8 @@
 
   def printMe(self):
     print '=== DESKTOP ==='
-    for app in self.appsDict:
-      app.printMe()
+    for appName in sorted(self.appsDict.keys()):
+      self.appsDict[appName].printMe()
 
 
 class Application:
--- /tmp/test-tmpfs/nilfs-9031/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:49:08.858002496 -0500
+++ /tmp/test-tmpfs/nilfs-9036/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:52:42.041031162 -0500
@@ -176,6 +176,8 @@
     # special field for Firefox and Google Chrome
     self.browserURL = self.getURL()
 
+    assert not (self.is_active and self.is_minimized)
+
 
   # returns a URL string if applicable, or 'None' if the Window isn't a
   # Firefox or Chrome web browser window
@@ -254,16 +256,20 @@
       self.browserURL = new_browserURL
       modified = True
 
+    assert not (self.is_active and self.is_minimized)
     return modified
 
 
   def printMe(self):
-    print ' ', self.title
-    print '    x:%d,y:%d (%dx%d)' % (self.x, self.y, self.width, self.height)
     if self.is_active:
-      print '    ACTIVE'
-    if self.is_minimized:
+      print '*', self.title
+    elif self.is_minimized:
       print '    MINIMIZED'
+    else:
+      print ' ', self.title
+
+    print '    x:%d,y:%d (%dx%d)' % (self.x, self.y, self.width, self.height)
+    if self.is_minimized:
     if self.browserURL:
       print '   ', self.browserURL
 
--- /tmp/test-tmpfs/nilfs-9036/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:52:42.041031162 -0500
+++ /tmp/test-tmpfs/nilfs-9037/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:53:12.131985211 -0500
@@ -262,14 +262,15 @@
 
   def printMe(self):
     if self.is_active:
-      print '*', self.title
+      print '*',
     elif self.is_minimized:
-      print '    MINIMIZED'
+      print 'm',
     else:
-      print ' ', self.title
+      print ' ',
+
+    print self.title
 
     print '    x:%d,y:%d (%dx%d)' % (self.x, self.y, self.width, self.height)
-    if self.is_minimized:
     if self.browserURL:
       print '   ', self.browserURL
 
--- /tmp/test-tmpfs/nilfs-9043/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:53:15.084373137 -0500
+++ /tmp/test-tmpfs/nilfs-9111/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:53:51.292130177 -0500
@@ -343,7 +343,7 @@
 
 def frameEventHandler(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
-  print get_ms_since_epoch(), event.type
+  #print get_ms_since_epoch(), event.type
   desktopAltered = myDesktop.updateAppFrame(event.host_application, event.source)
   if desktopAltered:
     for i in range(100):
--- /tmp/test-tmpfs/nilfs-9111/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 14:53:51.292130177 -0500
+++ /tmp/test-tmpfs/nilfs-9120/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:01:18.568913250 -0500
@@ -358,6 +358,7 @@
 reg.registerEventListener(frameEventHandler, 'window:minimize')
 reg.registerEventListener(frameEventHandler, 'window:maximize')
 reg.registerEventListener(frameEventHandler, 'window:restore')
+reg.registerEventListener(frameEventHandler, 'window:deactivate')
 
 
 try:
--- /tmp/test-tmpfs/nilfs-9120/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:01:18.568913250 -0500
+++ /tmp/test-tmpfs/nilfs-9141/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:01:50.074050953 -0500
@@ -358,7 +358,6 @@
 reg.registerEventListener(frameEventHandler, 'window:minimize')
 reg.registerEventListener(frameEventHandler, 'window:maximize')
 reg.registerEventListener(frameEventHandler, 'window:restore')
-reg.registerEventListener(frameEventHandler, 'window:deactivate')
 
 
 try:
--- /tmp/test-tmpfs/nilfs-9141/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:01:50.074050953 -0500
+++ /tmp/test-tmpfs/nilfs-9144/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:02:59.280138116 -0500
@@ -152,7 +152,7 @@
 
 
   def printMe(self):
-    print ' APP:', self.name
+    print 'APP:', self.name
     for w in self.windows:
       w.printMe()
 
--- /tmp/test-tmpfs/nilfs-9188/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:03:00.286270209 -0500
+++ /tmp/test-tmpfs/nilfs-9195/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:07:41.801207606 -0500
@@ -361,7 +361,7 @@
 
 
 try:
-   pyatspi.Registry.start()
+   pyatspi.Registry.start(async=True, gil=False)
 except KeyboardInterrupt:
    pass
 
--- /tmp/test-tmpfs/nilfs-9195/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:07:41.801207606 -0500
+++ /tmp/test-tmpfs/nilfs-9202/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:08:37.509512086 -0500
@@ -361,6 +361,9 @@
 
 
 try:
+   #pyatspi.Registry.start()
+
+   # try to be asynchronous to speed up performance:
    pyatspi.Registry.start(async=True, gil=False)
 except KeyboardInterrupt:
    pass
--- /tmp/test-tmpfs/nilfs-9202/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:08:37.509512086 -0500
+++ /tmp/test-tmpfs/nilfs-9204/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:09:34.141936109 -0500
@@ -12,6 +12,7 @@
 
 import time
 import pyatspi
+import gobject # requires the gtk package of some sort
 
 
 '''
--- /tmp/test-tmpfs/nilfs-9208/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:09:35.989178241 -0500
+++ /tmp/test-tmpfs/nilfs-9212/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:10:06.486175432 -0500
@@ -361,6 +361,11 @@
 reg.registerEventListener(frameEventHandler, 'window:restore')
 
 
+def foo():
+  print get_ms_since_epoch()
+
+gobject.timeout_add(200, foo)
+
 try:
    #pyatspi.Registry.start()
 
--- /tmp/test-tmpfs/nilfs-9212/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:10:06.486175432 -0500
+++ /tmp/test-tmpfs/nilfs-9215/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:10:16.468483697 -0500
@@ -363,6 +363,7 @@
 
 def foo():
   print get_ms_since_epoch()
+  return True
 
 gobject.timeout_add(200, foo)
 
--- /tmp/test-tmpfs/nilfs-9215/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:10:16.468483697 -0500
+++ /tmp/test-tmpfs/nilfs-9221/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:10:29.069135043 -0500
@@ -365,7 +365,7 @@
   print get_ms_since_epoch()
   return True
 
-gobject.timeout_add(200, foo)
+gobject.timeout_add(1000, foo)
 
 try:
    #pyatspi.Registry.start()
--- /tmp/test-tmpfs/nilfs-9221/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:10:29.069135043 -0500
+++ /tmp/test-tmpfs/nilfs-9223/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:12:32.136259182 -0500
@@ -361,6 +361,7 @@
 reg.registerEventListener(frameEventHandler, 'window:restore')
 
 
+# This idiom of gobject.timeout_add was taken from the Accerciser project
 def foo():
   print get_ms_since_epoch()
   return True
--- /tmp/test-tmpfs/nilfs-9223/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:12:32.136259182 -0500
+++ /tmp/test-tmpfs/nilfs-9230/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:12:36.791869014 -0500
@@ -366,7 +366,7 @@
   print get_ms_since_epoch()
   return True
 
-gobject.timeout_add(1000, foo)
+gobject.timeout_add(200, foo)
 
 try:
    #pyatspi.Registry.start()
--- /tmp/test-tmpfs/nilfs-9230/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:12:36.791869014 -0500
+++ /tmp/test-tmpfs/nilfs-9235/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:13:31.617066345 -0500
@@ -364,6 +364,7 @@
 # This idiom of gobject.timeout_add was taken from the Accerciser project
 def foo():
   print get_ms_since_epoch()
+  pyatspi.Registry.pumpQueuedEvents()
   return True
 
 gobject.timeout_add(200, foo)
--- /tmp/test-tmpfs/nilfs-9235/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:13:31.617066345 -0500
+++ /tmp/test-tmpfs/nilfs-9238/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:13:45.726920513 -0500
@@ -363,7 +363,6 @@
 
 # This idiom of gobject.timeout_add was taken from the Accerciser project
 def foo():
-  print get_ms_since_epoch()
   pyatspi.Registry.pumpQueuedEvents()
   return True
 
--- /tmp/test-tmpfs/nilfs-9238/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:13:45.726920513 -0500
+++ /tmp/test-tmpfs/nilfs-9264/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:14:11.168263456 -0500
@@ -361,17 +361,17 @@
 reg.registerEventListener(frameEventHandler, 'window:restore')
 
 
-# This idiom of gobject.timeout_add was taken from the Accerciser project
-def foo():
+# This idiom of gobject.timeout_add, pumpQueuedEvents, and async=True
+# was taken from the Accerciser project
+
+def asyncHandler():
   pyatspi.Registry.pumpQueuedEvents()
   return True
 
-gobject.timeout_add(200, foo)
+gobject.timeout_add(200, asyncHandler)
 
 try:
-   #pyatspi.Registry.start()
-
-   # try to be asynchronous to speed up performance:
+   # be asynchronous to speed up performance:
    pyatspi.Registry.start(async=True, gil=False)
 except KeyboardInterrupt:
    pass
--- /tmp/test-tmpfs/nilfs-9264/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:14:11.168263456 -0500
+++ /tmp/test-tmpfs/nilfs-9310/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:15:32.653968031 -0500
@@ -371,7 +371,7 @@
 gobject.timeout_add(200, asyncHandler)
 
 try:
-   # be asynchronous to speed up performance:
+   # be asynchronous to GREATLY speed up performance:
    pyatspi.Registry.start(async=True, gil=False)
 except KeyboardInterrupt:
    pass
--- /tmp/test-tmpfs/nilfs-9326/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:17:45.897463907 -0500
+++ /tmp/test-tmpfs/nilfs-9343/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:18:14.164174287 -0500
@@ -344,6 +344,9 @@
 
 def frameEventHandler(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
+
+  time.sleep(0.1) # hack to introduce a slight delay ...
+
   #print get_ms_since_epoch(), event.type
   desktopAltered = myDesktop.updateAppFrame(event.host_application, event.source)
   if desktopAltered:
--- /tmp/test-tmpfs/nilfs-9343/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:18:14.164174287 -0500
+++ /tmp/test-tmpfs/nilfs-9346/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:18:48.416669803 -0500
@@ -345,8 +345,6 @@
 def frameEventHandler(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
 
-  time.sleep(0.1) # hack to introduce a slight delay ...
-
   #print get_ms_since_epoch(), event.type
   desktopAltered = myDesktop.updateAppFrame(event.host_application, event.source)
   if desktopAltered:
--- /tmp/test-tmpfs/nilfs-9346/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:18:48.416669803 -0500
+++ /tmp/test-tmpfs/nilfs-9363/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:18:56.265699873 -0500
@@ -345,7 +345,7 @@
 def frameEventHandler(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
 
-  #print get_ms_since_epoch(), event.type
+  print get_ms_since_epoch(), event.type
   desktopAltered = myDesktop.updateAppFrame(event.host_application, event.source)
   if desktopAltered:
     for i in range(100):
--- /tmp/test-tmpfs/nilfs-9363/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:18:56.265699873 -0500
+++ /tmp/test-tmpfs/nilfs-9380/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:19:29.960121392 -0500
@@ -347,6 +347,7 @@
 
   print get_ms_since_epoch(), event.type
   desktopAltered = myDesktop.updateAppFrame(event.host_application, event.source)
+  return # stent
   if desktopAltered:
     for i in range(100):
       print
--- /tmp/test-tmpfs/nilfs-9380/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:19:29.960121392 -0500
+++ /tmp/test-tmpfs/nilfs-9396/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:19:57.711762622 -0500
@@ -357,10 +357,13 @@
 # the minimal set of required listeners to get what we want ...
 reg.registerEventListener(frameEventHandler, 'object:state-changed:active')
 reg.registerEventListener(frameEventHandler, 'object:property-change:accessible-name') # frame title changes
-reg.registerEventListener(frameEventHandler, 'window:create')
-reg.registerEventListener(frameEventHandler, 'window:minimize')
-reg.registerEventListener(frameEventHandler, 'window:maximize')
-reg.registerEventListener(frameEventHandler, 'window:restore')
+
+#reg.registerEventListener(frameEventHandler, 'window:create')
+#reg.registerEventListener(frameEventHandler, 'window:minimize')
+#reg.registerEventListener(frameEventHandler, 'window:maximize')
+#reg.registerEventListener(frameEventHandler, 'window:restore')
+
+reg.registerEventListener(frameEventHandler, 'window')
 
 
 # This idiom of gobject.timeout_add, pumpQueuedEvents, and async=True
--- /tmp/test-tmpfs/nilfs-9396/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:19:57.711762622 -0500
+++ /tmp/test-tmpfs/nilfs-9415/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:20:29.448926288 -0500
@@ -363,7 +363,7 @@
 #reg.registerEventListener(frameEventHandler, 'window:maximize')
 #reg.registerEventListener(frameEventHandler, 'window:restore')
 
-reg.registerEventListener(frameEventHandler, 'window')
+reg.registerEventListener(frameEventHandler, 'object:state-changed:defunct')
 
 
 # This idiom of gobject.timeout_add, pumpQueuedEvents, and async=True
--- /tmp/test-tmpfs/nilfs-9415/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:20:29.448926288 -0500
+++ /tmp/test-tmpfs/nilfs-9417/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:21:03.853439298 -0500
@@ -363,8 +363,6 @@
 #reg.registerEventListener(frameEventHandler, 'window:maximize')
 #reg.registerEventListener(frameEventHandler, 'window:restore')
 
-reg.registerEventListener(frameEventHandler, 'object:state-changed:defunct')
-
 
 # This idiom of gobject.timeout_add, pumpQueuedEvents, and async=True
 # was taken from the Accerciser project
--- /tmp/test-tmpfs/nilfs-9417/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:21:03.853439298 -0500
+++ /tmp/test-tmpfs/nilfs-9462/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:21:08.834092581 -0500
@@ -358,10 +358,10 @@
 reg.registerEventListener(frameEventHandler, 'object:state-changed:active')
 reg.registerEventListener(frameEventHandler, 'object:property-change:accessible-name') # frame title changes
 
-#reg.registerEventListener(frameEventHandler, 'window:create')
-#reg.registerEventListener(frameEventHandler, 'window:minimize')
-#reg.registerEventListener(frameEventHandler, 'window:maximize')
-#reg.registerEventListener(frameEventHandler, 'window:restore')
+reg.registerEventListener(frameEventHandler, 'window:create')
+reg.registerEventListener(frameEventHandler, 'window:minimize')
+reg.registerEventListener(frameEventHandler, 'window:maximize')
+reg.registerEventListener(frameEventHandler, 'window:restore')
 
 
 # This idiom of gobject.timeout_add, pumpQueuedEvents, and async=True
--- /tmp/test-tmpfs/nilfs-9462/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:21:08.834092581 -0500
+++ /tmp/test-tmpfs/nilfs-9469/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:22:51.362537865 -0500
@@ -345,9 +345,9 @@
 def frameEventHandler(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
 
-  print get_ms_since_epoch(), event.type
+  #print get_ms_since_epoch(), event.type
   desktopAltered = myDesktop.updateAppFrame(event.host_application, event.source)
-  return # stent
+
   if desktopAltered:
     for i in range(100):
       print
--- /tmp/test-tmpfs/nilfs-9469/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:22:51.362537865 -0500
+++ /tmp/test-tmpfs/nilfs-9473/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:24:11.851089175 -0500
@@ -371,7 +371,7 @@
   pyatspi.Registry.pumpQueuedEvents()
   return True
 
-gobject.timeout_add(200, asyncHandler)
+gobject.timeout_add(1000, asyncHandler)
 
 try:
    # be asynchronous to GREATLY speed up performance:
--- /tmp/test-tmpfs/nilfs-9473/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:24:11.851089175 -0500
+++ /tmp/test-tmpfs/nilfs-9551/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:24:20.465218219 -0500
@@ -371,7 +371,7 @@
   pyatspi.Registry.pumpQueuedEvents()
   return True
 
-gobject.timeout_add(1000, asyncHandler)
+gobject.timeout_add(200, asyncHandler)
 
 try:
    # be asynchronous to GREATLY speed up performance:
--- /tmp/test-tmpfs/nilfs-9551/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:24:20.465218219 -0500
+++ /tmp/test-tmpfs/nilfs-9554/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:30:02.098966972 -0500
@@ -363,6 +363,8 @@
 reg.registerEventListener(frameEventHandler, 'window:maximize')
 reg.registerEventListener(frameEventHandler, 'window:restore')
 
+reg.registerEventListener(frameEventHandler, 'window:deactivate')
+
 
 # This idiom of gobject.timeout_add, pumpQueuedEvents, and async=True
 # was taken from the Accerciser project
--- /tmp/test-tmpfs/nilfs-9554/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:30:02.098966972 -0500
+++ /tmp/test-tmpfs/nilfs-9581/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:30:07.049615029 -0500
@@ -345,6 +345,8 @@
 def frameEventHandler(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
 
+  time.sleep(0.2)
+
   #print get_ms_since_epoch(), event.type
   desktopAltered = myDesktop.updateAppFrame(event.host_application, event.source)
 
--- /tmp/test-tmpfs/nilfs-9581/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:30:07.049615029 -0500
+++ /tmp/test-tmpfs/nilfs-9596/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:30:38.840776348 -0500
@@ -345,9 +345,7 @@
 def frameEventHandler(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
 
-  time.sleep(0.2)
-
-  #print get_ms_since_epoch(), event.type
+  print get_ms_since_epoch(), event.type
   desktopAltered = myDesktop.updateAppFrame(event.host_application, event.source)
 
   if desktopAltered:
--- /tmp/test-tmpfs/nilfs-9596/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:30:38.840776348 -0500
+++ /tmp/test-tmpfs/nilfs-9598/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:31:05.888316391 -0500
@@ -343,9 +343,9 @@
 
 
 def frameEventHandler(event):
+  print get_ms_since_epoch(), event.type
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
 
-  print get_ms_since_epoch(), event.type
   desktopAltered = myDesktop.updateAppFrame(event.host_application, event.source)
 
   if desktopAltered:
--- /tmp/test-tmpfs/nilfs-9598/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:31:05.888316391 -0500
+++ /tmp/test-tmpfs/nilfs-9613/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:31:10.863967578 -0500
@@ -348,10 +348,10 @@
 
   desktopAltered = myDesktop.updateAppFrame(event.host_application, event.source)
 
-  if desktopAltered:
-    for i in range(100):
-      print
-    myDesktop.printMe()
+  #if desktopAltered:
+  #  for i in range(100):
+  #    print
+  #  myDesktop.printMe()
 
 
 # the minimal set of required listeners to get what we want ...
--- /tmp/test-tmpfs/nilfs-9613/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:31:10.863967578 -0500
+++ /tmp/test-tmpfs/nilfs-9629/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:31:32.369782024 -0500
@@ -343,7 +343,7 @@
 
 
 def frameEventHandler(event):
-  print get_ms_since_epoch(), event.type
+  print get_ms_since_epoch(), event
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
 
   desktopAltered = myDesktop.updateAppFrame(event.host_application, event.source)
--- /tmp/test-tmpfs/nilfs-9629/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:31:32.369782024 -0500
+++ /tmp/test-tmpfs/nilfs-9698/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:31:59.454326262 -0500
@@ -369,15 +369,16 @@
 # This idiom of gobject.timeout_add, pumpQueuedEvents, and async=True
 # was taken from the Accerciser project
 
-def asyncHandler():
-  pyatspi.Registry.pumpQueuedEvents()
-  return True
-
-gobject.timeout_add(200, asyncHandler)
+#def asyncHandler():
+#  pyatspi.Registry.pumpQueuedEvents()
+#  return True
+#
+#gobject.timeout_add(200, asyncHandler)
 
 try:
    # be asynchronous to GREATLY speed up performance:
-   pyatspi.Registry.start(async=True, gil=False)
+   #pyatspi.Registry.start(async=True, gil=False)
+   pyatspi.Registry.start()
 except KeyboardInterrupt:
    pass
 
--- /tmp/test-tmpfs/nilfs-9698/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:31:59.454326262 -0500
+++ /tmp/test-tmpfs/nilfs-9702/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:33:38.996349400 -0500
@@ -343,15 +343,15 @@
 
 
 def frameEventHandler(event):
-  print get_ms_since_epoch(), event
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
 
+  #print get_ms_since_epoch(), event.type
   desktopAltered = myDesktop.updateAppFrame(event.host_application, event.source)
 
-  #if desktopAltered:
-  #  for i in range(100):
-  #    print
-  #  myDesktop.printMe()
+  if desktopAltered:
+    for i in range(100):
+      print
+    myDesktop.printMe()
 
 
 # the minimal set of required listeners to get what we want ...
@@ -363,22 +363,19 @@
 reg.registerEventListener(frameEventHandler, 'window:maximize')
 reg.registerEventListener(frameEventHandler, 'window:restore')
 
-reg.registerEventListener(frameEventHandler, 'window:deactivate')
-
 
 # This idiom of gobject.timeout_add, pumpQueuedEvents, and async=True
 # was taken from the Accerciser project
 
-#def asyncHandler():
-#  pyatspi.Registry.pumpQueuedEvents()
-#  return True
-#
-#gobject.timeout_add(200, asyncHandler)
+def asyncHandler():
+  pyatspi.Registry.pumpQueuedEvents()
+  return True
+
+gobject.timeout_add(200, asyncHandler)
 
 try:
    # be asynchronous to GREATLY speed up performance:
-   #pyatspi.Registry.start(async=True, gil=False)
-   pyatspi.Registry.start()
+   pyatspi.Registry.start(async=True, gil=False)
 except KeyboardInterrupt:
    pass
 
--- /tmp/test-tmpfs/nilfs-9702/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:33:38.996349400 -0500
+++ /tmp/test-tmpfs/nilfs-9717/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:35:30.169889258 -0500
@@ -363,6 +363,8 @@
 reg.registerEventListener(frameEventHandler, 'window:maximize')
 reg.registerEventListener(frameEventHandler, 'window:restore')
 
+reg.registerEventListener(frameEventHandler, 'focus')
+
 
 # This idiom of gobject.timeout_add, pumpQueuedEvents, and async=True
 # was taken from the Accerciser project
--- /tmp/test-tmpfs/nilfs-9717/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:35:30.169889258 -0500
+++ /tmp/test-tmpfs/nilfs-9723/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:35:50.768582689 -0500
@@ -363,8 +363,6 @@
 reg.registerEventListener(frameEventHandler, 'window:maximize')
 reg.registerEventListener(frameEventHandler, 'window:restore')
 
-reg.registerEventListener(frameEventHandler, 'focus')
-
 
 # This idiom of gobject.timeout_add, pumpQueuedEvents, and async=True
 # was taken from the Accerciser project
--- /tmp/test-tmpfs/nilfs-9752/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:36:54.826957672 -0500
+++ /tmp/test-tmpfs/nilfs-9754/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:38:16.869681470 -0500
@@ -7,8 +7,6 @@
 #          check the "Enable assistive technologies" box,
 #          then log out and log back in.
 
-# NB: this won't fire an event when a Chrome window is moved :(
-
 
 import time
 import pyatspi
@@ -355,6 +353,12 @@
 
 
 # the minimal set of required listeners to get what we want ...
+#
+# Known bugs:
+# - won't fire an update event when a Chrome window is moved :(
+# - won't fire an update event when you CLOSE a window without first
+#   putting it in focus
+
 reg.registerEventListener(frameEventHandler, 'object:state-changed:active')
 reg.registerEventListener(frameEventHandler, 'object:property-change:accessible-name') # frame title changes
 
--- /tmp/test-tmpfs/nilfs-9757/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:38:21.093233456 -0500
+++ /tmp/test-tmpfs/nilfs-9759/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:38:27.662091942 -0500
@@ -335,10 +335,6 @@
   milliseconds_since_epoch = int(time.time() * 1000)
   return milliseconds_since_epoch
 
-def printAllWindowInfo():
-  #myDesktop.printMe()
-  print '---'
-
 
 def frameEventHandler(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
--- /tmp/test-tmpfs/nilfs-9759/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:38:27.662091942 -0500
+++ /tmp/test-tmpfs/nilfs-9805/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:38:29.773367861 -0500
@@ -381,4 +381,3 @@
 
 
 pyatspi.Registry.stop()
-
--- /tmp/test-tmpfs/nilfs-9805/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:38:29.773367861 -0500
+++ /tmp/test-tmpfs/nilfs-9841/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:40:29.067955420 -0500
@@ -147,6 +147,7 @@
         curFrameChanged = w.update()
         return frameNumChanged or curFrameChanged
 
+    # bug triggered when you open Firefox
     assert False # should never reach here
 
 
--- /tmp/test-tmpfs/nilfs-9841/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:40:29.067955420 -0500
+++ /tmp/test-tmpfs/nilfs-9844/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:47:58.343611317 -0500
@@ -121,6 +121,8 @@
 
   # return True if the number of frames or cur_atspiFrame have changed
   def updateFrame(self, cur_atspiFrame):
+    print "updateFrame", cur_atspiFrame
+
     # update self.windows to account for the fact that frames might
     # have been added or deleted to this app since the last update
     newWindows = []
--- /tmp/test-tmpfs/nilfs-9844/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:47:58.343611317 -0500
+++ /tmp/test-tmpfs/nilfs-9853/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:48:08.384933131 -0500
@@ -342,13 +342,13 @@
 def frameEventHandler(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
 
-  #print get_ms_since_epoch(), event.type
+  print get_ms_since_epoch(), event.type
   desktopAltered = myDesktop.updateAppFrame(event.host_application, event.source)
 
-  if desktopAltered:
-    for i in range(100):
-      print
-    myDesktop.printMe()
+  #if desktopAltered:
+  #  for i in range(100):
+  #    print
+  #  myDesktop.printMe()
 
 
 # the minimal set of required listeners to get what we want ...
--- /tmp/test-tmpfs/nilfs-9853/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:48:08.384933131 -0500
+++ /tmp/test-tmpfs/nilfs-9859/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:48:53.328863972 -0500
@@ -121,7 +121,7 @@
 
   # return True if the number of frames or cur_atspiFrame have changed
   def updateFrame(self, cur_atspiFrame):
-    print "updateFrame", cur_atspiFrame
+    print "updateFrame", cur_atspiFrame, len(self.windows)
 
     # update self.windows to account for the fact that frames might
     # have been added or deleted to this app since the last update
--- /tmp/test-tmpfs/nilfs-9859/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:48:53.328863972 -0500
+++ /tmp/test-tmpfs/nilfs-9864/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:49:38.797863145 -0500
@@ -141,6 +141,7 @@
         # create a new Window object, which might incur a *slight* delay
         newWindows.append(Window(child, self))
 
+    print 'updateFrameB', len(self.windows)
     frameNumChanged = (len(self.windows) != len(newWindows))
     self.windows = newWindows
 
--- /tmp/test-tmpfs/nilfs-9864/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:49:38.797863145 -0500
+++ /tmp/test-tmpfs/nilfs-9873/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:50:17.167924945 -0500
@@ -141,7 +141,7 @@
         # create a new Window object, which might incur a *slight* delay
         newWindows.append(Window(child, self))
 
-    print 'updateFrameB', len(self.windows)
+    print 'updateFrameB', self.windows, newWindows
     frameNumChanged = (len(self.windows) != len(newWindows))
     self.windows = newWindows
 
--- /tmp/test-tmpfs/nilfs-9873/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:50:17.167924945 -0500
+++ /tmp/test-tmpfs/nilfs-9876/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:51:03.092982522 -0500
@@ -121,7 +121,7 @@
 
   # return True if the number of frames or cur_atspiFrame have changed
   def updateFrame(self, cur_atspiFrame):
-    print "updateFrame", cur_atspiFrame, len(self.windows)
+    print "updateFrame", id(cur_atspiFrame), len(self.windows)
 
     # update self.windows to account for the fact that frames might
     # have been added or deleted to this app since the last update
--- /tmp/test-tmpfs/nilfs-9876/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:51:03.092982522 -0500
+++ /tmp/test-tmpfs/nilfs-9878/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:51:20.226242181 -0500
@@ -141,10 +141,11 @@
         # create a new Window object, which might incur a *slight* delay
         newWindows.append(Window(child, self))
 
-    print 'updateFrameB', self.windows, newWindows
     frameNumChanged = (len(self.windows) != len(newWindows))
     self.windows = newWindows
 
+    print 'updateFrameB', [id(e.atspiFrame) for e in self.windows]
+
     for w in self.windows:
       if cur_atspiFrame == w.atspiFrame:
         curFrameChanged = w.update()
--- /tmp/test-tmpfs/nilfs-9878/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:51:20.226242181 -0500
+++ /tmp/test-tmpfs/nilfs-9885/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:51:23.426664260 -0500
@@ -146,6 +146,7 @@
 
     print 'updateFrameB', [id(e.atspiFrame) for e in self.windows]
 
+
     for w in self.windows:
       if cur_atspiFrame == w.atspiFrame:
         curFrameChanged = w.update()
--- /tmp/test-tmpfs/nilfs-9885/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:51:23.426664260 -0500
+++ /tmp/test-tmpfs/nilfs-9887/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:52:40.572837113 -0500
@@ -144,9 +144,6 @@
     frameNumChanged = (len(self.windows) != len(newWindows))
     self.windows = newWindows
 
-    print 'updateFrameB', [id(e.atspiFrame) for e in self.windows]
-
-
     for w in self.windows:
       if cur_atspiFrame == w.atspiFrame:
         curFrameChanged = w.update()
--- /tmp/test-tmpfs/nilfs-9887/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:52:40.572837113 -0500
+++ /tmp/test-tmpfs/nilfs-9890/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:52:45.401473751 -0500
@@ -121,8 +121,6 @@
 
   # return True if the number of frames or cur_atspiFrame have changed
   def updateFrame(self, cur_atspiFrame):
-    print "updateFrame", id(cur_atspiFrame), len(self.windows)
-
     # update self.windows to account for the fact that frames might
     # have been added or deleted to this app since the last update
     newWindows = []
--- /tmp/test-tmpfs/nilfs-9896/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:52:54.009608679 -0500
+++ /tmp/test-tmpfs/nilfs-9898/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:53:19.472965670 -0500
@@ -143,6 +143,7 @@
     self.windows = newWindows
 
     for w in self.windows:
+      print cur_atspiFrame, w.atspiFrame
       if cur_atspiFrame == w.atspiFrame:
         curFrameChanged = w.update()
         return frameNumChanged or curFrameChanged
--- /tmp/test-tmpfs/nilfs-9898/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:53:19.472965670 -0500
+++ /tmp/test-tmpfs/nilfs-9903/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:53:23.200457066 -0500
@@ -143,7 +143,7 @@
     self.windows = newWindows
 
     for w in self.windows:
-      print cur_atspiFrame, w.atspiFrame
+      print cur_atspiFrame, '|', w.atspiFrame
       if cur_atspiFrame == w.atspiFrame:
         curFrameChanged = w.update()
         return frameNumChanged or curFrameChanged
--- /tmp/test-tmpfs/nilfs-9903/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:53:23.200457066 -0500
+++ /tmp/test-tmpfs/nilfs-9910/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:53:58.026047820 -0500
@@ -143,7 +143,7 @@
     self.windows = newWindows
 
     for w in self.windows:
-      print cur_atspiFrame, '|', w.atspiFrame
+      print dir(cur_atspiFrame)
       if cur_atspiFrame == w.atspiFrame:
         curFrameChanged = w.update()
         return frameNumChanged or curFrameChanged
--- /tmp/test-tmpfs/nilfs-9910/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:53:58.026047820 -0500
+++ /tmp/test-tmpfs/nilfs-9914/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:54:49.292804923 -0500
@@ -143,8 +143,7 @@
     self.windows = newWindows
 
     for w in self.windows:
-      print dir(cur_atspiFrame)
-      if cur_atspiFrame == w.atspiFrame:
+      if frame_equals(cur_atspiFrame, w.atspiFrame):
         curFrameChanged = w.update()
         return frameNumChanged or curFrameChanged
 
--- /tmp/test-tmpfs/nilfs-9914/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:54:49.292804923 -0500
+++ /tmp/test-tmpfs/nilfs-9917/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:55:15.709286251 -0500
@@ -157,6 +157,10 @@
       w.printMe()
 
 
+# object identity isn't enough, apparently, for cases like Firefox :/
+def frameEquals(f1, f2):
+
+
 # pyatspi uses the term 'frame' to refer to what we think of as windows
 class Window:
   def __init__(self, frame, parentApp):
--- /tmp/test-tmpfs/nilfs-9917/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:55:15.709286251 -0500
+++ /tmp/test-tmpfs/nilfs-9920/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:55:34.270732217 -0500
@@ -159,6 +159,11 @@
 
 # object identity isn't enough, apparently, for cases like Firefox :/
 def frameEquals(f1, f2):
+  # quick-check for efficiency
+  if f1 == f2:
+    return True
+
+  # resort to value check if necessary
 
 
 # pyatspi uses the term 'frame' to refer to what we think of as windows
--- /tmp/test-tmpfs/nilfs-9920/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:55:34.270732217 -0500
+++ /tmp/test-tmpfs/nilfs-9927/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:55:49.471735246 -0500
@@ -143,7 +143,7 @@
     self.windows = newWindows
 
     for w in self.windows:
-      if frame_equals(cur_atspiFrame, w.atspiFrame):
+      if frameEquals(cur_atspiFrame, w.atspiFrame):
         curFrameChanged = w.update()
         return frameNumChanged or curFrameChanged
 
@@ -164,6 +164,7 @@
     return True
 
   # resort to value check if necessary
+  return False
 
 
 # pyatspi uses the term 'frame' to refer to what we think of as windows
--- /tmp/test-tmpfs/nilfs-9927/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:55:49.471735246 -0500
+++ /tmp/test-tmpfs/nilfs-9931/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:56:35.283771293 -0500
@@ -164,6 +164,10 @@
     return True
 
   # resort to value check if necessary
+  if f1.name == f2.name:
+    # sometimes two windows will have identical titles, so disambiguate
+    # further using their x/y positions:
+
   return False
 
 
--- /tmp/test-tmpfs/nilfs-9931/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:56:35.283771293 -0500
+++ /tmp/test-tmpfs/nilfs-9934/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:56:47.206342030 -0500
@@ -166,7 +166,12 @@
   # resort to value check if necessary
   if f1.name == f2.name:
     # sometimes two windows will have identical titles, so disambiguate
-    # further using their x/y positions:
+    # further using their positions and sizes:
+    comp = frame.queryComponent()
+    self.x, self.y = comp.getPosition(0)
+    self.width, self.height = comp.getSize()
+
+
 
   return False
 
--- /tmp/test-tmpfs/nilfs-9934/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:56:47.206342030 -0500
+++ /tmp/test-tmpfs/nilfs-9942/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:57:15.709096878 -0500
@@ -167,11 +167,9 @@
   if f1.name == f2.name:
     # sometimes two windows will have identical titles, so disambiguate
     # further using their positions and sizes:
-    comp = frame.queryComponent()
-    self.x, self.y = comp.getPosition(0)
-    self.width, self.height = comp.getSize()
-
-
+    f1comp = f1.queryComponent()
+    f1x, f1y = f1comp.getPosition(0)
+    f1width, f1height = f1comp.getSize()
 
   return False
 
--- /tmp/test-tmpfs/nilfs-9942/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:57:15.709096878 -0500
+++ /tmp/test-tmpfs/nilfs-9944/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:58:23.086971672 -0500
@@ -171,6 +171,12 @@
     f1x, f1y = f1comp.getPosition(0)
     f1width, f1height = f1comp.getSize()
 
+    f2comp = f2.queryComponent()
+    f2x, f2y = f2comp.getPosition(0)
+    f2width, f2height = f2comp.getSize()
+
+    return (f1x == f2x) and (f1y == f2y) and (f1width == f2width) and (f1height == f2height)
+
   return False
 
 
--- /tmp/test-tmpfs/nilfs-9944/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:58:23.086971672 -0500
+++ /tmp/test-tmpfs/nilfs-9951/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:58:32.827254477 -0500
@@ -163,7 +163,7 @@
   if f1 == f2:
     return True
 
-  # resort to value check if necessary
+  # resort to slower value check if necessary
   if f1.name == f2.name:
     # sometimes two windows will have identical titles, so disambiguate
     # further using their positions and sizes:
--- /tmp/test-tmpfs/nilfs-9951/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 15:58:32.827254477 -0500
+++ /tmp/test-tmpfs/nilfs-9957/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:00:53.502777365 -0500
@@ -121,6 +121,7 @@
 
   # return True if the number of frames or cur_atspiFrame have changed
   def updateFrame(self, cur_atspiFrame):
+    print 'updateFrame', cur_atspiFrame
     # update self.windows to account for the fact that frames might
     # have been added or deleted to this app since the last update
     newWindows = []
--- /tmp/test-tmpfs/nilfs-9957/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:00:53.502777365 -0500
+++ /tmp/test-tmpfs/nilfs-9963/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:01:37.606582956 -0500
@@ -145,6 +145,7 @@
 
     for w in self.windows:
       if frameEquals(cur_atspiFrame, w.atspiFrame):
+        print cur_atspiFrame, w.atspiFrame
         curFrameChanged = w.update()
         return frameNumChanged or curFrameChanged
 
--- /tmp/test-tmpfs/nilfs-9963/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:01:37.606582956 -0500
+++ /tmp/test-tmpfs/nilfs-9978/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:02:00.268565768 -0500
@@ -144,8 +144,8 @@
     self.windows = newWindows
 
     for w in self.windows:
+      print cur_atspiFrame, w.atspiFrame
       if frameEquals(cur_atspiFrame, w.atspiFrame):
-        print cur_atspiFrame, w.atspiFrame
         curFrameChanged = w.update()
         return frameNumChanged or curFrameChanged
 
--- /tmp/test-tmpfs/nilfs-9978/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:02:00.268565768 -0500
+++ /tmp/test-tmpfs/nilfs-9981/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:02:43.460250190 -0500
@@ -144,7 +144,7 @@
     self.windows = newWindows
 
     for w in self.windows:
-      print cur_atspiFrame, w.atspiFrame
+      print cur_atspiFrame.name, w.atspiFrame.name
       if frameEquals(cur_atspiFrame, w.atspiFrame):
         curFrameChanged = w.update()
         return frameNumChanged or curFrameChanged
--- /tmp/test-tmpfs/nilfs-9981/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:02:43.460250190 -0500
+++ /tmp/test-tmpfs/nilfs-9983/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:03:03.109836019 -0500
@@ -144,7 +144,7 @@
     self.windows = newWindows
 
     for w in self.windows:
-      print cur_atspiFrame.name, w.atspiFrame.name
+      print cur_atspiFrame.name, '|', w.atspiFrame.name
       if frameEquals(cur_atspiFrame, w.atspiFrame):
         curFrameChanged = w.update()
         return frameNumChanged or curFrameChanged
--- /tmp/test-tmpfs/nilfs-9983/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:03:03.109836019 -0500
+++ /tmp/test-tmpfs/nilfs-9987/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:03:07.339392597 -0500
@@ -144,7 +144,6 @@
     self.windows = newWindows
 
     for w in self.windows:
-      print cur_atspiFrame.name, '|', w.atspiFrame.name
       if frameEquals(cur_atspiFrame, w.atspiFrame):
         curFrameChanged = w.update()
         return frameNumChanged or curFrameChanged
--- /tmp/test-tmpfs/nilfs-9987/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:03:07.339392597 -0500
+++ /tmp/test-tmpfs/nilfs-9993/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:03:17.274699985 -0500
@@ -166,6 +166,8 @@
 
   # resort to slower value check if necessary
   if f1.name == f2.name:
+    print f1.name, '|', f2.name
+
     # sometimes two windows will have identical titles, so disambiguate
     # further using their positions and sizes:
     f1comp = f1.queryComponent()
--- /tmp/test-tmpfs/nilfs-9993/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:03:17.274699985 -0500
+++ /tmp/test-tmpfs/nilfs-9999/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:03:59.929312485 -0500
@@ -166,8 +166,6 @@
 
   # resort to slower value check if necessary
   if f1.name == f2.name:
-    print f1.name, '|', f2.name
-
     # sometimes two windows will have identical titles, so disambiguate
     # further using their positions and sizes:
     f1comp = f1.queryComponent()
@@ -178,6 +176,10 @@
     f2x, f2y = f2comp.getPosition(0)
     f2width, f2height = f2comp.getSize()
 
+    print f1.name, '|', f2.name
+    print f1x, f1y, '|', f2x, f2y
+    print f1width, f1height, '|', f2width, f2height
+
     return (f1x == f2x) and (f1y == f2y) and (f1width == f2width) and (f1height == f2height)
 
   return False
--- /tmp/test-tmpfs/nilfs-9999/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:03:59.929312485 -0500
+++ /tmp/test-tmpfs/nilfs-10004/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:04:54.320468298 -0500
@@ -166,21 +166,7 @@
 
   # resort to slower value check if necessary
   if f1.name == f2.name:
-    # sometimes two windows will have identical titles, so disambiguate
-    # further using their positions and sizes:
-    f1comp = f1.queryComponent()
-    f1x, f1y = f1comp.getPosition(0)
-    f1width, f1height = f1comp.getSize()
-
-    f2comp = f2.queryComponent()
-    f2x, f2y = f2comp.getPosition(0)
-    f2width, f2height = f2comp.getSize()
-
-    print f1.name, '|', f2.name
-    print f1x, f1y, '|', f2x, f2y
-    print f1width, f1height, '|', f2width, f2height
-
-    return (f1x == f2x) and (f1y == f2y) and (f1width == f2width) and (f1height == f2height)
+    return True
 
   return False
 
--- /tmp/test-tmpfs/nilfs-10004/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:04:54.320468298 -0500
+++ /tmp/test-tmpfs/nilfs-10008/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:05:39.441403676 -0500
@@ -357,10 +357,10 @@
   print get_ms_since_epoch(), event.type
   desktopAltered = myDesktop.updateAppFrame(event.host_application, event.source)
 
-  #if desktopAltered:
-  #  for i in range(100):
-  #    print
-  #  myDesktop.printMe()
+  if desktopAltered:
+    for i in range(100):
+      print
+    myDesktop.printMe()
 
 
 # the minimal set of required listeners to get what we want ...
--- /tmp/test-tmpfs/nilfs-10008/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:05:39.441403676 -0500
+++ /tmp/test-tmpfs/nilfs-10013/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:05:50.056799957 -0500
@@ -354,7 +354,7 @@
 def frameEventHandler(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
 
-  print get_ms_since_epoch(), event.type
+  #print get_ms_since_epoch(), event.type
   desktopAltered = myDesktop.updateAppFrame(event.host_application, event.source)
 
   if desktopAltered:
--- /tmp/test-tmpfs/nilfs-10013/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:05:50.056799957 -0500
+++ /tmp/test-tmpfs/nilfs-10033/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:06:34.624661684 -0500
@@ -121,7 +121,6 @@
 
   # return True if the number of frames or cur_atspiFrame have changed
   def updateFrame(self, cur_atspiFrame):
-    print 'updateFrame', cur_atspiFrame
     # update self.windows to account for the fact that frames might
     # have been added or deleted to this app since the last update
     newWindows = []
--- /tmp/test-tmpfs/nilfs-10033/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:06:34.624661684 -0500
+++ /tmp/test-tmpfs/nilfs-10037/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:07:58.092637781 -0500
@@ -112,11 +112,15 @@
     self.atspiApp = app
     self.windows = [] # Window instances
 
+    self.updateAllFrames()
+
+  def updateAllFrames(self):
     for child in self.atspiApp:
       # sometimes apps will have non-frame children ...
       if child.getRole() != pyatspi.constants.ROLE_FRAME: continue
       # create a new Window object, which might incur a *slight* delay
       self.windows.append(Window(child, self))
+    return True
 
 
   # return True if the number of frames or cur_atspiFrame have changed
--- /tmp/test-tmpfs/nilfs-10037/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:07:58.092637781 -0500
+++ /tmp/test-tmpfs/nilfs-10041/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:08:09.709165168 -0500
@@ -96,7 +96,8 @@
   # returning True if the desktop has been modified
   def updateAppFrame(self, atspiApp, atspiFrame):
     appNumChanged = self.__updateAppsDict() # check for added/deleted apps
-    frameChanged = self.appsDict[atspiApp.name].updateFrame(atspiFrame)
+    #frameChanged = self.appsDict[atspiApp.name].updateFrame(atspiFrame)
+    frameChanged = self.appsDict[atspiApp.name].updateAllFrames()
     return appNumChanged or frameChanged
 
 
--- /tmp/test-tmpfs/nilfs-10041/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:08:09.709165168 -0500
+++ /tmp/test-tmpfs/nilfs-10070/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:08:25.748273976 -0500
@@ -116,6 +116,8 @@
     self.updateAllFrames()
 
   def updateAllFrames(self):
+    self.windows = [] # clear first!
+
     for child in self.atspiApp:
       # sometimes apps will have non-frame children ...
       if child.getRole() != pyatspi.constants.ROLE_FRAME: continue
--- /tmp/test-tmpfs/nilfs-10070/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:08:25.748273976 -0500
+++ /tmp/test-tmpfs/nilfs-10073/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:10:27.768314136 -0500
@@ -93,12 +93,9 @@
 
 
   # do an incremental update for efficiency,
-  # returning True if the desktop has been modified
   def updateAppFrame(self, atspiApp, atspiFrame):
-    appNumChanged = self.__updateAppsDict() # check for added/deleted apps
-    #frameChanged = self.appsDict[atspiApp.name].updateFrame(atspiFrame)
-    frameChanged = self.appsDict[atspiApp.name].updateAllFrames()
-    return appNumChanged or frameChanged
+    self.__updateAppsDict() # check for added/deleted apps
+    self.appsDict[atspiApp.name].updateAllFrames()
 
 
   def printMe(self):
@@ -112,9 +109,10 @@
     self.name = app.name
     self.atspiApp = app
     self.windows = [] # Window instances
-
     self.updateAllFrames()
 
+  # do the super-simple thing and just create NEW Window objects for all
+  # frames in this app ...
   def updateAllFrames(self):
     self.windows = [] # clear first!
 
@@ -123,7 +121,6 @@
       if child.getRole() != pyatspi.constants.ROLE_FRAME: continue
       # create a new Window object, which might incur a *slight* delay
       self.windows.append(Window(child, self))
-    return True
 
 
   # return True if the number of frames or cur_atspiFrame have changed
--- /tmp/test-tmpfs/nilfs-10073/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:10:27.768314136 -0500
+++ /tmp/test-tmpfs/nilfs-10076/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:10:32.993000834 -0500
@@ -92,7 +92,7 @@
     return appNumChanged
 
 
-  # do an incremental update for efficiency,
+  # do an incremental update for efficiency
   def updateAppFrame(self, atspiApp, atspiFrame):
     self.__updateAppsDict() # check for added/deleted apps
     self.appsDict[atspiApp.name].updateAllFrames()
--- /tmp/test-tmpfs/nilfs-10076/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:10:32.993000834 -0500
+++ /tmp/test-tmpfs/nilfs-10080/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:10:48.691064028 -0500
@@ -358,12 +358,11 @@
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
 
   #print get_ms_since_epoch(), event.type
-  desktopAltered = myDesktop.updateAppFrame(event.host_application, event.source)
+  myDesktop.updateAppFrame(event.host_application, event.source)
 
-  if desktopAltered:
-    for i in range(100):
-      print
-    myDesktop.printMe()
+  for i in range(100):
+    print
+  myDesktop.printMe()
 
 
 # the minimal set of required listeners to get what we want ...
--- /tmp/test-tmpfs/nilfs-10080/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:10:48.691064028 -0500
+++ /tmp/test-tmpfs/nilfs-10082/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:11:08.176624896 -0500
@@ -93,7 +93,7 @@
 
 
   # do an incremental update for efficiency
-  def updateAppFrame(self, atspiApp, atspiFrame):
+  def updateApp(self, atspiApp):
     self.__updateAppsDict() # check for added/deleted apps
     self.appsDict[atspiApp.name].updateAllFrames()
 
@@ -358,7 +358,7 @@
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
 
   #print get_ms_since_epoch(), event.type
-  myDesktop.updateAppFrame(event.host_application, event.source)
+  myDesktop.updateApp(event.host_application)
 
   for i in range(100):
     print
--- /tmp/test-tmpfs/nilfs-10247/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:11:10.039869764 -0500
+++ /tmp/test-tmpfs/nilfs-10250/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:32:19.071071489 -0500
@@ -13,14 +13,11 @@
 import gobject # requires the gtk package of some sort
 
 
-'''
-Let's not support Firefox for now since it seems to have some quirks.  e.g.,:
-
-  When a window is minimized, its state set usually contains:
-    pyatspi.constants.STATE_ICONIFIED
-
-  ... except that it doesn't work for Firefox for some reason!!!
-'''
+# Let's not support Firefox for now since it seems to have some quirks.
+#
+# e.g., when a window is minimized, its state set usually contains:
+#      pyatspi.constants.STATE_ICONIFIED
+# except that it doesn't work for Firefox for some reason!!!
 
 # SUPER hacky way of getting the current URL text string from
 # Google Chrome and Firefox ... there MUST be a better way :)
--- /tmp/test-tmpfs/nilfs-10250/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:32:19.071071489 -0500
+++ /tmp/test-tmpfs/nilfs-10283/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:32:23.660685260 -0500
@@ -8,7 +8,6 @@
 #          then log out and log back in.
 
 
-import time
 import pyatspi
 import gobject # requires the gtk package of some sort
 
--- /tmp/test-tmpfs/nilfs-10283/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:32:23.660685260 -0500
+++ /tmp/test-tmpfs/nilfs-10291/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:33:05.533284377 -0500
@@ -11,6 +11,8 @@
 import pyatspi
 import gobject # requires the gtk package of some sort
 
+import json
+
 
 # Let's not support Firefox for now since it seems to have some quirks.
 #
--- /tmp/test-tmpfs/nilfs-10291/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:33:05.533284377 -0500
+++ /tmp/test-tmpfs/nilfs-10295/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:34:32.831954677 -0500
@@ -102,6 +102,13 @@
       self.appsDict[appName].printMe()
 
 
+  
+  # serialize the current state to a dict, which can later be converted
+  # to JSON
+  def serializeToDict(self):
+    
+
+
 class Application:
   def __init__(self, app):
     self.name = app.name
--- /tmp/test-tmpfs/nilfs-10295/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:34:32.831954677 -0500
+++ /tmp/test-tmpfs/nilfs-10300/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:37:37.327605063 -0500
@@ -103,10 +103,16 @@
 
 
   
-  # serialize the current state to a dict, which can later be converted
-  # to JSON
-  def serializeToDict(self):
+  # serialize the current state to a list of dicts, which can later be
+  # converted to JSON
+
+  def serialize(self):
+    out = []
     
+    # order alphabetically
+    for appName in sorted(self.appsDict.keys()):
+      out.append(self.appsDict[appName].serialize())
+ 
 
 
 class Application:
--- /tmp/test-tmpfs/nilfs-10300/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:37:37.327605063 -0500
+++ /tmp/test-tmpfs/nilfs-10303/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:38:13.709463930 -0500
@@ -105,14 +105,14 @@
   
   # serialize the current state to a list of dicts, which can later be
   # converted to JSON
-
   def serialize(self):
     out = []
     
     # order alphabetically
     for appName in sorted(self.appsDict.keys()):
       out.append(self.appsDict[appName].serialize())
- 
+
+    return out
 
 
 class Application:
--- /tmp/test-tmpfs/nilfs-10303/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:38:13.709463930 -0500
+++ /tmp/test-tmpfs/nilfs-10305/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:38:20.900424215 -0500
@@ -103,8 +103,9 @@
 
 
   
-  # serialize the current state to a list of dicts, which can later be
+  # serialize the current state to a list, which can later be
   # converted to JSON
+
   def serialize(self):
     out = []
     
--- /tmp/test-tmpfs/nilfs-10305/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:38:20.900424215 -0500
+++ /tmp/test-tmpfs/nilfs-10309/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:38:23.347751024 -0500
@@ -101,7 +101,6 @@
     for appName in sorted(self.appsDict.keys()):
       self.appsDict[appName].printMe()
 
-
   
   # serialize the current state to a list, which can later be
   # converted to JSON
--- /tmp/test-tmpfs/nilfs-10309/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:38:23.347751024 -0500
+++ /tmp/test-tmpfs/nilfs-10315/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:38:34.421229719 -0500
@@ -171,6 +171,8 @@
     for w in self.windows:
       w.printMe()
 
+  def serialize:
+
 
 # object identity isn't enough, apparently, for cases like Firefox :/
 def frameEquals(f1, f2):
--- /tmp/test-tmpfs/nilfs-10315/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:38:34.421229719 -0500
+++ /tmp/test-tmpfs/nilfs-10319/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:40:26.412139686 -0500
@@ -171,7 +171,8 @@
     for w in self.windows:
       w.printMe()
 
-  def serialize:
+  def serialize(self):
+    return [w.serialize() for w in self.windows]
 
 
 # object identity isn't enough, apparently, for cases like Firefox :/
@@ -304,6 +305,24 @@
     if self.browserURL:
       print '   ', self.browserURL
 
+  def serialize(self):
+    out = {}
+
+    out['title'] = self.title
+    out['x'] = self.x
+    out['y'] = self.y
+    out['width'] = self.width
+    out['height'] = self.height
+
+    myStates = frame.getState().getStates()
+    self.is_active = pyatspi.constants.STATE_ACTIVE in myStates
+    self.is_minimized = pyatspi.constants.STATE_ICONIFIED in myStates
+
+    # special field for Firefox and Google Chrome
+    self.browserURL = self.getURL()
+
+ 
+
 
 reg = pyatspi.Registry()    # get the Registry singleton
 atspiDesktop = reg.getDesktop(0) # get desktop
--- /tmp/test-tmpfs/nilfs-10319/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:40:26.412139686 -0500
+++ /tmp/test-tmpfs/nilfs-10321/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:41:07.735626618 -0500
@@ -313,15 +313,13 @@
     out['y'] = self.y
     out['width'] = self.width
     out['height'] = self.height
+    out['is_active'] = self.is_active
+    out['is_minimized'] = self.is_minimized
+    if self.browserURL is not None:
+      out['browserURL'] = self.browserURL
 
-    myStates = frame.getState().getStates()
-    self.is_active = pyatspi.constants.STATE_ACTIVE in myStates
-    self.is_minimized = pyatspi.constants.STATE_ICONIFIED in myStates
+    return out
 
-    # special field for Firefox and Google Chrome
-    self.browserURL = self.getURL()
-
- 
 
 
 reg = pyatspi.Registry()    # get the Registry singleton
--- /tmp/test-tmpfs/nilfs-10321/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:41:07.735626618 -0500
+++ /tmp/test-tmpfs/nilfs-10325/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:41:08.968790349 -0500
@@ -321,7 +321,6 @@
     return out
 
 
-
 reg = pyatspi.Registry()    # get the Registry singleton
 atspiDesktop = reg.getDesktop(0) # get desktop
 
--- /tmp/test-tmpfs/nilfs-10325/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:41:08.968790349 -0500
+++ /tmp/test-tmpfs/nilfs-10328/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:41:29.818558567 -0500
@@ -248,42 +248,34 @@
     new_browserURL = self.getURL()
 
     if self.title != new_title:
-      #print '  TITLE CHANGED:', new_title
       self.title = new_title
       modified = True
 
     if self.x != new_x:
-      #print '  x CHANGED:', new_x
       self.x = new_x
       modified = True
 
     if self.y != new_y:
-      #print '  y CHANGED:', new_y
       self.y = new_y
       modified = True
 
     if self.width != new_width:
-      #print '  width CHANGED:', new_width
       self.width = new_width
       modified = True
 
     if self.height != new_height:
-      #print '  height CHANGED:', new_height
       self.height = new_height
       modified = True
 
     if self.is_active != new_is_active:
-      #print '  is_active CHANGED:', new_is_active
       self.is_active = new_is_active
       modified = True
 
     if self.is_minimized != new_is_minimized:
-      #print '  is_minimized CHANGED:', new_is_minimized
       self.is_minimized = new_is_minimized
       modified = True
 
     if self.browserURL != new_browserURL:
-      #print '  URL CHANGED:', new_browserURL
       self.browserURL = new_browserURL
       modified = True
 
--- /tmp/test-tmpfs/nilfs-10328/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:41:29.818558567 -0500
+++ /tmp/test-tmpfs/nilfs-10332/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:41:36.417434668 -0500
@@ -297,6 +297,7 @@
     if self.browserURL:
       print '   ', self.browserURL
 
+
   def serialize(self):
     out = {}
 
--- /tmp/test-tmpfs/nilfs-10332/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:41:36.417434668 -0500
+++ /tmp/test-tmpfs/nilfs-10335/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:42:06.960489546 -0500
@@ -172,7 +172,7 @@
       w.printMe()
 
   def serialize(self):
-    return [w.serialize() for w in self.windows]
+    return dict(name=self.name, windows=[w.serialize() for w in self.windows])
 
 
 # object identity isn't enough, apparently, for cases like Firefox :/
--- /tmp/test-tmpfs/nilfs-10335/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:42:06.960489546 -0500
+++ /tmp/test-tmpfs/nilfs-10339/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:42:18.377005121 -0500
@@ -102,9 +102,8 @@
       self.appsDict[appName].printMe()
 
   
-  # serialize the current state to a list, which can later be
+  # serialize the current state to a list of dicts, which can later be
   # converted to JSON
-
   def serialize(self):
     out = []
     
--- /tmp/test-tmpfs/nilfs-10339/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:42:18.377005121 -0500
+++ /tmp/test-tmpfs/nilfs-10395/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:42:45.031543428 -0500
@@ -384,6 +384,7 @@
   for i in range(100):
     print
   myDesktop.printMe()
+  print myDesktop.serialize()
 
 
 # the minimal set of required listeners to get what we want ...
--- /tmp/test-tmpfs/nilfs-10395/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:42:45.031543428 -0500
+++ /tmp/test-tmpfs/nilfs-10398/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:44:36.461333006 -0500
@@ -384,7 +384,8 @@
   for i in range(100):
     print
   myDesktop.printMe()
-  print myDesktop.serialize()
+
+  serialized = myDesktop.serialize()
 
 
 # the minimal set of required listeners to get what we want ...
--- /tmp/test-tmpfs/nilfs-10398/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:44:36.461333006 -0500
+++ /tmp/test-tmpfs/nilfs-10404/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:44:47.731828675 -0500
@@ -385,7 +385,7 @@
     print
   myDesktop.printMe()
 
-  serialized = myDesktop.serialize()
+  serializedState = myDesktop.serialize()
 
 
 # the minimal set of required listeners to get what we want ...
--- /tmp/test-tmpfs/nilfs-10404/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:44:47.731828675 -0500
+++ /tmp/test-tmpfs/nilfs-10406/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:45:34.861082632 -0500
@@ -381,12 +381,14 @@
   #print get_ms_since_epoch(), event.type
   myDesktop.updateApp(event.host_application)
 
-  for i in range(100):
-    print
-  myDesktop.printMe()
+  #for i in range(100):
+  #  print
+  #myDesktop.printMe()
 
   serializedState = myDesktop.serialize()
 
+  print get_ms_since_epoch(), serializedState
+
 
 # the minimal set of required listeners to get what we want ...
 #
--- /tmp/test-tmpfs/nilfs-10406/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:45:34.861082632 -0500
+++ /tmp/test-tmpfs/nilfs-10409/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:45:38.539570731 -0500
@@ -381,8 +381,7 @@
   #print get_ms_since_epoch(), event.type
   myDesktop.updateApp(event.host_application)
 
-  #for i in range(100):
-  #  print
+  #for i in range(100): print
   #myDesktop.printMe()
 
   serializedState = myDesktop.serialize()
--- /tmp/test-tmpfs/nilfs-10409/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:45:38.539570731 -0500
+++ /tmp/test-tmpfs/nilfs-10412/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:45:47.771795741 -0500
@@ -381,7 +381,7 @@
   #print get_ms_since_epoch(), event.type
   myDesktop.updateApp(event.host_application)
 
-  #for i in range(100): print
+  #for i in range(100): print # clear screen
   #myDesktop.printMe()
 
   serializedState = myDesktop.serialize()
--- /tmp/test-tmpfs/nilfs-10412/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:45:47.771795741 -0500
+++ /tmp/test-tmpfs/nilfs-10419/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:46:00.348464479 -0500
@@ -8,6 +8,7 @@
 #          then log out and log back in.
 
 
+import time
 import pyatspi
 import gobject # requires the gtk package of some sort
 
--- /tmp/test-tmpfs/nilfs-10419/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:46:00.348464479 -0500
+++ /tmp/test-tmpfs/nilfs-10460/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:48:16.304500863 -0500
@@ -387,7 +387,7 @@
 
   serializedState = myDesktop.serialize()
 
-  print get_ms_since_epoch(), serializedState
+  print get_ms_since_epoch(), json.dumps(serializedState)
 
 
 # the minimal set of required listeners to get what we want ...
--- /tmp/test-tmpfs/nilfs-10460/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:48:16.304500863 -0500
+++ /tmp/test-tmpfs/nilfs-10542/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:51:20.266897512 -0500
@@ -387,7 +387,10 @@
 
   serializedState = myDesktop.serialize()
 
-  print get_ms_since_epoch(), json.dumps(serializedState)
+  # use the most compact possible separators
+  compactJSON = json.dumps(serializedState, separators=(',',':'))
+  
+  print get_ms_since_epoch(), compactJSON
 
 
 # the minimal set of required listeners to get what we want ...
--- /tmp/test-tmpfs/nilfs-10542/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 16:51:20.266897512 -0500
+++ /tmp/test-tmpfs/nilfs-10656/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:02:36.613310330 -0500
@@ -389,7 +389,10 @@
 
   # use the most compact possible separators
   compactJSON = json.dumps(serializedState, separators=(',',':'))
-  
+
+
+  # TODO: ignore entries that occur within 1/10 sec of one another,
+  # since they're probably not meaningful changes anyways ...
   print get_ms_since_epoch(), compactJSON
 
 
--- /tmp/test-tmpfs/nilfs-10656/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:02:36.613310330 -0500
+++ /tmp/test-tmpfs/nilfs-10659/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:12:43.719309361 -0500
@@ -376,6 +376,10 @@
   return milliseconds_since_epoch
 
 
+prevSerializedState = None
+
+import sys
+
 def frameEventHandler(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
 
@@ -387,6 +391,9 @@
 
   serializedState = myDesktop.serialize()
 
+  if serializedState == prevSerializedState:
+    print >> sys.stderr, 'IGNORE!!!'
+
   # use the most compact possible separators
   compactJSON = json.dumps(serializedState, separators=(',',':'))
 
--- /tmp/test-tmpfs/nilfs-10659/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:12:43.719309361 -0500
+++ /tmp/test-tmpfs/nilfs-10663/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:12:55.157816374 -0500
@@ -393,6 +393,7 @@
 
   if serializedState == prevSerializedState:
     print >> sys.stderr, 'IGNORE!!!'
+  prevSerializedState = serializedState
 
   # use the most compact possible separators
   compactJSON = json.dumps(serializedState, separators=(',',':'))
--- /tmp/test-tmpfs/nilfs-10663/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:12:55.157816374 -0500
+++ /tmp/test-tmpfs/nilfs-10671/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:13:10.790876003 -0500
@@ -389,6 +389,7 @@
   #for i in range(100): print # clear screen
   #myDesktop.printMe()
 
+  global prevSerializedState
   serializedState = myDesktop.serialize()
 
   if serializedState == prevSerializedState:
--- /tmp/test-tmpfs/nilfs-10671/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:13:10.790876003 -0500
+++ /tmp/test-tmpfs/nilfs-10674/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:14:30.533381689 -0500
@@ -392,6 +392,7 @@
   global prevSerializedState
   serializedState = myDesktop.serialize()
 
+  # optimization
   if serializedState == prevSerializedState:
     print >> sys.stderr, 'IGNORE!!!'
   prevSerializedState = serializedState
--- /tmp/test-tmpfs/nilfs-10674/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:14:30.533381689 -0500
+++ /tmp/test-tmpfs/nilfs-10678/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:14:41.758860554 -0500
@@ -395,15 +395,15 @@
   # optimization
   if serializedState == prevSerializedState:
     print >> sys.stderr, 'IGNORE!!!'
-  prevSerializedState = serializedState
 
-  # use the most compact possible separators
-  compactJSON = json.dumps(serializedState, separators=(',',':'))
-
-
-  # TODO: ignore entries that occur within 1/10 sec of one another,
-  # since they're probably not meaningful changes anyways ...
-  print get_ms_since_epoch(), compactJSON
+  else:
+    prevSerializedState = serializedState
+    # use the most compact possible separators
+    compactJSON = json.dumps(serializedState, separators=(',',':'))
+
+    # TODO: ignore entries that occur within 1/10 sec of one another,
+    # since they're probably not meaningful changes anyways ...
+    print get_ms_since_epoch(), compactJSON
 
 
 # the minimal set of required listeners to get what we want ...
--- /tmp/test-tmpfs/nilfs-10678/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:14:41.758860554 -0500
+++ /tmp/test-tmpfs/nilfs-10684/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:15:08.371366505 -0500
@@ -392,7 +392,7 @@
   global prevSerializedState
   serializedState = myDesktop.serialize()
 
-  # optimization
+  # optimization: ignore outputting identical consecutive entries
   if serializedState == prevSerializedState:
     print >> sys.stderr, 'IGNORE!!!'
 
--- /tmp/test-tmpfs/nilfs-10684/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:15:08.371366505 -0500
+++ /tmp/test-tmpfs/nilfs-10687/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:15:40.321575594 -0500
@@ -389,13 +389,13 @@
   #for i in range(100): print # clear screen
   #myDesktop.printMe()
 
-  global prevSerializedState
   serializedState = myDesktop.serialize()
 
+
   # optimization: ignore outputting identical consecutive entries
+  global prevSerializedState
   if serializedState == prevSerializedState:
-    print >> sys.stderr, 'IGNORE!!!'
-
+    pass
   else:
     prevSerializedState = serializedState
     # use the most compact possible separators
--- /tmp/test-tmpfs/nilfs-10687/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:15:40.321575594 -0500
+++ /tmp/test-tmpfs/nilfs-10692/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:15:48.420642546 -0500
@@ -400,9 +400,6 @@
     prevSerializedState = serializedState
     # use the most compact possible separators
     compactJSON = json.dumps(serializedState, separators=(',',':'))
-
-    # TODO: ignore entries that occur within 1/10 sec of one another,
-    # since they're probably not meaningful changes anyways ...
     print get_ms_since_epoch(), compactJSON
 
 
--- /tmp/test-tmpfs/nilfs-10692/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:15:48.420642546 -0500
+++ /tmp/test-tmpfs/nilfs-10699/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:16:15.859251339 -0500
@@ -391,7 +391,6 @@
 
   serializedState = myDesktop.serialize()
 
-
   # optimization: ignore outputting identical consecutive entries
   global prevSerializedState
   if serializedState == prevSerializedState:
--- /tmp/test-tmpfs/nilfs-10699/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:16:15.859251339 -0500
+++ /tmp/test-tmpfs/nilfs-10702/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:18:00.858014419 -0500
@@ -389,6 +389,8 @@
   #for i in range(100): print # clear screen
   #myDesktop.printMe()
 
+  printDesktopLog()
+
   serializedState = myDesktop.serialize()
 
   # optimization: ignore outputting identical consecutive entries
--- /tmp/test-tmpfs/nilfs-10702/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:18:00.858014419 -0500
+++ /tmp/test-tmpfs/nilfs-10705/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:18:07.920940256 -0500
@@ -391,18 +391,6 @@
 
   printDesktopLog()
 
-  serializedState = myDesktop.serialize()
-
-  # optimization: ignore outputting identical consecutive entries
-  global prevSerializedState
-  if serializedState == prevSerializedState:
-    pass
-  else:
-    prevSerializedState = serializedState
-    # use the most compact possible separators
-    compactJSON = json.dumps(serializedState, separators=(',',':'))
-    print get_ms_since_epoch(), compactJSON
-
 
 # the minimal set of required listeners to get what we want ...
 #
--- /tmp/test-tmpfs/nilfs-10705/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:18:07.920940256 -0500
+++ /tmp/test-tmpfs/nilfs-10708/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:18:30.279871179 -0500
@@ -378,7 +378,19 @@
 
 prevSerializedState = None
 
-import sys
+def printDesktopState():
+  serializedState = myDesktop.serialize()
+
+  # optimization: ignore outputting identical consecutive entries
+  global prevSerializedState
+  if serializedState == prevSerializedState:
+    pass
+  else:
+    prevSerializedState = serializedState
+    # use the most compact possible separators
+    compactJSON = json.dumps(serializedState, separators=(',',':'))
+    print get_ms_since_epoch(), compactJSON
+
 
 def frameEventHandler(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
@@ -389,7 +401,7 @@
   #for i in range(100): print # clear screen
   #myDesktop.printMe()
 
-  printDesktopLog()
+  printDesktopState()
 
 
 # the minimal set of required listeners to get what we want ...
--- /tmp/test-tmpfs/nilfs-10708/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:18:30.279871179 -0500
+++ /tmp/test-tmpfs/nilfs-10714/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:18:36.232651509 -0500
@@ -377,7 +377,6 @@
 
 
 prevSerializedState = None
-
 def printDesktopState():
   serializedState = myDesktop.serialize()
 
--- /tmp/test-tmpfs/nilfs-10714/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:18:36.232651509 -0500
+++ /tmp/test-tmpfs/nilfs-10724/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:19:12.758439619 -0500
@@ -324,7 +324,6 @@
 
 myDesktop = Desktop(atspiDesktop) # singleton
 
-
 '''
 Notes about window events:
 
@@ -419,6 +418,11 @@
 reg.registerEventListener(frameEventHandler, 'window:restore')
 
 
+
+# print initial state
+printDesktopState()
+
+
 # This idiom of gobject.timeout_add, pumpQueuedEvents, and async=True
 # was taken from the Accerciser project
 
--- /tmp/test-tmpfs/nilfs-10724/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:19:12.758439619 -0500
+++ /tmp/test-tmpfs/nilfs-10728/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:20:49.989186041 -0500
@@ -376,18 +376,23 @@
 
 
 prevSerializedState = None
+prevPrintTime = None
+
 def printDesktopState():
   serializedState = myDesktop.serialize()
 
   # optimization: ignore outputting identical consecutive entries
   global prevSerializedState
+  global prevPrintTime
   if serializedState == prevSerializedState:
     pass
   else:
     prevSerializedState = serializedState
     # use the most compact possible separators
     compactJSON = json.dumps(serializedState, separators=(',',':'))
-    print get_ms_since_epoch(), compactJSON
+
+    curPrintTime = get_ms_since_epoch()
+    print curPrintTime, compactJSON
 
 
 def frameEventHandler(event):
--- /tmp/test-tmpfs/nilfs-10728/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:20:49.989186041 -0500
+++ /tmp/test-tmpfs/nilfs-10739/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:21:15.811571359 -0500
@@ -376,7 +376,7 @@
 
 
 prevSerializedState = None
-prevPrintTime = None
+prevPrintTime = 0
 
 def printDesktopState():
   serializedState = myDesktop.serialize()
@@ -392,8 +392,10 @@
     compactJSON = json.dumps(serializedState, separators=(',',':'))
 
     curPrintTime = get_ms_since_epoch()
-    print curPrintTime, compactJSON
+    print (curPrintTime - prevPrintTime), ':', curPrintTime, compactJSON
 
+    prevPrintTime = curPrintTime
+ 
 
 def frameEventHandler(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
--- /tmp/test-tmpfs/nilfs-10739/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:21:15.811571359 -0500
+++ /tmp/test-tmpfs/nilfs-10763/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:21:58.123118537 -0500
@@ -392,7 +392,8 @@
     compactJSON = json.dumps(serializedState, separators=(',',':'))
 
     curPrintTime = get_ms_since_epoch()
-    print (curPrintTime - prevPrintTime), ':', curPrintTime, compactJSON
+    #print (curPrintTime - prevPrintTime), ':', curPrintTime, compactJSON
+    print (curPrintTime - prevPrintTime)
 
     prevPrintTime = curPrintTime
  
--- /tmp/test-tmpfs/nilfs-10763/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:21:58.123118537 -0500
+++ /tmp/test-tmpfs/nilfs-10768/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:25:01.775197715 -0500
@@ -392,8 +392,8 @@
     compactJSON = json.dumps(serializedState, separators=(',',':'))
 
     curPrintTime = get_ms_since_epoch()
-    #print (curPrintTime - prevPrintTime), ':', curPrintTime, compactJSON
-    print (curPrintTime - prevPrintTime)
+    print (curPrintTime - prevPrintTime), ':', curPrintTime, compactJSON
+    #print (curPrintTime - prevPrintTime)
 
     prevPrintTime = curPrintTime
  
--- /tmp/test-tmpfs/nilfs-10768/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:25:01.775197715 -0500
+++ /tmp/test-tmpfs/nilfs-10774/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:25:23.342025595 -0500
@@ -392,8 +392,8 @@
     compactJSON = json.dumps(serializedState, separators=(',',':'))
 
     curPrintTime = get_ms_since_epoch()
-    print (curPrintTime - prevPrintTime), ':', curPrintTime, compactJSON
-    #print (curPrintTime - prevPrintTime)
+    #print (curPrintTime - prevPrintTime), ':', curPrintTime, compactJSON
+    print (curPrintTime - prevPrintTime)
 
     prevPrintTime = curPrintTime
  
--- /tmp/test-tmpfs/nilfs-10774/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:25:23.342025595 -0500
+++ /tmp/test-tmpfs/nilfs-10801/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:25:53.491978976 -0500
@@ -407,6 +407,7 @@
   #for i in range(100): print # clear screen
   #myDesktop.printMe()
 
+  print event
   printDesktopState()
 
 
--- /tmp/test-tmpfs/nilfs-10816/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:26:56.850287013 -0500
+++ /tmp/test-tmpfs/nilfs-10820/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:33:58.313560722 -0500
@@ -375,8 +375,10 @@
   return milliseconds_since_epoch
 
 
+# as an optimization, coalesce entries that occur within N milliseconds
+# of one another, in order to make the output stream a bit cleaner
 prevSerializedState = None
-prevPrintTime = 0
+prevSerializedTime = 0
 
 def printDesktopState():
   serializedState = myDesktop.serialize()
@@ -391,11 +393,11 @@
     # use the most compact possible separators
     compactJSON = json.dumps(serializedState, separators=(',',':'))
 
-    curPrintTime = get_ms_since_epoch()
+    curSerializedTime = get_ms_since_epoch()
     #print (curPrintTime - prevPrintTime), ':', curPrintTime, compactJSON
     print (curPrintTime - prevPrintTime)
 
-    prevPrintTime = curPrintTime
+    prevSerializedTime = curSerializedTime
  
 
 def frameEventHandler(event):
--- /tmp/test-tmpfs/nilfs-10820/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:33:58.313560722 -0500
+++ /tmp/test-tmpfs/nilfs-10825/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:35:38.646721118 -0500
@@ -397,6 +397,8 @@
     #print (curPrintTime - prevPrintTime), ':', curPrintTime, compactJSON
     print (curPrintTime - prevPrintTime)
 
+    timeDelta = curSerializedTime - prevSerializedTime
+
     prevSerializedTime = curSerializedTime
  
 
--- /tmp/test-tmpfs/nilfs-10825/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:35:38.646721118 -0500
+++ /tmp/test-tmpfs/nilfs-10828/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:36:52.173365849 -0500
@@ -380,6 +380,8 @@
 prevSerializedState = None
 prevSerializedTime = 0
 
+COALESCE_WINDOW_MS = 100
+
 def printDesktopState():
   serializedState = myDesktop.serialize()
 
@@ -399,6 +401,9 @@
 
     timeDelta = curSerializedTime - prevSerializedTime
 
+    if timeDelta > COALESCE_WINDOW_MS:
+      print '[', timeDelta, ']', curSerializedTime, compactJSON
+
     prevSerializedTime = curSerializedTime
  
 
--- /tmp/test-tmpfs/nilfs-10828/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:36:52.173365849 -0500
+++ /tmp/test-tmpfs/nilfs-10832/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:37:00.780494899 -0500
@@ -396,8 +396,6 @@
     compactJSON = json.dumps(serializedState, separators=(',',':'))
 
     curSerializedTime = get_ms_since_epoch()
-    #print (curPrintTime - prevPrintTime), ':', curPrintTime, compactJSON
-    print (curPrintTime - prevPrintTime)
 
     timeDelta = curSerializedTime - prevSerializedTime
 
--- /tmp/test-tmpfs/nilfs-10832/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:37:00.780494899 -0500
+++ /tmp/test-tmpfs/nilfs-10835/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:37:30.012329455 -0500
@@ -391,17 +391,16 @@
   if serializedState == prevSerializedState:
     pass
   else:
-    prevSerializedState = serializedState
-    # use the most compact possible separators
-    compactJSON = json.dumps(serializedState, separators=(',',':'))
-
     curSerializedTime = get_ms_since_epoch()
 
     timeDelta = curSerializedTime - prevSerializedTime
 
     if timeDelta > COALESCE_WINDOW_MS:
+      # use the most compact possible separators
+      compactJSON = json.dumps(serializedState, separators=(',',':'))
       print '[', timeDelta, ']', curSerializedTime, compactJSON
 
+    prevSerializedState = serializedState
     prevSerializedTime = curSerializedTime
  
 
--- /tmp/test-tmpfs/nilfs-10835/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:37:30.012329455 -0500
+++ /tmp/test-tmpfs/nilfs-10837/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:37:39.461568998 -0500
@@ -388,9 +388,7 @@
   # optimization: ignore outputting identical consecutive entries
   global prevSerializedState
   global prevPrintTime
-  if serializedState == prevSerializedState:
-    pass
-  else:
+  if serializedState != prevSerializedState:
     curSerializedTime = get_ms_since_epoch()
 
     timeDelta = curSerializedTime - prevSerializedTime
--- /tmp/test-tmpfs/nilfs-10840/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:37:42.374951174 -0500
+++ /tmp/test-tmpfs/nilfs-10844/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:37:55.949731911 -0500
@@ -375,8 +375,6 @@
   return milliseconds_since_epoch
 
 
-# as an optimization, coalesce entries that occur within N milliseconds
-# of one another, in order to make the output stream a bit cleaner
 prevSerializedState = None
 prevSerializedTime = 0
 
@@ -391,6 +389,8 @@
   if serializedState != prevSerializedState:
     curSerializedTime = get_ms_since_epoch()
 
+    # optimization: coalesce entries that occur within N milliseconds
+    # of one another, in order to make the output stream a bit cleaner
     timeDelta = curSerializedTime - prevSerializedTime
 
     if timeDelta > COALESCE_WINDOW_MS:
--- /tmp/test-tmpfs/nilfs-10844/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:37:55.949731911 -0500
+++ /tmp/test-tmpfs/nilfs-10850/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:38:37.301156466 -0500
@@ -381,12 +381,12 @@
 COALESCE_WINDOW_MS = 100
 
 def printDesktopState():
-  serializedState = myDesktop.serialize()
+  curSerializedState = myDesktop.serialize()
 
   # optimization: ignore outputting identical consecutive entries
   global prevSerializedState
   global prevPrintTime
-  if serializedState != prevSerializedState:
+  if curSerializedState != prevSerializedState:
     curSerializedTime = get_ms_since_epoch()
 
     # optimization: coalesce entries that occur within N milliseconds
@@ -394,11 +394,13 @@
     timeDelta = curSerializedTime - prevSerializedTime
 
     if timeDelta > COALESCE_WINDOW_MS:
+      # print prevSerializedState, NOT curSerializedState
+
       # use the most compact possible separators
-      compactJSON = json.dumps(serializedState, separators=(',',':'))
+      compactJSON = json.dumps(curSerializedState, separators=(',',':'))
       print '[', timeDelta, ']', curSerializedTime, compactJSON
 
-    prevSerializedState = serializedState
+    prevSerializedState = curSerializedState
     prevSerializedTime = curSerializedTime
  
 
--- /tmp/test-tmpfs/nilfs-10850/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:38:37.301156466 -0500
+++ /tmp/test-tmpfs/nilfs-10854/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:39:16.426289080 -0500
@@ -397,8 +397,8 @@
       # print prevSerializedState, NOT curSerializedState
 
       # use the most compact possible separators
-      compactJSON = json.dumps(curSerializedState, separators=(',',':'))
-      print '[', timeDelta, ']', curSerializedTime, compactJSON
+      compactJSON = json.dumps(prevSerializedState, separators=(',',':'))
+      print '[', timeDelta, ']', prevSerializedTime, compactJSON
 
     prevSerializedState = curSerializedState
     prevSerializedTime = curSerializedTime
--- /tmp/test-tmpfs/nilfs-10854/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:39:16.426289080 -0500
+++ /tmp/test-tmpfs/nilfs-10856/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:40:16.140122817 -0500
@@ -452,6 +452,5 @@
    pyatspi.Registry.start(async=True, gil=False)
 except KeyboardInterrupt:
    pass
-
-
-pyatspi.Registry.stop()
+finally:
+  pyatspi.Registry.stop()
--- /tmp/test-tmpfs/nilfs-10856/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:40:16.140122817 -0500
+++ /tmp/test-tmpfs/nilfs-10858/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:40:19.792601988 -0500
@@ -452,5 +452,6 @@
    pyatspi.Registry.start(async=True, gil=False)
 except KeyboardInterrupt:
    pass
-finally:
-  pyatspi.Registry.stop()
+
+
+pyatspi.Registry.stop()
--- /tmp/test-tmpfs/nilfs-10861/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:40:21.153780559 -0500
+++ /tmp/test-tmpfs/nilfs-10863/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:40:38.138008736 -0500
@@ -384,8 +384,7 @@
   curSerializedState = myDesktop.serialize()
 
   # optimization: ignore outputting identical consecutive entries
-  global prevSerializedState
-  global prevPrintTime
+  global prevSerializedState, prevSerializedTime
   if curSerializedState != prevSerializedState:
     curSerializedTime = get_ms_since_epoch()
 
--- /tmp/test-tmpfs/nilfs-10866/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:40:40.704345415 -0500
+++ /tmp/test-tmpfs/nilfs-10873/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:40:45.823016945 -0500
@@ -381,10 +381,11 @@
 COALESCE_WINDOW_MS = 100
 
 def printDesktopState():
+  global prevSerializedState, prevSerializedTime
+
   curSerializedState = myDesktop.serialize()
 
   # optimization: ignore outputting identical consecutive entries
-  global prevSerializedState, prevSerializedTime
   if curSerializedState != prevSerializedState:
     curSerializedTime = get_ms_since_epoch()
 
--- /tmp/test-tmpfs/nilfs-10873/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:40:45.823016945 -0500
+++ /tmp/test-tmpfs/nilfs-10876/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:43:16.685809688 -0500
@@ -400,8 +400,8 @@
       compactJSON = json.dumps(prevSerializedState, separators=(',',':'))
       print '[', timeDelta, ']', prevSerializedTime, compactJSON
 
-    prevSerializedState = curSerializedState
-    prevSerializedTime = curSerializedTime
+      prevSerializedState = curSerializedState
+      prevSerializedTime = curSerializedTime
  
 
 def frameEventHandler(event):
--- /tmp/test-tmpfs/nilfs-10876/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:43:16.685809688 -0500
+++ /tmp/test-tmpfs/nilfs-10879/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:43:31.741785068 -0500
@@ -377,7 +377,6 @@
 
 prevSerializedState = None
 prevSerializedTime = 0
-
 COALESCE_WINDOW_MS = 100
 
 def printDesktopState():
--- /tmp/test-tmpfs/nilfs-10886/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:43:37.007475944 -0500
+++ /tmp/test-tmpfs/nilfs-10902/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:44:35.244116886 -0500
@@ -446,6 +446,12 @@
 
 gobject.timeout_add(200, asyncHandler)
 
+
+def flushBuffer():
+  print "FLUSHHHHHHH!"
+
+gobject.timeout_add(5000, flushBuffer)
+
 try:
    # be asynchronous to GREATLY speed up performance:
    pyatspi.Registry.start(async=True, gil=False)
--- /tmp/test-tmpfs/nilfs-10902/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:44:35.244116886 -0500
+++ /tmp/test-tmpfs/nilfs-10906/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:50:41.651196163 -0500
@@ -383,25 +383,36 @@
   global prevSerializedState, prevSerializedTime
 
   curSerializedState = myDesktop.serialize()
+  curSerializedTime = get_ms_since_epoch()
 
-  # optimization: ignore outputting identical consecutive entries
-  if curSerializedState != prevSerializedState:
-    curSerializedTime = get_ms_since_epoch()
-
-    # optimization: coalesce entries that occur within N milliseconds
-    # of one another, in order to make the output stream a bit cleaner
-    timeDelta = curSerializedTime - prevSerializedTime
-
-    if timeDelta > COALESCE_WINDOW_MS:
-      # print prevSerializedState, NOT curSerializedState
-
-      # use the most compact possible separators
-      compactJSON = json.dumps(prevSerializedState, separators=(',',':'))
-      print '[', timeDelta, ']', prevSerializedTime, compactJSON
-
-      prevSerializedState = curSerializedState
-      prevSerializedTime = curSerializedTime
- 
+  # if there's nothing buffered, then just print curSerializedState
+  if not prevSerializedState:
+    assert prevSerializedTime == 0
+
+    # use the most compact possible separators
+    compactJSON = json.dumps(curSerializedState, separators=(',',':'))
+    print curSerializedTime, compactJSON
+
+  else:
+    # buffering optimization:
+    # ignore outputting identical consecutive entries
+
+    if curSerializedState != prevSerializedState:
+
+      # optimization: coalesce entries that occur within N milliseconds
+      # of one another, in order to make the output stream a bit cleaner
+      timeDelta = curSerializedTime - prevSerializedTime
+
+      if timeDelta > COALESCE_WINDOW_MS:
+        # print prevSerializedState, NOT curSerializedState
+
+        # use the most compact possible separators
+        compactJSON = json.dumps(prevSerializedState, separators=(',',':'))
+        print '[', timeDelta, ']', prevSerializedTime, compactJSON
+
+        prevSerializedState = curSerializedState
+        prevSerializedTime = curSerializedTime
+   
 
 def frameEventHandler(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
--- /tmp/test-tmpfs/nilfs-10906/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:50:41.651196163 -0500
+++ /tmp/test-tmpfs/nilfs-10909/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:51:14.250452873 -0500
@@ -389,8 +389,7 @@
   if not prevSerializedState:
     assert prevSerializedTime == 0
 
-    # use the most compact possible separators
-    compactJSON = json.dumps(curSerializedState, separators=(',',':'))
+    compactJSON = json.dumps(curSerializedState, separators=(',',':')) # most compact separators
     print curSerializedTime, compactJSON
 
   else:
@@ -404,11 +403,10 @@
       timeDelta = curSerializedTime - prevSerializedTime
 
       if timeDelta > COALESCE_WINDOW_MS:
-        # print prevSerializedState, NOT curSerializedState
+        # print prevSerialized[State|Time]!!!
 
-        # use the most compact possible separators
-        compactJSON = json.dumps(prevSerializedState, separators=(',',':'))
-        print '[', timeDelta, ']', prevSerializedTime, compactJSON
+        compactJSON = json.dumps(prevSerializedState, separators=(',',':')) # most compact separators
+        print prevSerializedTime, compactJSON
 
         prevSerializedState = curSerializedState
         prevSerializedTime = curSerializedTime
--- /tmp/test-tmpfs/nilfs-10909/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:51:14.250452873 -0500
+++ /tmp/test-tmpfs/nilfs-10917/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:51:25.018852178 -0500
@@ -410,7 +410,7 @@
 
         prevSerializedState = curSerializedState
         prevSerializedTime = curSerializedTime
-   
+ 
 
 def frameEventHandler(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
--- /tmp/test-tmpfs/nilfs-10917/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:51:25.018852178 -0500
+++ /tmp/test-tmpfs/nilfs-10922/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:52:19.855978450 -0500
@@ -379,6 +379,13 @@
 prevSerializedTime = 0
 COALESCE_WINDOW_MS = 100
 
+
+printJSON(serializedState):
+    compactJSON = json.dumps(curSerializedState, separators=(',',':')) # most compact separators
+    print curSerializedTime, compactJSON
+
+
+
 def printDesktopState():
   global prevSerializedState, prevSerializedTime
 
--- /tmp/test-tmpfs/nilfs-10922/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:52:19.855978450 -0500
+++ /tmp/test-tmpfs/nilfs-10924/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:53:08.447293660 -0500
@@ -380,9 +380,10 @@
 COALESCE_WINDOW_MS = 100
 
 
-printJSON(serializedState):
-    compactJSON = json.dumps(curSerializedState, separators=(',',':')) # most compact separators
-    print curSerializedTime, compactJSON
+def printJSON(serializedState, serializedTime):
+  # use the most compact separators:
+  compactJSON = json.dumps(serializedState, separators=(',',':'))
+  print serializedTime, compactJSON
 
 
 
--- /tmp/test-tmpfs/nilfs-10924/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:53:08.447293660 -0500
+++ /tmp/test-tmpfs/nilfs-10928/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:53:10.591572356 -0500
@@ -386,7 +386,6 @@
   print serializedTime, compactJSON
 
 
-
 def printDesktopState():
   global prevSerializedState, prevSerializedTime
 
--- /tmp/test-tmpfs/nilfs-10928/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:53:10.591572356 -0500
+++ /tmp/test-tmpfs/nilfs-10932/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:53:24.655400285 -0500
@@ -395,10 +395,7 @@
   # if there's nothing buffered, then just print curSerializedState
   if not prevSerializedState:
     assert prevSerializedTime == 0
-
-    compactJSON = json.dumps(curSerializedState, separators=(',',':')) # most compact separators
-    print curSerializedTime, compactJSON
-
+    printJSON(curSerializedState, curSerializedTime)
   else:
     # buffering optimization:
     # ignore outputting identical consecutive entries
--- /tmp/test-tmpfs/nilfs-10932/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:53:24.655400285 -0500
+++ /tmp/test-tmpfs/nilfs-10935/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:53:46.768274473 -0500
@@ -407,10 +407,8 @@
       timeDelta = curSerializedTime - prevSerializedTime
 
       if timeDelta > COALESCE_WINDOW_MS:
-        # print prevSerialized[State|Time]!!!
-
-        compactJSON = json.dumps(prevSerializedState, separators=(',',':')) # most compact separators
-        print prevSerializedTime, compactJSON
+        # Remember to print prevSerialized[State|Time]!!!
+        printJSON(prevSerializedState, prevSerializedTime)
 
         prevSerializedState = curSerializedState
         prevSerializedTime = curSerializedTime
--- /tmp/test-tmpfs/nilfs-10938/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:53:52.798058234 -0500
+++ /tmp/test-tmpfs/nilfs-10941/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:54:10.518361593 -0500
@@ -375,6 +375,7 @@
   return milliseconds_since_epoch
 
 
+# buffering optimization:
 prevSerializedState = None
 prevSerializedTime = 0
 COALESCE_WINDOW_MS = 100
--- /tmp/test-tmpfs/nilfs-10941/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:54:10.518361593 -0500
+++ /tmp/test-tmpfs/nilfs-10945/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:54:21.013725860 -0500
@@ -413,6 +413,11 @@
 
         prevSerializedState = curSerializedState
         prevSerializedTime = curSerializedTime
+
+
+def flushBuffer():
+  print "FLUSHHHHHHH!"
+
  
 
 def frameEventHandler(event):
@@ -459,9 +464,6 @@
 gobject.timeout_add(200, asyncHandler)
 
 
-def flushBuffer():
-  print "FLUSHHHHHHH!"
-
 gobject.timeout_add(5000, flushBuffer)
 
 try:
--- /tmp/test-tmpfs/nilfs-10945/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:54:21.013725860 -0500
+++ /tmp/test-tmpfs/nilfs-10947/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:54:53.235914499 -0500
@@ -416,7 +416,11 @@
 
 
 def flushBuffer():
-  print "FLUSHHHHHHH!"
+  print "FLUSHHHHHHHHHHHHH!!!"
+  global prevSerializedState, prevSerializedTime
+  printJSON(prevSerializedState, prevSerializedTime)
+  prevSerializedState = None
+  prevSerializedTime = 0
 
  
 
--- /tmp/test-tmpfs/nilfs-10947/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:54:53.235914499 -0500
+++ /tmp/test-tmpfs/nilfs-10949/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:54:54.044019549 -0500
@@ -421,7 +421,6 @@
   printJSON(prevSerializedState, prevSerializedTime)
   prevSerializedState = None
   prevSerializedTime = 0
-
  
 
 def frameEventHandler(event):
--- /tmp/test-tmpfs/nilfs-10952/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:54:57.804508401 -0500
+++ /tmp/test-tmpfs/nilfs-10954/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:55:03.445241685 -0500
@@ -466,8 +466,7 @@
 
 gobject.timeout_add(200, asyncHandler)
 
-
-gobject.timeout_add(5000, flushBuffer)
+gobject.timeout_add(5000, flushBuffer) # periodically flush the print buffer
 
 try:
    # be asynchronous to GREATLY speed up performance:
--- /tmp/test-tmpfs/nilfs-10957/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:55:05.188468301 -0500
+++ /tmp/test-tmpfs/nilfs-10960/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:55:17.821110550 -0500
@@ -416,11 +416,12 @@
 
 
 def flushBuffer():
-  print "FLUSHHHHHHHHHHHHH!!!"
-  global prevSerializedState, prevSerializedTime
-  printJSON(prevSerializedState, prevSerializedTime)
-  prevSerializedState = None
-  prevSerializedTime = 0
+  if prevSerializedState:
+    print "FLUSHHHHHHHHHHHHH!!!"
+    global prevSerializedState, prevSerializedTime
+    printJSON(prevSerializedState, prevSerializedTime)
+    prevSerializedState = None
+    prevSerializedTime = 0
  
 
 def frameEventHandler(event):
--- /tmp/test-tmpfs/nilfs-10960/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:55:17.821110550 -0500
+++ /tmp/test-tmpfs/nilfs-10963/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:55:23.396835408 -0500
@@ -477,3 +477,4 @@
 
 
 pyatspi.Registry.stop()
+flushBuffer()
--- /tmp/test-tmpfs/nilfs-10963/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:55:23.396835408 -0500
+++ /tmp/test-tmpfs/nilfs-10965/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:55:30.266728521 -0500
@@ -474,7 +474,6 @@
    pyatspi.Registry.start(async=True, gil=False)
 except KeyboardInterrupt:
    pass
-
-
-pyatspi.Registry.stop()
-flushBuffer()
+finally:
+  flushBuffer()
+  pyatspi.Registry.stop()
--- /tmp/test-tmpfs/nilfs-10965/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:55:30.266728521 -0500
+++ /tmp/test-tmpfs/nilfs-10969/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:55:31.337867774 -0500
@@ -477,3 +477,4 @@
 finally:
   flushBuffer()
   pyatspi.Registry.stop()
+
--- /tmp/test-tmpfs/nilfs-10969/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:55:31.337867774 -0500
+++ /tmp/test-tmpfs/nilfs-10974/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:55:44.499578881 -0500
@@ -416,9 +416,10 @@
 
 
 def flushBuffer():
+  global prevSerializedState, prevSerializedTime
+
   if prevSerializedState:
     print "FLUSHHHHHHHHHHHHH!!!"
-    global prevSerializedState, prevSerializedTime
     printJSON(prevSerializedState, prevSerializedTime)
     prevSerializedState = None
     prevSerializedTime = 0
--- /tmp/test-tmpfs/nilfs-10974/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:55:44.499578881 -0500
+++ /tmp/test-tmpfs/nilfs-10985/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:58:00.482259799 -0500
@@ -418,8 +418,8 @@
 def flushBuffer():
   global prevSerializedState, prevSerializedTime
 
+  print "FLUSHHHHHHHHHHHHH!!!"
   if prevSerializedState:
-    print "FLUSHHHHHHHHHHHHH!!!"
     printJSON(prevSerializedState, prevSerializedTime)
     prevSerializedState = None
     prevSerializedTime = 0
--- /tmp/test-tmpfs/nilfs-10985/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 17:58:00.482259799 -0500
+++ /tmp/test-tmpfs/nilfs-10992/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:00:15.956878718 -0500
@@ -376,8 +376,10 @@
 
 
 # buffering optimization:
-prevSerializedState = None
-prevSerializedTime = 0
+
+# each entry consists of a tuple: (time, serialized state)
+buffer = []
+
 COALESCE_WINDOW_MS = 100
 
 
--- /tmp/test-tmpfs/nilfs-10992/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:00:15.956878718 -0500
+++ /tmp/test-tmpfs/nilfs-10995/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:02:26.793898228 -0500
@@ -378,7 +378,7 @@
 # buffering optimization:
 
 # each entry consists of a tuple: (time, serialized state)
-buffer = []
+outputBuffer = []
 
 COALESCE_WINDOW_MS = 100
 
@@ -389,12 +389,17 @@
   print serializedTime, compactJSON
 
 
-def printDesktopState():
+def bufferDesktopState():
   global prevSerializedState, prevSerializedTime
 
   curSerializedState = myDesktop.serialize()
   curSerializedTime = get_ms_since_epoch()
 
+  # ignore buffering identical consecutive entries:
+  if outputBuffer:
+    prevSerializedState = outputBuffer[-1][1]
+    if curSerializedState == prevSerializedState:
+
   # if there's nothing buffered, then just print curSerializedState
   if not prevSerializedState:
     assert prevSerializedTime == 0
@@ -437,7 +442,7 @@
   #myDesktop.printMe()
 
   print event
-  printDesktopState()
+  bufferDesktopState()
 
 
 # the minimal set of required listeners to get what we want ...
@@ -456,9 +461,7 @@
 reg.registerEventListener(frameEventHandler, 'window:restore')
 
 
-
-# print initial state
-printDesktopState()
+bufferDesktopState() # 'print' initial state
 
 
 # This idiom of gobject.timeout_add, pumpQueuedEvents, and async=True
--- /tmp/test-tmpfs/nilfs-10995/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:02:26.793898228 -0500
+++ /tmp/test-tmpfs/nilfs-10998/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:03:04.426794242 -0500
@@ -399,6 +399,20 @@
   if outputBuffer:
     prevSerializedState = outputBuffer[-1][1]
     if curSerializedState == prevSerializedState:
+      return # PUNT!
+
+  outputBuffer.append((curSerializedTime, curSerializedState))
+
+
+def flushBuffer():
+  global prevSerializedState, prevSerializedTime
+
+  print "FLUSHHHHHHHHHHHHH!!!"
+  if prevSerializedState:
+    printJSON(prevSerializedState, prevSerializedTime)
+    prevSerializedState = None
+    prevSerializedTime = 0
+
 
   # if there's nothing buffered, then just print curSerializedState
   if not prevSerializedState:
@@ -422,14 +436,6 @@
         prevSerializedTime = curSerializedTime
 
 
-def flushBuffer():
-  global prevSerializedState, prevSerializedTime
-
-  print "FLUSHHHHHHHHHHHHH!!!"
-  if prevSerializedState:
-    printJSON(prevSerializedState, prevSerializedTime)
-    prevSerializedState = None
-    prevSerializedTime = 0
  
 
 def frameEventHandler(event):
--- /tmp/test-tmpfs/nilfs-11005/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:03:18.046566237 -0500
+++ /tmp/test-tmpfs/nilfs-11009/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:08:08.121315104 -0500
@@ -407,6 +407,13 @@
 def flushBuffer():
   global prevSerializedState, prevSerializedTime
 
+  try:
+    curTime, curState = outputBuffer.pop(0)
+    printJSON(curState, curTime)
+
+  except IndexError:
+    pass
+
   print "FLUSHHHHHHHHHHHHH!!!"
   if prevSerializedState:
     printJSON(prevSerializedState, prevSerializedTime)
--- /tmp/test-tmpfs/nilfs-11009/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:08:08.121315104 -0500
+++ /tmp/test-tmpfs/nilfs-11015/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:08:38.562267572 -0500
@@ -383,7 +383,7 @@
 COALESCE_WINDOW_MS = 100
 
 
-def printJSON(serializedState, serializedTime):
+def printJSON(serializedTime, serializedState):
   # use the most compact separators:
   compactJSON = json.dumps(serializedState, separators=(',',':'))
   print serializedTime, compactJSON
@@ -407,25 +407,14 @@
 def flushBuffer():
   global prevSerializedState, prevSerializedTime
 
+  print "FLUSHHHHHHHHHHHHH!!!"
   try:
     curTime, curState = outputBuffer.pop(0)
-    printJSON(curState, curTime)
-
+    printJSON(curTime, curState)
   except IndexError:
     pass
 
-  print "FLUSHHHHHHHHHHHHH!!!"
-  if prevSerializedState:
-    printJSON(prevSerializedState, prevSerializedTime)
-    prevSerializedState = None
-    prevSerializedTime = 0
-
-
-  # if there's nothing buffered, then just print curSerializedState
-  if not prevSerializedState:
-    assert prevSerializedTime == 0
-    printJSON(curSerializedState, curSerializedTime)
-  else:
+    '''
     # buffering optimization:
     # ignore outputting identical consecutive entries
 
@@ -441,6 +430,7 @@
 
         prevSerializedState = curSerializedState
         prevSerializedTime = curSerializedTime
+    '''
 
 
  
--- /tmp/test-tmpfs/nilfs-11015/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:08:38.562267572 -0500
+++ /tmp/test-tmpfs/nilfs-11021/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:11:33.909023183 -0500
@@ -414,23 +414,25 @@
   except IndexError:
     pass
 
-    '''
-    # buffering optimization:
-    # ignore outputting identical consecutive entries
-
-    if curSerializedState != prevSerializedState:
-
-      # optimization: coalesce entries that occur within N milliseconds
-      # of one another, in order to make the output stream a bit cleaner
-      timeDelta = curSerializedTime - prevSerializedTime
-
-      if timeDelta > COALESCE_WINDOW_MS:
-        # Remember to print prevSerialized[State|Time]!!!
-        printJSON(prevSerializedState, prevSerializedTime)
-
-        prevSerializedState = curSerializedState
-        prevSerializedTime = curSerializedTime
-    '''
+  return True # needed so that the event will keep firing :)
+
+'''
+# buffering optimization:
+# ignore outputting identical consecutive entries
+
+if curSerializedState != prevSerializedState:
+
+  # optimization: coalesce entries that occur within N milliseconds
+  # of one another, in order to make the output stream a bit cleaner
+  timeDelta = curSerializedTime - prevSerializedTime
+
+  if timeDelta > COALESCE_WINDOW_MS:
+    # Remember to print prevSerialized[State|Time]!!!
+    printJSON(prevSerializedState, prevSerializedTime)
+
+    prevSerializedState = curSerializedState
+    prevSerializedTime = curSerializedTime
+'''
 
 
  
--- /tmp/test-tmpfs/nilfs-11021/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:11:33.909023183 -0500
+++ /tmp/test-tmpfs/nilfs-11025/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:12:07.386368676 -0500
@@ -414,7 +414,7 @@
   except IndexError:
     pass
 
-  return True # needed so that the event will keep firing :)
+  return True # so that gobject.timeout_add will keep firing!
 
 '''
 # buffering optimization:
@@ -474,7 +474,7 @@
 
 def asyncHandler():
   pyatspi.Registry.pumpQueuedEvents()
-  return True
+  return True # so that gobject.timeout_add will keep firing!
 
 gobject.timeout_add(200, asyncHandler)
 
--- /tmp/test-tmpfs/nilfs-11025/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:12:07.386368676 -0500
+++ /tmp/test-tmpfs/nilfs-11028/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:12:18.971872590 -0500
@@ -158,7 +158,7 @@
     self.windows = newWindows
 
     for w in self.windows:
-      if frameEquals(cur_atspiFrame, w.atspiFrame):
+      if cur_atspiFrame == w.atspiFrame:
         curFrameChanged = w.update()
         return frameNumChanged or curFrameChanged
 
@@ -175,19 +175,6 @@
     return dict(name=self.name, windows=[w.serialize() for w in self.windows])
 
 
-# object identity isn't enough, apparently, for cases like Firefox :/
-def frameEquals(f1, f2):
-  # quick-check for efficiency
-  if f1 == f2:
-    return True
-
-  # resort to slower value check if necessary
-  if f1.name == f2.name:
-    return True
-
-  return False
-
-
 # pyatspi uses the term 'frame' to refer to what we think of as windows
 class Window:
   def __init__(self, frame, parentApp):
--- /tmp/test-tmpfs/nilfs-11032/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:12:28.626125837 -0500
+++ /tmp/test-tmpfs/nilfs-11034/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:12:47.787613322 -0500
@@ -453,7 +453,8 @@
 reg.registerEventListener(frameEventHandler, 'window:restore')
 
 
-bufferDesktopState() # 'print' initial state
+
+bufferDesktopState() # buffer up the initial state
 
 
 # This idiom of gobject.timeout_add, pumpQueuedEvents, and async=True
--- /tmp/test-tmpfs/nilfs-11037/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:12:49.409823917 -0500
+++ /tmp/test-tmpfs/nilfs-11045/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:13:04.771818241 -0500
@@ -433,7 +433,6 @@
   #for i in range(100): print # clear screen
   #myDesktop.printMe()
 
-  print event
   bufferDesktopState()
 
 
--- /tmp/test-tmpfs/nilfs-11045/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:13:04.771818241 -0500
+++ /tmp/test-tmpfs/nilfs-11050/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:13:48.801534617 -0500
@@ -401,6 +401,7 @@
   except IndexError:
     pass
 
+  assert len(outputBuffer) == 0
   return True # so that gobject.timeout_add will keep firing!
 
 '''
--- /tmp/test-tmpfs/nilfs-11051/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:15:01.420963916 -0500
+++ /tmp/test-tmpfs/nilfs-11053/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:15:04.381348338 -0500
@@ -388,6 +388,7 @@
     if curSerializedState == prevSerializedState:
       return # PUNT!
 
+
   outputBuffer.append((curSerializedTime, curSerializedState))
 
 
--- /tmp/test-tmpfs/nilfs-11053/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:15:04.381348338 -0500
+++ /tmp/test-tmpfs/nilfs-11081/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:15:05.668515485 -0500
@@ -388,7 +388,6 @@
     if curSerializedState == prevSerializedState:
       return # PUNT!
 
-
   outputBuffer.append((curSerializedTime, curSerializedState))
 
 
--- /tmp/test-tmpfs/nilfs-11081/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:15:05.668515485 -0500
+++ /tmp/test-tmpfs/nilfs-11085/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:17:06.492207060 -0500
@@ -365,6 +365,8 @@
 # buffering optimization:
 
 # each entry consists of a tuple: (time, serialized state)
+
+# TODO: do we need to lock this or to use a concurrent Queue structure???
 outputBuffer = []
 
 COALESCE_WINDOW_MS = 100
@@ -395,6 +397,8 @@
   global prevSerializedState, prevSerializedTime
 
   print "FLUSHHHHHHHHHHHHH!!!"
+
+  for (curTime, curState) in outputBuffer:
   try:
     curTime, curState = outputBuffer.pop(0)
     printJSON(curTime, curState)
--- /tmp/test-tmpfs/nilfs-11085/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:17:06.492207060 -0500
+++ /tmp/test-tmpfs/nilfs-11089/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:17:26.011742443 -0500
@@ -399,13 +399,9 @@
   print "FLUSHHHHHHHHHHHHH!!!"
 
   for (curTime, curState) in outputBuffer:
-  try:
-    curTime, curState = outputBuffer.pop(0)
     printJSON(curTime, curState)
-  except IndexError:
-    pass
 
-  assert len(outputBuffer) == 0
+  outputBuffer = [] # reset it!!!
   return True # so that gobject.timeout_add will keep firing!
 
 '''
--- /tmp/test-tmpfs/nilfs-11089/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:17:26.011742443 -0500
+++ /tmp/test-tmpfs/nilfs-11115/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:17:44.145097863 -0500
@@ -394,8 +394,7 @@
 
 
 def flushBuffer():
-  global prevSerializedState, prevSerializedTime
-
+  global outputBuffer
   print "FLUSHHHHHHHHHHHHH!!!"
 
   for (curTime, curState) in outputBuffer:
--- /tmp/test-tmpfs/nilfs-11115/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:17:44.145097863 -0500
+++ /tmp/test-tmpfs/nilfs-11146/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:18:43.216771510 -0500
@@ -367,6 +367,7 @@
 # each entry consists of a tuple: (time, serialized state)
 
 # TODO: do we need to lock this or to use a concurrent Queue structure???
+# http://docs.python.org/library/queue.html
 outputBuffer = []
 
 COALESCE_WINDOW_MS = 100
--- /tmp/test-tmpfs/nilfs-11146/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:18:43.216771510 -0500
+++ /tmp/test-tmpfs/nilfs-11152/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:20:53.854744951 -0500
@@ -396,7 +396,7 @@
 
 def flushBuffer():
   global outputBuffer
-  print "FLUSHHHHHHHHHHHHH!!!"
+  print >> sys.stderr, "FLUSHHHHHHHHHHHHH!!!!!!"
 
   for (curTime, curState) in outputBuffer:
     printJSON(curTime, curState)
--- /tmp/test-tmpfs/nilfs-11152/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:20:53.854744951 -0500
+++ /tmp/test-tmpfs/nilfs-11171/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:21:16.806727467 -0500
@@ -8,11 +8,10 @@
 #          then log out and log back in.
 
 
-import time
 import pyatspi
 import gobject # requires the gtk package of some sort
 
-import json
+import sys, json, time
 
 
 # Let's not support Firefox for now since it seems to have some quirks.
--- /tmp/test-tmpfs/nilfs-11171/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:21:16.806727467 -0500
+++ /tmp/test-tmpfs/nilfs-11174/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:24:55.066095547 -0500
@@ -397,8 +397,21 @@
   global outputBuffer
   print >> sys.stderr, "FLUSHHHHHHHHHHHHH!!!!!!"
 
+  # optimization: coalesce entries that occur within N milliseconds
+  # of one another, in order to make the output stream a bit cleaner
+  prevState = None
+  prevTime = None
+
   for (curTime, curState) in outputBuffer:
-    printJSON(curTime, curState)
+    if prevState:
+      assert prevTime
+      timeDelta = curTime - prevTime
+      if timeDelta > COALESCE_WINDOW_MS:
+    else:
+      printJSON(curTime, curState)
+
+    prevTime = curTime
+    prevState = curState
 
   outputBuffer = [] # reset it!!!
   return True # so that gobject.timeout_add will keep firing!
@@ -409,8 +422,6 @@
 
 if curSerializedState != prevSerializedState:
 
-  # optimization: coalesce entries that occur within N milliseconds
-  # of one another, in order to make the output stream a bit cleaner
   timeDelta = curSerializedTime - prevSerializedTime
 
   if timeDelta > COALESCE_WINDOW_MS:
--- /tmp/test-tmpfs/nilfs-11174/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:24:55.066095547 -0500
+++ /tmp/test-tmpfs/nilfs-11180/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:25:12.120312617 -0500
@@ -406,7 +406,7 @@
     if prevState:
       assert prevTime
       timeDelta = curTime - prevTime
-      if timeDelta > COALESCE_WINDOW_MS:
+      if timeDelta < COALESCE_WINDOW_MS:
     else:
       printJSON(curTime, curState)
 
--- /tmp/test-tmpfs/nilfs-11180/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:25:12.120312617 -0500
+++ /tmp/test-tmpfs/nilfs-11183/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:28:19.819664201 -0500
@@ -407,6 +407,7 @@
       assert prevTime
       timeDelta = curTime - prevTime
       if timeDelta < COALESCE_WINDOW_MS:
+        printJSON(prevTime, prevState)
     else:
       printJSON(curTime, curState)
 
--- /tmp/test-tmpfs/nilfs-11183/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:28:19.819664201 -0500
+++ /tmp/test-tmpfs/nilfs-11185/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:28:27.545665753 -0500
@@ -417,24 +417,6 @@
   outputBuffer = [] # reset it!!!
   return True # so that gobject.timeout_add will keep firing!
 
-'''
-# buffering optimization:
-# ignore outputting identical consecutive entries
-
-if curSerializedState != prevSerializedState:
-
-  timeDelta = curSerializedTime - prevSerializedTime
-
-  if timeDelta > COALESCE_WINDOW_MS:
-    # Remember to print prevSerialized[State|Time]!!!
-    printJSON(prevSerializedState, prevSerializedTime)
-
-    prevSerializedState = curSerializedState
-    prevSerializedTime = curSerializedTime
-'''
-
-
- 
 
 def frameEventHandler(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
--- /tmp/test-tmpfs/nilfs-11185/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:28:27.545665753 -0500
+++ /tmp/test-tmpfs/nilfs-11193/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:28:28.514791388 -0500
@@ -415,6 +415,7 @@
     prevState = curState
 
   outputBuffer = [] # reset it!!!
+
   return True # so that gobject.timeout_add will keep firing!
 
 
--- /tmp/test-tmpfs/nilfs-11193/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:28:28.514791388 -0500
+++ /tmp/test-tmpfs/nilfs-11198/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:30:15.048603705 -0500
@@ -402,12 +402,14 @@
   prevState = None
   prevTime = None
 
+  realOutputBuffer = []
+
   for (curTime, curState) in outputBuffer:
     if prevState:
       assert prevTime
       timeDelta = curTime - prevTime
-      if timeDelta < COALESCE_WINDOW_MS:
-        printJSON(prevTime, prevState)
+      if timeDelta > COALESCE_WINDOW_MS:
+        realOutputBuffer.append((prevTime, prevState))
     else:
       printJSON(curTime, curState)
 
--- /tmp/test-tmpfs/nilfs-11198/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:30:15.048603705 -0500
+++ /tmp/test-tmpfs/nilfs-11201/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:30:47.840855977 -0500
@@ -411,10 +411,10 @@
       if timeDelta > COALESCE_WINDOW_MS:
         realOutputBuffer.append((prevTime, prevState))
     else:
-      printJSON(curTime, curState)
+      prevTime = curTime
+      prevState = curState
 
-    prevTime = curTime
-    prevState = curState
+  # TODO: handle edge case
 
   outputBuffer = [] # reset it!!!
 
--- /tmp/test-tmpfs/nilfs-11201/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:30:47.840855977 -0500
+++ /tmp/test-tmpfs/nilfs-11205/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:31:11.937980931 -0500
@@ -410,9 +410,9 @@
       timeDelta = curTime - prevTime
       if timeDelta > COALESCE_WINDOW_MS:
         realOutputBuffer.append((prevTime, prevState))
-    else:
-      prevTime = curTime
-      prevState = curState
+
+    prevTime = curTime
+    prevState = curState
 
   # TODO: handle edge case
 
--- /tmp/test-tmpfs/nilfs-11205/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:31:11.937980931 -0500
+++ /tmp/test-tmpfs/nilfs-11209/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:32:14.647113958 -0500
@@ -410,10 +410,12 @@
       timeDelta = curTime - prevTime
       if timeDelta > COALESCE_WINDOW_MS:
         realOutputBuffer.append((prevTime, prevState))
+        realOutputBuffer.append((curTime, curState))
 
     prevTime = curTime
     prevState = curState
 
+
   # TODO: handle edge case
 
   outputBuffer = [] # reset it!!!
--- /tmp/test-tmpfs/nilfs-11209/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:32:14.647113958 -0500
+++ /tmp/test-tmpfs/nilfs-11216/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:32:48.388490505 -0500
@@ -404,6 +404,8 @@
 
   realOutputBuffer = []
 
+  # TODO: why is this so tricky to get right???
+
   for (curTime, curState) in outputBuffer:
     if prevState:
       assert prevTime
--- /tmp/test-tmpfs/nilfs-11216/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:32:48.388490505 -0500
+++ /tmp/test-tmpfs/nilfs-11222/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:38:18.485323938 -0500
@@ -413,10 +413,14 @@
       if timeDelta > COALESCE_WINDOW_MS:
         realOutputBuffer.append((prevTime, prevState))
         realOutputBuffer.append((curTime, curState))
+      else:
+        prevTime = curTime
+        prevState = curState
+    else:
+      prevTime = curTime
+      prevState = curState
 
-    prevTime = curTime
-    prevState = curState
-
+  print len(realOutputBuffer)
 
   # TODO: handle edge case
 
--- /tmp/test-tmpfs/nilfs-11222/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:38:18.485323938 -0500
+++ /tmp/test-tmpfs/nilfs-11227/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:38:51.132561876 -0500
@@ -420,6 +420,8 @@
       prevTime = curTime
       prevState = curState
 
+  realOutputBuffer.append((prevTime, prevState))
+
   print len(realOutputBuffer)
 
   # TODO: handle edge case
--- /tmp/test-tmpfs/nilfs-11227/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:38:51.132561876 -0500
+++ /tmp/test-tmpfs/nilfs-11233/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:39:21.106453036 -0500
@@ -420,7 +420,8 @@
       prevTime = curTime
       prevState = curState
 
-  realOutputBuffer.append((prevTime, prevState))
+  if prevState:
+    realOutputBuffer.append((prevTime, prevState))
 
   print len(realOutputBuffer)
 
--- /tmp/test-tmpfs/nilfs-11233/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:39:21.106453036 -0500
+++ /tmp/test-tmpfs/nilfs-11237/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:40:40.512762573 -0500
@@ -404,8 +404,7 @@
 
   realOutputBuffer = []
 
-  # TODO: why is this so tricky to get right???
-
+  # TODO: why is this code so tricky to get right???
   for (curTime, curState) in outputBuffer:
     if prevState:
       assert prevTime
--- /tmp/test-tmpfs/nilfs-11237/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:40:40.512762573 -0500
+++ /tmp/test-tmpfs/nilfs-11240/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:41:10.280627837 -0500
@@ -412,6 +412,9 @@
       if timeDelta > COALESCE_WINDOW_MS:
         realOutputBuffer.append((prevTime, prevState))
         realOutputBuffer.append((curTime, curState))
+        prevTime = None
+        prevState = None
+
       else:
         prevTime = curTime
         prevState = curState
--- /tmp/test-tmpfs/nilfs-11240/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:41:10.280627837 -0500
+++ /tmp/test-tmpfs/nilfs-11242/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:41:38.433283578 -0500
@@ -412,9 +412,6 @@
       if timeDelta > COALESCE_WINDOW_MS:
         realOutputBuffer.append((prevTime, prevState))
         realOutputBuffer.append((curTime, curState))
-        prevTime = None
-        prevState = None
-
       else:
         prevTime = curTime
         prevState = curState
--- /tmp/test-tmpfs/nilfs-11246/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:41:40.286524240 -0500
+++ /tmp/test-tmpfs/nilfs-11248/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:42:11.074522439 -0500
@@ -423,6 +423,8 @@
     realOutputBuffer.append((prevTime, prevState))
 
   print len(realOutputBuffer)
+  #for (curTime, curState) in realOutputBuffer:
+  #  printJSON(curTime, curState)
 
   # TODO: handle edge case
 
--- /tmp/test-tmpfs/nilfs-11253/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:42:12.509708823 -0500
+++ /tmp/test-tmpfs/nilfs-11679/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:42:38.294057432 -0500
@@ -379,7 +379,7 @@
 
 
 def bufferDesktopState():
-  global prevSerializedState, prevSerializedTime
+  global prevSerializedState, prevSerializedTime, outputBuffer
 
   curSerializedState = myDesktop.serialize()
   curSerializedTime = get_ms_since_epoch()
--- /tmp/test-tmpfs/nilfs-11679/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 18:42:38.294057432 -0500
+++ /tmp/test-tmpfs/nilfs-11684/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:12:45.719912247 -0500
@@ -393,6 +393,33 @@
   outputBuffer.append((curSerializedTime, curSerializedState))
 
 
+
+def coalescePairs(lst, distance):
+  ret = []
+  pInd = 0
+  cInd = 1
+
+  while cInd < len(lst):
+    prev = lst[pInd]
+    cur  = lst[cInd]
+    delta = cur[0] - prev[0]
+    if delta < distance:
+      ret.append(cur[1])
+      pInd = cInd + 1 # skip over!
+    else:
+      ret.append(prev[1])
+      pInd += 1
+    cInd = pInd + 1
+
+
+  # take care of final entry ...
+  if pInd < len(lst):
+    ret.append(lst[pInd][1])
+
+  return ret
+
+
+
 def flushBuffer():
   global outputBuffer
   print >> sys.stderr, "FLUSHHHHHHHHHHHHH!!!!!!"
--- /tmp/test-tmpfs/nilfs-11684/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:12:45.719912247 -0500
+++ /tmp/test-tmpfs/nilfs-11687/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:13:03.452213040 -0500
@@ -431,23 +431,6 @@
 
   realOutputBuffer = []
 
-  # TODO: why is this code so tricky to get right???
-  for (curTime, curState) in outputBuffer:
-    if prevState:
-      assert prevTime
-      timeDelta = curTime - prevTime
-      if timeDelta > COALESCE_WINDOW_MS:
-        realOutputBuffer.append((prevTime, prevState))
-        realOutputBuffer.append((curTime, curState))
-      else:
-        prevTime = curTime
-        prevState = curState
-    else:
-      prevTime = curTime
-      prevState = curState
-
-  if prevState:
-    realOutputBuffer.append((prevTime, prevState))
 
   print len(realOutputBuffer)
   #for (curTime, curState) in realOutputBuffer:
--- /tmp/test-tmpfs/nilfs-11687/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:13:03.452213040 -0500
+++ /tmp/test-tmpfs/nilfs-11691/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:13:35.778407403 -0500
@@ -404,22 +404,21 @@
     cur  = lst[cInd]
     delta = cur[0] - prev[0]
     if delta < distance:
-      ret.append(cur[1])
+      ret.append(cur)
       pInd = cInd + 1 # skip over!
     else:
-      ret.append(prev[1])
+      ret.append(prev)
       pInd += 1
     cInd = pInd + 1
 
 
   # take care of final entry ...
   if pInd < len(lst):
-    ret.append(lst[pInd][1])
+    ret.append(lst[pInd])
 
   return ret
 
 
-
 def flushBuffer():
   global outputBuffer
   print >> sys.stderr, "FLUSHHHHHHHHHHHHH!!!!!!"
@@ -429,7 +428,7 @@
   prevState = None
   prevTime = None
 
-  realOutputBuffer = []
+  realOutputBuffer = coalescePairs(outputBuffer, COALESCE_WINDOW_MS)
 
 
   print len(realOutputBuffer)
--- /tmp/test-tmpfs/nilfs-11691/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:13:35.778407403 -0500
+++ /tmp/test-tmpfs/nilfs-11693/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:13:47.652948140 -0500
@@ -393,8 +393,7 @@
   outputBuffer.append((curSerializedTime, curSerializedState))
 
 
-
-def coalescePairs(lst, distance):
+def coalescePairs(lst, max_distance):
   ret = []
   pInd = 0
   cInd = 1
@@ -403,7 +402,7 @@
     prev = lst[pInd]
     cur  = lst[cInd]
     delta = cur[0] - prev[0]
-    if delta < distance:
+    if delta < max_distance:
       ret.append(cur)
       pInd = cInd + 1 # skip over!
     else:
--- /tmp/test-tmpfs/nilfs-11693/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:13:47.652948140 -0500
+++ /tmp/test-tmpfs/nilfs-11696/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:13:50.827360022 -0500
@@ -429,7 +429,6 @@
 
   realOutputBuffer = coalescePairs(outputBuffer, COALESCE_WINDOW_MS)
 
-
   print len(realOutputBuffer)
   #for (curTime, curState) in realOutputBuffer:
   #  printJSON(curTime, curState)
--- /tmp/test-tmpfs/nilfs-11696/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:13:50.827360022 -0500
+++ /tmp/test-tmpfs/nilfs-11698/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:13:58.972416855 -0500
@@ -433,8 +433,6 @@
   #for (curTime, curState) in realOutputBuffer:
   #  printJSON(curTime, curState)
 
-  # TODO: handle edge case
-
   outputBuffer = [] # reset it!!!
 
   return True # so that gobject.timeout_add will keep firing!
--- /tmp/test-tmpfs/nilfs-11698/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:13:58.972416855 -0500
+++ /tmp/test-tmpfs/nilfs-11708/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:14:00.033554541 -0500
@@ -430,6 +430,7 @@
   realOutputBuffer = coalescePairs(outputBuffer, COALESCE_WINDOW_MS)
 
   print len(realOutputBuffer)
+
   #for (curTime, curState) in realOutputBuffer:
   #  printJSON(curTime, curState)
 
--- /tmp/test-tmpfs/nilfs-11708/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:14:00.033554541 -0500
+++ /tmp/test-tmpfs/nilfs-11710/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:15:14.922271433 -0500
@@ -429,10 +429,8 @@
 
   realOutputBuffer = coalescePairs(outputBuffer, COALESCE_WINDOW_MS)
 
-  print len(realOutputBuffer)
-
-  #for (curTime, curState) in realOutputBuffer:
-  #  printJSON(curTime, curState)
+  for (curTime, curState) in realOutputBuffer:
+    printJSON(curTime, curState)
 
   outputBuffer = [] # reset it!!!
 
--- /tmp/test-tmpfs/nilfs-11713/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:15:18.609749890 -0500
+++ /tmp/test-tmpfs/nilfs-11732/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:15:29.801201994 -0500
@@ -420,7 +420,7 @@
 
 def flushBuffer():
   global outputBuffer
-  print >> sys.stderr, "FLUSHHHHHHHHHHHHH!!!!!!"
+  #print >> sys.stderr, "FLUSHHHHHHHHHHHHH!!!!!!"
 
   # optimization: coalesce entries that occur within N milliseconds
   # of one another, in order to make the output stream a bit cleaner
--- /tmp/test-tmpfs/nilfs-11732/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:15:29.801201994 -0500
+++ /tmp/test-tmpfs/nilfs-11734/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:19:11.007903746 -0500
@@ -424,13 +424,16 @@
 
   # optimization: coalesce entries that occur within N milliseconds
   # of one another, in order to make the output stream a bit cleaner
-  prevState = None
-  prevTime = None
 
-  realOutputBuffer = coalescePairs(outputBuffer, COALESCE_WINDOW_MS)
+  #realOutputBuffer = coalescePairs(outputBuffer, COALESCE_WINDOW_MS)
+  #for (curTime, curState) in realOutputBuffer:
+  #  printJSON(curTime, curState)
 
-  for (curTime, curState) in realOutputBuffer:
-    printJSON(curTime, curState)
+  prevTime = None
+  for (t, s) in outputBuffer:
+    if prevTime:
+      print (t - prevTime)
+    prevTime = t
 
   outputBuffer = [] # reset it!!!
 
--- /tmp/test-tmpfs/nilfs-11737/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:19:12.323074390 -0500
+++ /tmp/test-tmpfs/nilfs-11747/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:19:25.667805876 -0500
@@ -432,7 +432,7 @@
   prevTime = None
   for (t, s) in outputBuffer:
     if prevTime:
-      print (t - prevTime)
+      print 'DELTA:', (t - prevTime)
     prevTime = t
 
   outputBuffer = [] # reset it!!!
--- /tmp/test-tmpfs/nilfs-11747/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:19:25.667805876 -0500
+++ /tmp/test-tmpfs/nilfs-11924/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:20:33.488605661 -0500
@@ -430,6 +430,7 @@
   #  printJSON(curTime, curState)
 
   prevTime = None
+  print "N:", len(outputBuffer)
   for (t, s) in outputBuffer:
     if prevTime:
       print 'DELTA:', (t - prevTime)
--- /tmp/test-tmpfs/nilfs-11924/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:20:33.488605661 -0500
+++ /tmp/test-tmpfs/nilfs-11929/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:42:11.235201310 -0500
@@ -393,7 +393,7 @@
   outputBuffer.append((curSerializedTime, curSerializedState))
 
 
-def coalescePairs(lst, max_distance):
+def coalesce(lst, max_distance):
   ret = []
   pInd = 0
   cInd = 1
@@ -402,18 +402,14 @@
     prev = lst[pInd]
     cur  = lst[cInd]
     delta = cur[0] - prev[0]
-    if delta < max_distance:
-      ret.append(cur)
-      pInd = cInd + 1 # skip over!
+    if delta >= max_distance:
+      ret.append(lst[cInd-1])
+      pInd = cInd
+      cInd = pInd + 1
     else:
-      ret.append(prev)
-      pInd += 1
-    cInd = pInd + 1
+      cInd += 1
 
-
-  # take care of final entry ...
-  if pInd < len(lst):
-    ret.append(lst[pInd])
+  ret.append(lst[-1]) # always append the final entry
 
   return ret
 
--- /tmp/test-tmpfs/nilfs-11929/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:42:11.235201310 -0500
+++ /tmp/test-tmpfs/nilfs-11932/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:42:35.032298006 -0500
@@ -421,16 +421,9 @@
   # optimization: coalesce entries that occur within N milliseconds
   # of one another, in order to make the output stream a bit cleaner
 
-  #realOutputBuffer = coalescePairs(outputBuffer, COALESCE_WINDOW_MS)
-  #for (curTime, curState) in realOutputBuffer:
-  #  printJSON(curTime, curState)
-
-  prevTime = None
-  print "N:", len(outputBuffer)
-  for (t, s) in outputBuffer:
-    if prevTime:
-      print 'DELTA:', (t - prevTime)
-    prevTime = t
+  realOutputBuffer = coalesce(outputBuffer, COALESCE_WINDOW_MS)
+  for (curTime, curState) in realOutputBuffer:
+    printJSON(curTime, curState)
 
   outputBuffer = [] # reset it!!!
 
--- /tmp/test-tmpfs/nilfs-11932/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:42:35.032298006 -0500
+++ /tmp/test-tmpfs/nilfs-11934/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:42:43.000334874 -0500
@@ -421,7 +421,8 @@
   # optimization: coalesce entries that occur within N milliseconds
   # of one another, in order to make the output stream a bit cleaner
 
-  realOutputBuffer = coalesce(outputBuffer, COALESCE_WINDOW_MS)
+  #realOutputBuffer = coalesce(outputBuffer, COALESCE_WINDOW_MS)
+  realOutputBuffer = outputBuffer
   for (curTime, curState) in realOutputBuffer:
     printJSON(curTime, curState)
 
--- /tmp/test-tmpfs/nilfs-11939/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:42:45.855706437 -0500
+++ /tmp/test-tmpfs/nilfs-11947/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:43:06.592404848 -0500
@@ -421,8 +421,8 @@
   # optimization: coalesce entries that occur within N milliseconds
   # of one another, in order to make the output stream a bit cleaner
 
-  #realOutputBuffer = coalesce(outputBuffer, COALESCE_WINDOW_MS)
-  realOutputBuffer = outputBuffer
+  realOutputBuffer = coalesce(outputBuffer, COALESCE_WINDOW_MS)
+  #realOutputBuffer = outputBuffer
   for (curTime, curState) in realOutputBuffer:
     printJSON(curTime, curState)
 
--- /tmp/test-tmpfs/nilfs-11947/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:43:06.592404848 -0500
+++ /tmp/test-tmpfs/nilfs-11951/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:43:53.510510080 -0500
@@ -409,7 +409,8 @@
     else:
       cInd += 1
 
-  ret.append(lst[-1]) # always append the final entry
+  if lst:
+    ret.append(lst[-1]) # always append the final entry
 
   return ret
 
--- /tmp/test-tmpfs/nilfs-11951/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:43:53.510510080 -0500
+++ /tmp/test-tmpfs/nilfs-11953/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:44:07.366313048 -0500
@@ -412,6 +412,8 @@
   if lst:
     ret.append(lst[-1]) # always append the final entry
 
+  print [e[0] for e in ret]
+
   return ret
 
 
--- /tmp/test-tmpfs/nilfs-11953/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:44:07.366313048 -0500
+++ /tmp/test-tmpfs/nilfs-11960/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:44:10.113670543 -0500
@@ -412,7 +412,7 @@
   if lst:
     ret.append(lst[-1]) # always append the final entry
 
-  print [e[0] for e in ret]
+  print "WHAT?", [e[0] for e in ret]
 
   return ret
 
--- /tmp/test-tmpfs/nilfs-11960/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:44:10.113670543 -0500
+++ /tmp/test-tmpfs/nilfs-11964/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:45:25.746511950 -0500
@@ -402,6 +402,7 @@
     prev = lst[pInd]
     cur  = lst[cInd]
     delta = cur[0] - prev[0]
+
     if delta >= max_distance:
       ret.append(lst[cInd-1])
       pInd = cInd
--- /tmp/test-tmpfs/nilfs-11964/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:45:25.746511950 -0500
+++ /tmp/test-tmpfs/nilfs-11966/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:45:39.930357527 -0500
@@ -413,7 +413,8 @@
   if lst:
     ret.append(lst[-1]) # always append the final entry
 
-  print "WHAT?", [e[0] for e in ret]
+  print "BEFORE:", [e[0] for e in lst]
+  print "AFTER:", [e[0] for e in ret]
 
   return ret
 
--- /tmp/test-tmpfs/nilfs-11966/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:45:39.930357527 -0500
+++ /tmp/test-tmpfs/nilfs-11975/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:45:41.995626255 -0500
@@ -414,7 +414,7 @@
     ret.append(lst[-1]) # always append the final entry
 
   print "BEFORE:", [e[0] for e in lst]
-  print "AFTER:", [e[0] for e in ret]
+  print "AFTER: ", [e[0] for e in ret]
 
   return ret
 
--- /tmp/test-tmpfs/nilfs-11975/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:45:41.995626255 -0500
+++ /tmp/test-tmpfs/nilfs-11979/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:47:48.307061169 -0500
@@ -408,6 +408,7 @@
       pInd = cInd
       cInd = pInd + 1
     else:
+      pInd += 1
       cInd += 1
 
   if lst:
--- /tmp/test-tmpfs/nilfs-11979/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:47:48.307061169 -0500
+++ /tmp/test-tmpfs/nilfs-11988/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:48:02.903960376 -0500
@@ -404,7 +404,7 @@
     delta = cur[0] - prev[0]
 
     if delta >= max_distance:
-      ret.append(lst[cInd-1])
+      ret.append(prev)
       pInd = cInd
       cInd = pInd + 1
     else:
--- /tmp/test-tmpfs/nilfs-11988/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:48:02.903960376 -0500
+++ /tmp/test-tmpfs/nilfs-12504/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:49:22.270286552 -0500
@@ -414,8 +414,8 @@
   if lst:
     ret.append(lst[-1]) # always append the final entry
 
-  print "BEFORE:", [e[0] for e in lst]
-  print "AFTER: ", [e[0] for e in ret]
+  print "BEFORE:", [e[0] - lst[0][0] for e in lst]
+  print "AFTER: ", [e[0] - lst[0][0] for e in ret]
 
   return ret
 
--- /tmp/test-tmpfs/nilfs-12504/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-14 22:49:22.270286552 -0500
+++ /tmp/test-tmpfs/nilfs-12507/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 10:29:22.375096947 -0500
@@ -393,7 +393,10 @@
   outputBuffer.append((curSerializedTime, curSerializedState))
 
 
-def coalesce(lst, max_distance):
+# optimization: coalesce entries that occur within 'threshold'
+# milliseconds of one another, to make the output stream a bit cleaner
+
+def coalesce(lst, threshold):
   ret = []
   pInd = 0
   cInd = 1
@@ -403,7 +406,7 @@
     cur  = lst[cInd]
     delta = cur[0] - prev[0]
 
-    if delta >= max_distance:
+    if delta >= threshold:
       ret.append(prev)
       pInd = cInd
       cInd = pInd + 1
@@ -424,9 +427,6 @@
   global outputBuffer
   #print >> sys.stderr, "FLUSHHHHHHHHHHHHH!!!!!!"
 
-  # optimization: coalesce entries that occur within N milliseconds
-  # of one another, in order to make the output stream a bit cleaner
-
   realOutputBuffer = coalesce(outputBuffer, COALESCE_WINDOW_MS)
   #realOutputBuffer = outputBuffer
   for (curTime, curState) in realOutputBuffer:
--- /tmp/test-tmpfs/nilfs-12507/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 10:29:22.375096947 -0500
+++ /tmp/test-tmpfs/nilfs-12511/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 10:29:24.324350646 -0500
@@ -393,9 +393,8 @@
   outputBuffer.append((curSerializedTime, curSerializedState))
 
 
-# optimization: coalesce entries that occur within 'threshold'
+# Optimization: coalesce entries that occur within 'threshold'
 # milliseconds of one another, to make the output stream a bit cleaner
-
 def coalesce(lst, threshold):
   ret = []
   pInd = 0
--- /tmp/test-tmpfs/nilfs-12511/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 10:29:24.324350646 -0500
+++ /tmp/test-tmpfs/nilfs-12515/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 10:29:40.315431925 -0500
@@ -394,7 +394,8 @@
 
 
 # Optimization: coalesce entries that occur within 'threshold'
-# milliseconds of one another, to make the output stream a bit cleaner
+# milliseconds of one another and keep on the LAST one in a streak,
+# to make the output stream a bit cleaner
 def coalesce(lst, threshold):
   ret = []
   pInd = 0
--- /tmp/test-tmpfs/nilfs-12515/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 10:29:40.315431925 -0500
+++ /tmp/test-tmpfs/nilfs-12577/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 10:29:52.275988629 -0500
@@ -425,12 +425,10 @@
 
 def flushBuffer():
   global outputBuffer
-  #print >> sys.stderr, "FLUSHHHHHHHHHHHHH!!!!!!"
 
   realOutputBuffer = coalesce(outputBuffer, COALESCE_WINDOW_MS)
-  #realOutputBuffer = outputBuffer
-  for (curTime, curState) in realOutputBuffer:
-    printJSON(curTime, curState)
+  #for (curTime, curState) in realOutputBuffer:
+  #  printJSON(curTime, curState)
 
   outputBuffer = [] # reset it!!!
 
--- /tmp/test-tmpfs/nilfs-12577/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 10:29:52.275988629 -0500
+++ /tmp/test-tmpfs/nilfs-12642/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 10:36:41.490222680 -0500
@@ -395,7 +395,10 @@
 
 # Optimization: coalesce entries that occur within 'threshold'
 # milliseconds of one another and keep on the LAST one in a streak,
-# to make the output stream a bit cleaner
+# to make the output stream a bit cleaner.
+#
+# Oftentimes the GUI generates several events in quick succession,
+# and it's only useful to keep the LAST one in a streak.
 def coalesce(lst, threshold):
   ret = []
   pInd = 0
--- /tmp/test-tmpfs/nilfs-12642/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 10:36:41.490222680 -0500
+++ /tmp/test-tmpfs/nilfs-12646/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 10:41:34.948391125 -0500
@@ -420,8 +420,9 @@
   if lst:
     ret.append(lst[-1]) # always append the final entry
 
-  print "BEFORE:", [e[0] - lst[0][0] for e in lst]
-  print "AFTER: ", [e[0] - lst[0][0] for e in ret]
+  # debugging:
+  #print "BEFORE:", [e[0] - lst[0][0] for e in lst]
+  #print "AFTER: ", [e[0] - lst[0][0] for e in ret]
 
   return ret
 
--- /tmp/test-tmpfs/nilfs-12646/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 10:41:34.948391125 -0500
+++ /tmp/test-tmpfs/nilfs-12650/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 10:42:05.631382227 -0500
@@ -429,12 +429,10 @@
 
 def flushBuffer():
   global outputBuffer
+  for (curTime, curState) in coalesce(outputBuffer, COALESCE_WINDOW_MS):
+    printJSON(curTime, curState)
 
-  realOutputBuffer = coalesce(outputBuffer, COALESCE_WINDOW_MS)
-  #for (curTime, curState) in realOutputBuffer:
-  #  printJSON(curTime, curState)
-
-  outputBuffer = [] # reset it!!!
+  outputBuffer = [] # reset the buffer!!!
 
   return True # so that gobject.timeout_add will keep firing!
 
--- /tmp/test-tmpfs/nilfs-12650/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 10:42:05.631382227 -0500
+++ /tmp/test-tmpfs/nilfs-12655/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 10:42:27.369209822 -0500
@@ -451,7 +451,7 @@
 
 # the minimal set of required listeners to get what we want ...
 #
-# Known bugs:
+# Known shortcomings:
 # - won't fire an update event when a Chrome window is moved :(
 # - won't fire an update event when you CLOSE a window without first
 #   putting it in focus
--- /tmp/test-tmpfs/nilfs-12655/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 10:42:27.369209822 -0500
+++ /tmp/test-tmpfs/nilfs-12659/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 10:42:52.712506445 -0500
@@ -361,16 +361,6 @@
   return milliseconds_since_epoch
 
 
-# buffering optimization:
-
-# each entry consists of a tuple: (time, serialized state)
-
-# TODO: do we need to lock this or to use a concurrent Queue structure???
-# http://docs.python.org/library/queue.html
-outputBuffer = []
-
-COALESCE_WINDOW_MS = 100
-
 
 def printJSON(serializedTime, serializedState):
   # use the most compact separators:
@@ -378,6 +368,14 @@
   print serializedTime, compactJSON
 
 
+# Buffering optimization:
+
+# each entry consists of a tuple: (time, serialized state)
+# TODO: do we need to lock this or to use a concurrent Queue structure???
+# http://docs.python.org/library/queue.html
+outputBuffer = []
+
+
 def bufferDesktopState():
   global prevSerializedState, prevSerializedTime, outputBuffer
 
@@ -399,6 +397,7 @@
 #
 # Oftentimes the GUI generates several events in quick succession,
 # and it's only useful to keep the LAST one in a streak.
+COALESCE_WINDOW_MS = 100
 def coalesce(lst, threshold):
   ret = []
   pInd = 0
--- /tmp/test-tmpfs/nilfs-12659/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 10:42:52.712506445 -0500
+++ /tmp/test-tmpfs/nilfs-12663/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 10:43:11.352931194 -0500
@@ -374,6 +374,7 @@
 # TODO: do we need to lock this or to use a concurrent Queue structure???
 # http://docs.python.org/library/queue.html
 outputBuffer = []
+COALESCE_WINDOW_MS = 100
 
 
 def bufferDesktopState():
@@ -397,7 +398,6 @@
 #
 # Oftentimes the GUI generates several events in quick succession,
 # and it's only useful to keep the LAST one in a streak.
-COALESCE_WINDOW_MS = 100
 def coalesce(lst, threshold):
   ret = []
   pInd = 0
--- /tmp/test-tmpfs/nilfs-12663/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 10:43:11.352931194 -0500
+++ /tmp/test-tmpfs/nilfs-12670/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 10:43:25.585782620 -0500
@@ -420,8 +420,8 @@
     ret.append(lst[-1]) # always append the final entry
 
   # debugging:
-  #print "BEFORE:", [e[0] - lst[0][0] for e in lst]
-  #print "AFTER: ", [e[0] - lst[0][0] for e in ret]
+  print "BEFORE:", [e[0] - lst[0][0] for e in lst]
+  print "AFTER: ", [e[0] - lst[0][0] for e in ret]
 
   return ret
 
@@ -429,7 +429,8 @@
 def flushBuffer():
   global outputBuffer
   for (curTime, curState) in coalesce(outputBuffer, COALESCE_WINDOW_MS):
-    printJSON(curTime, curState)
+    pass
+    #printJSON(curTime, curState)
 
   outputBuffer = [] # reset the buffer!!!
 
--- /tmp/test-tmpfs/nilfs-12670/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 10:43:25.585782620 -0500
+++ /tmp/test-tmpfs/nilfs-12845/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 10:44:07.695260350 -0500
@@ -420,8 +420,8 @@
     ret.append(lst[-1]) # always append the final entry
 
   # debugging:
-  print "BEFORE:", [e[0] - lst[0][0] for e in lst]
-  print "AFTER: ", [e[0] - lst[0][0] for e in ret]
+  #print "BEFORE:", [e[0] - lst[0][0] for e in lst]
+  #print "AFTER: ", [e[0] - lst[0][0] for e in ret]
 
   return ret
 
@@ -429,8 +429,7 @@
 def flushBuffer():
   global outputBuffer
   for (curTime, curState) in coalesce(outputBuffer, COALESCE_WINDOW_MS):
-    pass
-    #printJSON(curTime, curState)
+    printJSON(curTime, curState)
 
   outputBuffer = [] # reset the buffer!!!
 
--- /tmp/test-tmpfs/nilfs-12845/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 10:44:07.695260350 -0500
+++ /tmp/test-tmpfs/nilfs-12851/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 11:13:22.893544647 -0500
@@ -366,6 +366,7 @@
   # use the most compact separators:
   compactJSON = json.dumps(serializedState, separators=(',',':'))
   print serializedTime, compactJSON
+  sys.stdout.flush() # force a newline flush
 
 
 # Buffering optimization:
--- /tmp/test-tmpfs/nilfs-13177/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 11:13:28.332250659 -0500
+++ /tmp/test-tmpfs/nilfs-13194/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:06:46.095520272 -0500
@@ -429,7 +429,8 @@
 
 def flushBuffer():
   global outputBuffer
-  for (curTime, curState) in coalesce(outputBuffer, COALESCE_WINDOW_MS):
+  #for (curTime, curState) in coalesce(outputBuffer, COALESCE_WINDOW_MS):
+  for (curTime, curState) in outputBuffer:
     printJSON(curTime, curState)
 
   outputBuffer = [] # reset the buffer!!!
--- /tmp/test-tmpfs/nilfs-13194/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:06:46.095520272 -0500
+++ /tmp/test-tmpfs/nilfs-13196/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:08:47.122228882 -0500
@@ -429,8 +429,8 @@
 
 def flushBuffer():
   global outputBuffer
-  #for (curTime, curState) in coalesce(outputBuffer, COALESCE_WINDOW_MS):
-  for (curTime, curState) in outputBuffer:
+  for (curTime, curState) in coalesce(outputBuffer, COALESCE_WINDOW_MS):
+  #for (curTime, curState) in outputBuffer: # unoptimized: don't coalesce
     printJSON(curTime, curState)
 
   outputBuffer = [] # reset the buffer!!!
--- /tmp/test-tmpfs/nilfs-13196/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:08:47.122228882 -0500
+++ /tmp/test-tmpfs/nilfs-13198/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:08:49.548543813 -0500
@@ -429,8 +429,8 @@
 
 def flushBuffer():
   global outputBuffer
-  for (curTime, curState) in coalesce(outputBuffer, COALESCE_WINDOW_MS):
   #for (curTime, curState) in outputBuffer: # unoptimized: don't coalesce
+  for (curTime, curState) in coalesce(outputBuffer, COALESCE_WINDOW_MS):
     printJSON(curTime, curState)
 
   outputBuffer = [] # reset the buffer!!!
--- /tmp/test-tmpfs/nilfs-13205/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:08:50.522670253 -0500
+++ /tmp/test-tmpfs/nilfs-13215/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:09:54.524977771 -0500
@@ -429,8 +429,8 @@
 
 def flushBuffer():
   global outputBuffer
-  #for (curTime, curState) in outputBuffer: # unoptimized: don't coalesce
-  for (curTime, curState) in coalesce(outputBuffer, COALESCE_WINDOW_MS):
+  for (curTime, curState) in outputBuffer: # unoptimized: don't coalesce
+  #for (curTime, curState) in coalesce(outputBuffer, COALESCE_WINDOW_MS):
     printJSON(curTime, curState)
 
   outputBuffer = [] # reset the buffer!!!
--- /tmp/test-tmpfs/nilfs-13215/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:09:54.524977771 -0500
+++ /tmp/test-tmpfs/nilfs-13217/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:15:31.179679524 -0500
@@ -429,8 +429,8 @@
 
 def flushBuffer():
   global outputBuffer
-  for (curTime, curState) in outputBuffer: # unoptimized: don't coalesce
-  #for (curTime, curState) in coalesce(outputBuffer, COALESCE_WINDOW_MS):
+  #for (curTime, curState) in outputBuffer: # unoptimized: don't coalesce
+  for (curTime, curState) in coalesce(outputBuffer, COALESCE_WINDOW_MS):
     printJSON(curTime, curState)
 
   outputBuffer = [] # reset the buffer!!!
--- /tmp/test-tmpfs/nilfs-13309/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:15:32.058793652 -0500
+++ /tmp/test-tmpfs/nilfs-13441/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:24:44.397476675 -0500
@@ -429,8 +429,8 @@
 
 def flushBuffer():
   global outputBuffer
-  #for (curTime, curState) in outputBuffer: # unoptimized: don't coalesce
-  for (curTime, curState) in coalesce(outputBuffer, COALESCE_WINDOW_MS):
+  for (curTime, curState) in outputBuffer: # unoptimized: don't coalesce
+  #for (curTime, curState) in coalesce(outputBuffer, COALESCE_WINDOW_MS):
     printJSON(curTime, curState)
 
   outputBuffer = [] # reset the buffer!!!
--- /tmp/test-tmpfs/nilfs-13441/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:24:44.397476675 -0500
+++ /tmp/test-tmpfs/nilfs-13450/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:34:44.045302933 -0500
@@ -429,8 +429,7 @@
 
 def flushBuffer():
   global outputBuffer
-  for (curTime, curState) in outputBuffer: # unoptimized: don't coalesce
-  #for (curTime, curState) in coalesce(outputBuffer, COALESCE_WINDOW_MS):
+  for (curTime, curState) in coalesce(outputBuffer, COALESCE_WINDOW_MS):
     printJSON(curTime, curState)
 
   outputBuffer = [] # reset the buffer!!!
--- /tmp/test-tmpfs/nilfs-13450/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:34:44.045302933 -0500
+++ /tmp/test-tmpfs/nilfs-13453/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:35:15.652405709 -0500
@@ -429,6 +429,7 @@
 
 def flushBuffer():
   global outputBuffer
+  #for (curTime, curState) in outputBuffer: # unoptimized: don't coalesce
   for (curTime, curState) in coalesce(outputBuffer, COALESCE_WINDOW_MS):
     printJSON(curTime, curState)
 
--- /tmp/test-tmpfs/nilfs-13462/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:35:20.964095200 -0500
+++ /tmp/test-tmpfs/nilfs-13466/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:39:00.982656413 -0500
@@ -393,6 +393,7 @@
   outputBuffer.append((curSerializedTime, curSerializedState))
 
 
+'''
 # Optimization: coalesce entries that occur within 'threshold'
 # milliseconds of one another and keep on the LAST one in a streak,
 # to make the output stream a bit cleaner.
@@ -436,6 +437,7 @@
   outputBuffer = [] # reset the buffer!!!
 
   return True # so that gobject.timeout_add will keep firing!
+'''
 
 
 def frameEventHandler(event):
@@ -479,7 +481,7 @@
 
 gobject.timeout_add(200, asyncHandler)
 
-gobject.timeout_add(5000, flushBuffer) # periodically flush the print buffer
+#gobject.timeout_add(5000, flushBuffer) # periodically flush the print buffer
 
 try:
    # be asynchronous to GREATLY speed up performance:
@@ -487,6 +489,6 @@
 except KeyboardInterrupt:
    pass
 finally:
-  flushBuffer()
+  #flushBuffer()
   pyatspi.Registry.stop()
 
--- /tmp/test-tmpfs/nilfs-13466/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:39:00.982656413 -0500
+++ /tmp/test-tmpfs/nilfs-13479/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:40:14.533204797 -0500
@@ -393,6 +393,12 @@
   outputBuffer.append((curSerializedTime, curSerializedState))
 
 
+def printDesktopState():
+  curSerializedState = myDesktop.serialize()
+  curSerializedTime = get_ms_since_epoch()
+  printJSON(curSerializedTime, curSerializedState)
+
+
 '''
 # Optimization: coalesce entries that occur within 'threshold'
 # milliseconds of one another and keep on the LAST one in a streak,
@@ -449,7 +455,8 @@
   #for i in range(100): print # clear screen
   #myDesktop.printMe()
 
-  bufferDesktopState()
+  #bufferDesktopState()
+  printDesktopState()
 
 
 # the minimal set of required listeners to get what we want ...
@@ -469,7 +476,8 @@
 
 
 
-bufferDesktopState() # buffer up the initial state
+#bufferDesktopState() # buffer up the initial state
+printDesktopState() # print the initial desktop state
 
 
 # This idiom of gobject.timeout_add, pumpQueuedEvents, and async=True
--- /tmp/test-tmpfs/nilfs-13479/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:40:14.533204797 -0500
+++ /tmp/test-tmpfs/nilfs-13483/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:41:41.105444027 -0500
@@ -369,7 +369,7 @@
   sys.stdout.flush() # force a newline flush
 
 
-# Buffering optimization:
+# Buffering optimization (DON'T USE IT FOR NOW, since it's semi-flaky):
 
 # each entry consists of a tuple: (time, serialized state)
 # TODO: do we need to lock this or to use a concurrent Queue structure???
@@ -477,7 +477,7 @@
 
 
 #bufferDesktopState() # buffer up the initial state
-printDesktopState() # print the initial desktop state
+printDesktopState()   # print the initial desktop state
 
 
 # This idiom of gobject.timeout_add, pumpQueuedEvents, and async=True
--- /tmp/test-tmpfs/nilfs-13483/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:41:41.105444027 -0500
+++ /tmp/test-tmpfs/nilfs-13486/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:42:05.073555753 -0500
@@ -368,7 +368,13 @@
   print serializedTime, compactJSON
   sys.stdout.flush() # force a newline flush
 
+def printDesktopState():
+  curSerializedState = myDesktop.serialize()
+  curSerializedTime = get_ms_since_epoch()
+  printJSON(curSerializedTime, curSerializedState)
 
+
+'''
 # Buffering optimization (DON'T USE IT FOR NOW, since it's semi-flaky):
 
 # each entry consists of a tuple: (time, serialized state)
@@ -393,13 +399,6 @@
   outputBuffer.append((curSerializedTime, curSerializedState))
 
 
-def printDesktopState():
-  curSerializedState = myDesktop.serialize()
-  curSerializedTime = get_ms_since_epoch()
-  printJSON(curSerializedTime, curSerializedState)
-
-
-'''
 # Optimization: coalesce entries that occur within 'threshold'
 # milliseconds of one another and keep on the LAST one in a streak,
 # to make the output stream a bit cleaner.
--- /tmp/test-tmpfs/nilfs-13488/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:42:11.990453762 -0500
+++ /tmp/test-tmpfs/nilfs-13490/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:42:23.315924138 -0500
@@ -451,9 +451,6 @@
   #print get_ms_since_epoch(), event.type
   myDesktop.updateApp(event.host_application)
 
-  #for i in range(100): print # clear screen
-  #myDesktop.printMe()
-
   #bufferDesktopState()
   printDesktopState()
 
--- /tmp/test-tmpfs/nilfs-13542/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:42:28.176555190 -0500
+++ /tmp/test-tmpfs/nilfs-13546/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:51:50.482566805 -0500
@@ -372,6 +372,7 @@
   curSerializedState = myDesktop.serialize()
   curSerializedTime = get_ms_since_epoch()
   printJSON(curSerializedTime, curSerializedState)
+  sys.stdout.flush() # force a newline flush
 
 
 '''
--- /tmp/test-tmpfs/nilfs-13546/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:51:50.482566805 -0500
+++ /tmp/test-tmpfs/nilfs-13777/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:51:56.130300199 -0500
@@ -372,7 +372,6 @@
   curSerializedState = myDesktop.serialize()
   curSerializedTime = get_ms_since_epoch()
   printJSON(curSerializedTime, curSerializedState)
-  sys.stdout.flush() # force a newline flush
 
 
 '''
--- /tmp/test-tmpfs/nilfs-13777/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 12:51:56.130300199 -0500
+++ /tmp/test-tmpfs/nilfs-13781/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:00:41.379758497 -0500
@@ -7,6 +7,9 @@
 #          check the "Enable assistive technologies" box,
 #          then log out and log back in.
 
+# Output to a series of log files with the prefix of sys.argv[1]
+# and the suffix of .0, .1, etc.
+
 
 import pyatspi
 import gobject # requires the gtk package of some sort
--- /tmp/test-tmpfs/nilfs-13781/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:00:41.379758497 -0500
+++ /tmp/test-tmpfs/nilfs-13784/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:01:06.913083402 -0500
@@ -8,7 +8,9 @@
 #          then log out and log back in.
 
 # Output to a series of log files with the prefix of sys.argv[1]
-# and the suffix of .0, .1, etc.
+# and the suffix of .0, .1, etc.,
+# switching over to a new file whenever MAX_LINES has been reached
+MAX_LINES = 1000
 
 
 import pyatspi
--- /tmp/test-tmpfs/nilfs-13784/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:01:06.913083402 -0500
+++ /tmp/test-tmpfs/nilfs-13788/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:01:13.182899843 -0500
@@ -10,7 +10,7 @@
 # Output to a series of log files with the prefix of sys.argv[1]
 # and the suffix of .0, .1, etc.,
 # switching over to a new file whenever MAX_LINES has been reached
-MAX_LINES = 1000
+MAX_LINES = 500
 
 
 import pyatspi
--- /tmp/test-tmpfs/nilfs-13788/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:01:13.182899843 -0500
+++ /tmp/test-tmpfs/nilfs-13793/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:01:40.383441822 -0500
@@ -7,10 +7,11 @@
 #          check the "Enable assistive technologies" box,
 #          then log out and log back in.
 
-# Output to a series of log files with the prefix of sys.argv[1]
-# and the suffix of .0, .1, etc.,
-# switching over to a new file whenever MAX_LINES has been reached
-MAX_LINES = 500
+# Output to a series of log files with the prefix of sys.argv[1] and the
+# suffix of .0, .1, etc., switching over to a new file whenever
+# MAX_LINES_IN_LOGFILE has been reached
+
+MAX_LINES_IN_LOGFILE = 500
 
 
 import pyatspi
--- /tmp/test-tmpfs/nilfs-13793/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:01:40.383441822 -0500
+++ /tmp/test-tmpfs/nilfs-13816/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:02:06.640860969 -0500
@@ -11,8 +11,6 @@
 # suffix of .0, .1, etc., switching over to a new file whenever
 # MAX_LINES_IN_LOGFILE has been reached
 
-MAX_LINES_IN_LOGFILE = 500
-
 
 import pyatspi
 import gobject # requires the gtk package of some sort
@@ -493,6 +491,11 @@
 
 #gobject.timeout_add(5000, flushBuffer) # periodically flush the print buffer
 
+
+MAX_LINES_IN_LOGFILE = 500
+outfile_base = sys.argv[1]
+
+
 try:
    # be asynchronous to GREATLY speed up performance:
    pyatspi.Registry.start(async=True, gil=False)
--- /tmp/test-tmpfs/nilfs-13816/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:02:06.640860969 -0500
+++ /tmp/test-tmpfs/nilfs-13818/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:03:18.906271006 -0500
@@ -7,16 +7,24 @@
 #          check the "Enable assistive technologies" box,
 #          then log out and log back in.
 
+
+import sys, json, time
+
+
 # Output to a series of log files with the prefix of sys.argv[1] and the
 # suffix of .0, .1, etc., switching over to a new file whenever
 # MAX_LINES_IN_LOGFILE has been reached
 
+MAX_LINES_IN_LOGFILE = 500
+OUTFILE_BASE = sys.argv[1]
+num_lines_in_cur_file = 0
+cur_file_index = 0
+
+
 
 import pyatspi
 import gobject # requires the gtk package of some sort
 
-import sys, json, time
-
 
 # Let's not support Firefox for now since it seems to have some quirks.
 #
@@ -492,10 +500,6 @@
 #gobject.timeout_add(5000, flushBuffer) # periodically flush the print buffer
 
 
-MAX_LINES_IN_LOGFILE = 500
-outfile_base = sys.argv[1]
-
-
 try:
    # be asynchronous to GREATLY speed up performance:
    pyatspi.Registry.start(async=True, gil=False)
--- /tmp/test-tmpfs/nilfs-13818/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:03:18.906271006 -0500
+++ /tmp/test-tmpfs/nilfs-13820/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:03:20.492477549 -0500
@@ -21,7 +21,6 @@
 cur_file_index = 0
 
 
-
 import pyatspi
 import gobject # requires the gtk package of some sort
 
--- /tmp/test-tmpfs/nilfs-13820/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:03:20.492477549 -0500
+++ /tmp/test-tmpfs/nilfs-13822/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:03:23.747901451 -0500
@@ -14,7 +14,6 @@
 # Output to a series of log files with the prefix of sys.argv[1] and the
 # suffix of .0, .1, etc., switching over to a new file whenever
 # MAX_LINES_IN_LOGFILE has been reached
-
 MAX_LINES_IN_LOGFILE = 500
 OUTFILE_BASE = sys.argv[1]
 num_lines_in_cur_file = 0
--- /tmp/test-tmpfs/nilfs-13828/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:03:26.396246302 -0500
+++ /tmp/test-tmpfs/nilfs-13832/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:04:08.426719217 -0500
@@ -375,8 +375,8 @@
 def printJSON(serializedTime, serializedState):
   # use the most compact separators:
   compactJSON = json.dumps(serializedState, separators=(',',':'))
-  print serializedTime, compactJSON
-  sys.stdout.flush() # force a newline flush
+  print >> cur_fd, serializedTime, compactJSON
+  cur_fd.flush() # force a flush to disk
 
 def printDesktopState():
   curSerializedState = myDesktop.serialize()
--- /tmp/test-tmpfs/nilfs-13832/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:04:08.426719217 -0500
+++ /tmp/test-tmpfs/nilfs-13837/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:04:45.337525442 -0500
@@ -19,6 +19,8 @@
 num_lines_in_cur_file = 0
 cur_file_index = 0
 
+cur_fd = open(OUTFILE_BASE + '.' + str(cur_file_index), 'w')
+
 
 import pyatspi
 import gobject # requires the gtk package of some sort
@@ -378,6 +380,9 @@
   print >> cur_fd, serializedTime, compactJSON
   cur_fd.flush() # force a flush to disk
 
+  # roll over to a new file if necessary
+
+
 def printDesktopState():
   curSerializedState = myDesktop.serialize()
   curSerializedTime = get_ms_since_epoch()
--- /tmp/test-tmpfs/nilfs-13837/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:04:45.337525442 -0500
+++ /tmp/test-tmpfs/nilfs-13841/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:05:30.593418241 -0500
@@ -18,7 +18,6 @@
 OUTFILE_BASE = sys.argv[1]
 num_lines_in_cur_file = 0
 cur_file_index = 0
-
 cur_fd = open(OUTFILE_BASE + '.' + str(cur_file_index), 'w')
 
 
@@ -381,6 +380,10 @@
   cur_fd.flush() # force a flush to disk
 
   # roll over to a new file if necessary
+  num_lines_in_cur_file += 1
+  if num_lines_in_cur_file >= MAX_LINES_IN_LOGFILE:
+    cur_fd.close()
+    num_lines_in_cur_file = 0
 
 
 def printDesktopState():
@@ -511,4 +514,5 @@
 finally:
   #flushBuffer()
   pyatspi.Registry.stop()
+  cur_fd.close()
 
--- /tmp/test-tmpfs/nilfs-13841/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:05:30.593418241 -0500
+++ /tmp/test-tmpfs/nilfs-13843/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:05:51.633157821 -0500
@@ -383,7 +383,10 @@
   num_lines_in_cur_file += 1
   if num_lines_in_cur_file >= MAX_LINES_IN_LOGFILE:
     cur_fd.close()
+
+    cur_file_index += 1
     num_lines_in_cur_file = 0
+    cur_fd = open(OUTFILE_BASE + '.' + str(cur_file_index), 'w')
 
 
 def printDesktopState():
--- /tmp/test-tmpfs/nilfs-13843/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:05:51.633157821 -0500
+++ /tmp/test-tmpfs/nilfs-13849/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:05:55.438653333 -0500
@@ -14,7 +14,7 @@
 # Output to a series of log files with the prefix of sys.argv[1] and the
 # suffix of .0, .1, etc., switching over to a new file whenever
 # MAX_LINES_IN_LOGFILE has been reached
-MAX_LINES_IN_LOGFILE = 500
+MAX_LINES_IN_LOGFILE = 5
 OUTFILE_BASE = sys.argv[1]
 num_lines_in_cur_file = 0
 cur_file_index = 0
--- /tmp/test-tmpfs/nilfs-13849/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:05:55.438653333 -0500
+++ /tmp/test-tmpfs/nilfs-13851/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:06:16.230360600 -0500
@@ -374,6 +374,8 @@
 
 
 def printJSON(serializedTime, serializedState):
+  global cur_fd
+
   # use the most compact separators:
   compactJSON = json.dumps(serializedState, separators=(',',':'))
   print >> cur_fd, serializedTime, compactJSON
--- /tmp/test-tmpfs/nilfs-13851/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:06:16.230360600 -0500
+++ /tmp/test-tmpfs/nilfs-13854/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:06:21.415035690 -0500
@@ -378,7 +378,9 @@
 
   # use the most compact separators:
   compactJSON = json.dumps(serializedState, separators=(',',':'))
+
   print >> cur_fd, serializedTime, compactJSON
+
   cur_fd.flush() # force a flush to disk
 
   # roll over to a new file if necessary
--- /tmp/test-tmpfs/nilfs-13854/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:06:21.415035690 -0500
+++ /tmp/test-tmpfs/nilfs-13856/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:06:31.111298226 -0500
@@ -374,7 +374,7 @@
 
 
 def printJSON(serializedTime, serializedState):
-  global cur_fd
+  global cur_fd, num_lines_in_cur_file, cur_file_index
 
   # use the most compact separators:
   compactJSON = json.dumps(serializedState, separators=(',',':'))
--- /tmp/test-tmpfs/nilfs-13856/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:06:31.111298226 -0500
+++ /tmp/test-tmpfs/nilfs-13868/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:06:34.006675227 -0500
@@ -374,6 +374,7 @@
 
 
 def printJSON(serializedTime, serializedState):
+  # nasty globals!
   global cur_fd, num_lines_in_cur_file, cur_file_index
 
   # use the most compact separators:
--- /tmp/test-tmpfs/nilfs-13868/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:06:34.006675227 -0500
+++ /tmp/test-tmpfs/nilfs-13872/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:07:43.615738832 -0500
@@ -14,7 +14,7 @@
 # Output to a series of log files with the prefix of sys.argv[1] and the
 # suffix of .0, .1, etc., switching over to a new file whenever
 # MAX_LINES_IN_LOGFILE has been reached
-MAX_LINES_IN_LOGFILE = 5
+MAX_LINES_IN_LOGFILE = 500
 OUTFILE_BASE = sys.argv[1]
 num_lines_in_cur_file = 0
 cur_file_index = 0
--- /tmp/test-tmpfs/nilfs-13875/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:07:52.572905110 -0500
+++ /tmp/test-tmpfs/nilfs-13883/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:08:04.356439394 -0500
@@ -14,7 +14,7 @@
 # Output to a series of log files with the prefix of sys.argv[1] and the
 # suffix of .0, .1, etc., switching over to a new file whenever
 # MAX_LINES_IN_LOGFILE has been reached
-MAX_LINES_IN_LOGFILE = 500
+MAX_LINES_IN_LOGFILE = 5
 OUTFILE_BASE = sys.argv[1]
 num_lines_in_cur_file = 0
 cur_file_index = 0
--- /tmp/test-tmpfs/nilfs-13883/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:08:04.356439394 -0500
+++ /tmp/test-tmpfs/nilfs-14033/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:08:37.627771498 -0500
@@ -14,7 +14,7 @@
 # Output to a series of log files with the prefix of sys.argv[1] and the
 # suffix of .0, .1, etc., switching over to a new file whenever
 # MAX_LINES_IN_LOGFILE has been reached
-MAX_LINES_IN_LOGFILE = 5
+MAX_LINES_IN_LOGFILE = 500
 OUTFILE_BASE = sys.argv[1]
 num_lines_in_cur_file = 0
 cur_file_index = 0
--- /tmp/test-tmpfs/nilfs-14033/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:08:37.627771498 -0500
+++ /tmp/test-tmpfs/nilfs-14042/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:32:07.656076222 -0500
@@ -1,3 +1,5 @@
+#!/usr/bin/env python
+
 # GUI tracer that works with the Linux AT-SPI Accessibility API
 #
 # Tested on Fedora 14 running the GNOME GUI environment
--- /tmp/test-tmpfs/nilfs-14042/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:32:07.656076222 -0500
+++ /tmp/test-tmpfs/nilfs-15050/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:34:45.405926666 -0500
@@ -1,5 +1,3 @@
-#!/usr/bin/env python
-
 # GUI tracer that works with the Linux AT-SPI Accessibility API
 #
 # Tested on Fedora 14 running the GNOME GUI environment
--- /tmp/test-tmpfs/nilfs-15050/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 17:34:45.405926666 -0500
+++ /tmp/test-tmpfs/nilfs-15054/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 19:06:06.213840934 -0500
@@ -14,7 +14,7 @@
 # Output to a series of log files with the prefix of sys.argv[1] and the
 # suffix of .0, .1, etc., switching over to a new file whenever
 # MAX_LINES_IN_LOGFILE has been reached
-MAX_LINES_IN_LOGFILE = 500
+MAX_LINES_IN_LOGFILE = 10000
 OUTFILE_BASE = sys.argv[1]
 num_lines_in_cur_file = 0
 cur_file_index = 0
--- /tmp/test-tmpfs/nilfs-15069/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 19:06:11.996117306 -0500
+++ /tmp/test-tmpfs/nilfs-19682/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 19:06:38.729976653 -0500
@@ -14,7 +14,7 @@
 # Output to a series of log files with the prefix of sys.argv[1] and the
 # suffix of .0, .1, etc., switching over to a new file whenever
 # MAX_LINES_IN_LOGFILE has been reached
-MAX_LINES_IN_LOGFILE = 10000
+MAX_LINES_IN_LOGFILE = 10000 # 10000 * ~1K per entry = ~10MB per log file
 OUTFILE_BASE = sys.argv[1]
 num_lines_in_cur_file = 0
 cur_file_index = 0
--- /tmp/test-tmpfs/nilfs-19682/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-15 19:06:38.729976653 -0500
+++ /tmp/test-tmpfs/nilfs-19686/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-16 16:04:48.092026318 -0500
@@ -400,77 +400,6 @@
   printJSON(curSerializedTime, curSerializedState)
 
 
-'''
-# Buffering optimization (DON'T USE IT FOR NOW, since it's semi-flaky):
-
-# each entry consists of a tuple: (time, serialized state)
-# TODO: do we need to lock this or to use a concurrent Queue structure???
-# http://docs.python.org/library/queue.html
-outputBuffer = []
-COALESCE_WINDOW_MS = 100
-
-
-def bufferDesktopState():
-  global prevSerializedState, prevSerializedTime, outputBuffer
-
-  curSerializedState = myDesktop.serialize()
-  curSerializedTime = get_ms_since_epoch()
-
-  # ignore buffering identical consecutive entries:
-  if outputBuffer:
-    prevSerializedState = outputBuffer[-1][1]
-    if curSerializedState == prevSerializedState:
-      return # PUNT!
-
-  outputBuffer.append((curSerializedTime, curSerializedState))
-
-
-# Optimization: coalesce entries that occur within 'threshold'
-# milliseconds of one another and keep on the LAST one in a streak,
-# to make the output stream a bit cleaner.
-#
-# Oftentimes the GUI generates several events in quick succession,
-# and it's only useful to keep the LAST one in a streak.
-def coalesce(lst, threshold):
-  ret = []
-  pInd = 0
-  cInd = 1
-
-  while cInd < len(lst):
-    prev = lst[pInd]
-    cur  = lst[cInd]
-    delta = cur[0] - prev[0]
-
-    if delta >= threshold:
-      ret.append(prev)
-      pInd = cInd
-      cInd = pInd + 1
-    else:
-      pInd += 1
-      cInd += 1
-
-  if lst:
-    ret.append(lst[-1]) # always append the final entry
-
-  # debugging:
-  #print "BEFORE:", [e[0] - lst[0][0] for e in lst]
-  #print "AFTER: ", [e[0] - lst[0][0] for e in ret]
-
-  return ret
-
-
-def flushBuffer():
-  global outputBuffer
-  #for (curTime, curState) in outputBuffer: # unoptimized: don't coalesce
-  for (curTime, curState) in coalesce(outputBuffer, COALESCE_WINDOW_MS):
-    printJSON(curTime, curState)
-
-  outputBuffer = [] # reset the buffer!!!
-
-  return True # so that gobject.timeout_add will keep firing!
-'''
-
-
 def frameEventHandler(event):
   if event.source.getRole() != pyatspi.constants.ROLE_FRAME: return
 
--- /tmp/test-tmpfs/nilfs-19686/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-16 16:04:48.092026318 -0500
+++ /tmp/test-tmpfs/nilfs-19690/researcher/BurritoBook/GUItracing/GUItracer.py	2011-11-16 16:04:58.460935389 -0500
@@ -406,7 +406,6 @@
   #print get_ms_since_epoch(), event.type
   myDesktop.updateApp(event.host_application)
 
-  #bufferDesktopState()
   printDesktopState()
 
 
@@ -427,7 +426,6 @@
 
 
 
-#bufferDesktopState() # buffer up the initial state
 printDesktopState()   # print the initial desktop state
 
 
@@ -449,7 +447,6 @@
 except KeyboardInterrupt:
    pass
 finally:
-  #flushBuffer()
   pyatspi.Registry.stop()
   cur_fd.close()
 
